version: "3.7"

#################################################################
#                            DEFAULTS                           #
#################################################################
x-defaults: &defaults
  restart: always
  extra_hosts:
    - "host.docker.internal:host-gateway"

#################################################################
#                            SERVICES                           #
#################################################################
services:
  # =========================
  # =         PROXY         =
  # =========================
  traefik:
    <<: *defaults
    image: traefik:latest
    container_name: traefik
    command:
      # - "--log.level=DEBUG"
      - "--providers.file.directory=/conf"
      - "--providers.file.watch=true"
      - "--providers.docker=true"
      - "--providers.docker.network=traefik"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.constraints=!LabelRegex(`bjoetiek.env`,`.+`)"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.middlewares=secure-https@file"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.le-tls.acme.tlsChallenge=true"
      - "--certificatesresolvers.le-tls.acme.email={{ general_mail_admin }}@{{ general_domain_default }}"
      - "--certificatesresolvers.le-tls.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.le-tls-staging.acme.tlsChallenge=true"
      - "--certificatesresolvers.le-tls-staging.acme.email={{ general_mail_admin }}@{{ general_domain_default }}"
      - "--certificatesresolvers.le-tls-staging.acme.storage=/letsencrypt/acme-staging.json"
      - "--certificatesResolvers.le-tls-staging.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--api=true"
      - "--ping.manualrouting=true"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - traefik
    volumes:
      - "./traefik:/conf"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "traefik-cert:/letsencrypt/"
    environment:
      - "TZ={{ general_timezone }}"

  traefik-forward-auth:
    <<: *defaults
    image: thomseddon/traefik-forward-auth:2
    container_name: traefik-forward-auth
    networks:
      - traefik
    environment:
      - "COOKIE_DOMAIN={{ general_domain_default }}"
      - "DEFAULT_PROVIDER=oidc"
      - "SECRET={{ app_traefik_forward_auth_secret }}"
      - "PROVIDERS_OIDC_ISSUER_URL={{ app_traefik_forward_auth_oidc_issuer_url }}"
      - "PROVIDERS_OIDC_CLIENT_ID={{ app_traefik_forward_auth_oidc_client_id }}"
      - "PROVIDERS_OIDC_CLIENT_SECRET={{ app_traefik_forward_auth_oidc_client_secret }}"

  # =========================
  # =         HOMER         =
  # =========================
  homer:
    <<: *defaults
    image: b4bz/homer:latest
    container_name: homer
    networks:
      - traefik
    volumes:
      - ./homer/config.yml:/www/assets/config.yml
      - ./homer/logos:/www/assets/logos
    environment:
      - "TZ={{ general_timezone }}"
      - "UID={{ ansible_real_user_id }}"
      - "GID={{ ansible_real_group_id }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homer.entrypoints=websecure"
      - "traefik.http.routers.homer.rule=Host(`start.{{ general_domain_default }}`)"
      - "traefik.http.routers.homer.tls.certresolver=le-tls"

  # =========================
  # =       NEXTCLOUD       =
  # =========================
  nextcloud:
    <<: *defaults
    build: ./nextcloud
    container_name: nextcloud
    hostname: nextcloud
    networks:
      - traefik
      - nextcloud
    depends_on:
      - nc-db
    volumes:
      - "{{ general_path_appdata }}/nextcloud/nextcloud/config:/var/www/html"
      - "{{ general_path_appdata }}/nextcloud/nextcloud/data:/var/www/html/data"
    environment:
      - "TZ={{ general_timezone }}"
      - "MYSQL_DATABASE=nextcloud"
      - "MYSQL_USER=nextcloud"
      - "MYSQL_PASSWORD={{ app_nextcloud_db_pass_nextcloud }}"
      - "MYSQL_HOST=nc-db"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.rule=Host(`nextcloud.{{ general_domain_default }}`, `bestanden.{{ general_domain_tuinfeest }}`)"
      - "traefik.http.routers.nextcloud.tls.certresolver=le-tls"
      - "traefik.http.routers.nextcloud.middlewares=nextcloud-redirect-dav@file, nextcloud-redirect-webfinger@file"

  nc-db:
    <<: *defaults
    image: mariadb:10
    container_name: nc-db
    networks:
      - nextcloud
      - backup-nc-db
    volumes:
      - "{{ general_path_appdata }}/nextcloud/mariadb/data:/var/lib/mysql"
      - nc-db-dump:/backup
    environment:
      - "TZ={{ general_timezone }}"
      - "MYSQL_ROOT_PASSWORD={{ app_nextcloud_db_pass_root }}"
      - "MYSQL_PASSWORD={{ app_nextcloud_db_pass_nextcloud }}"
      - "MYSQL_DATABASE=nextcloud"
      - "MYSQL_USER=nextcloud"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin -u $$MYSQL_USER --password=$$MYSQL_PASSWORD ping || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  # =========================
  # =         NGINX         =
  # =========================
  nginx-tuinfeest-beta:
    <<: *defaults
    image: nginx:latest
    container_name: nginx-tuinfeest-beta
    networks:
      - traefik
    volumes:
      - "{{ general_path_appdata }}/nginx/tuinfeest-beta:/usr/share/nginx/html"
    environment:
      - "TZ={{ general_timezone }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-tuinfeest-beta.entrypoints=websecure"
      - "traefik.http.routers.nginx-tuinfeest-beta.rule=Host(`beta.{{ general_domain_tuinfeest }}`)"
      - "traefik.http.routers.nginx-tuinfeest-beta.tls.certresolver=le-tls"

{% for year in range(2019,2020+1) %}
  nginx-tuinfeest-archive-{{ year }}:
    <<: *defaults
    image: nginx:latest
    container_name: "nginx-tf-archive-{{ year }}"
    networks:
      - traefik
    volumes:
      - "{{ general_path_appdata }}/nginx/tuinfeest-archive/{{ year }}:/usr/share/nginx/html"
    environment:
      - "TZ={{ general_timezone }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-tuinfeest-archive-{{ year }}.entrypoints=websecure"
      - "traefik.http.routers.nginx-tuinfeest-archive-{{ year }}.rule=Host(`{{ year }}.{{ general_domain_tuinfeest }}`)"
      - "traefik.http.routers.nginx-tuinfeest-archive-{{ year }}.tls.certresolver=le-tls"
{% endfor %}

  # =========================
  # =         PASSIT        =
  # =========================
  passit:
    <<: *defaults
    image: passit/passit:stable
    container_name: passit
    networks:
      - traefik
      - passit
    environment:
      - "TZ={{ general_timezone }}"
      - "DATABASE_SERVICE_NAME=passit-db"
      - "DATABASE_NAME=passit"
      - "DATABASE_USER=passit"
      - "DATABASE_PASSWORD={{ app_passit_db_pass }}"
      - "DEFAULT_FROM_EMAIL=passit@{{ general_domain_tuinfeest }}"
      - "EMAIL_CONFIRMATION_HOST=passit.{{ general_domain_tuinfeest }}"
      - "IS_PRIVATE_ORG_MODE=True"
      - "PRIVATE_ORG_MODE_DOMAIN_WHITELIST={{ general_domain_tuinfeest }}"
      - "SECRET_KEY={{ app_passit_secret_key }}"
      - "EMAIL_URL=smtp+tls://{{ mailjet_tuinfeest_username }}:{{ mailjet_tuinfeest_password }}@{{ mailjet_host }}:{{ mailjet_port }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.passit.entrypoints=websecure"
      - "traefik.http.routers.passit.rule=Host(`wachtwoorden.{{ general_domain_tuinfeest }}`)"
      - "traefik.http.routers.passit.tls.certresolver=le-tls"

  passit-db:
    <<: *defaults
    image: postgres:13-alpine
    container_name: passit-db
    networks:
      - passit
    volumes:
      - "{{ general_path_appdata }}/passit/postgres/data:/var/lib/postgresql/data"
      - passit-db-dump:/backup
    environment:
      - "TZ={{ general_timezone }}"
      - "POSTGRES_USER=passit"
      - "POSTGRES_PASSWORD={{ app_passit_db_pass }}"

  # =========================
  # =      IMAP-ALERTER     =
  # =========================
  imap-alerter:
    <<: *defaults
    image: jenswbe/imap-alerter:latest
    container_name: imap-alerter
    volumes:
      - ./imap-alerter:/app/config
      - "{{ general_path_appdata }}/imap-alerter/imap-alerter/data:/app/data"
    environment:
      - "TZ={{ general_timezone }}"

  # =========================
  # = IMAP SAVE ATTACHMENTS =
  # =========================
  isa-fetchmail:
    <<: *defaults
    image: jenswbe/imap-save-attachments:latest
    container_name: isa-fetchmail
    volumes:
      - ./isa/fetchmailrc:/config/.fetchmailrc
      - isa-output:/output
    environment:
      - "TZ={{ general_timezone }}"
      - "CRON_SCHEDULE=*/15 * * * *"

  isa-rclone:
    <<: *defaults
    image: rclone/rclone:latest
    container_name: isa-rclone
    command: "move /data/ nextcloud:{{ app_isa_rclone_dav_path }} --delete-empty-src-dirs --verbose"
    restart: "no" # Will be called by systemd timer
    volumes:
      - ./isa/rclone:/config/rclone
      - isa-output:/data
    environment:
      - "TZ={{ general_timezone }}"

  # ===========================================================================
  # =   DEAD LINK CHECKER                                                     =
  # =   https://github.com/JenswBE/python-dead-link-checker                   =
  # ===========================================================================
  delic:
    <<: *defaults
    image: jenswbe/dead-link-checker:latest
    container_name: delic
    volumes:
      - "./delic/config.yml:/config.yml"
    environment:
      - "TZ={{ general_timezone }}"

  # ===========================================================================
  # =   Snipe-IT Asset Management                                             =
  # =   https://snipeitapp.com/                                               =
  # ===========================================================================
  snipe-it:
    <<: *defaults
    image: linuxserver/snipe-it:latest
    container_name: snipe-it
    depends_on:
      - snipe-it-db
    networks:
      - traefik
      - snipe-it
    volumes:
      - "{{ general_path_appdata }}/snipe-it/snipe-it/config:/config"
    environment:
      - "TZ={{ general_timezone }}"
      - "NGINX_APP_URL=:80"
      - "MYSQL_PORT_3306_TCP_ADDR=snipe-it-db"
      - "MYSQL_PORT_3306_TCP_PORT=3306"
      - "MYSQL_DATABASE=snipe"
      - "MYSQL_USER=snipe"
      - "MYSQL_PASSWORD={{ app_snipe_it_db_pass_snipe }}"
      - "PGID=1000"
      - "PUID=1000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.snipe-it.entrypoints=websecure"
      - "traefik.http.routers.snipe-it.rule=Host(`assets.{{ general_domain_default }}`)"
      - "traefik.http.routers.snipe-it.tls.certresolver=le-tls"

  snipe-it-db:
    <<: *defaults
    image: mariadb:10
    container_name: snipe-it-db
    networks:
      - snipe-it
    volumes:
      - "{{ general_path_appdata }}/snipe-it/mariadb/data:/var/lib/mysql"
      - "snipe-it-db-dump:/backup"
    environment:
      - "TZ={{ general_timezone }}"
      - "MYSQL_ROOT_PASSWORD={{ app_snipe_it_db_pass_root }}"
      - "MYSQL_PASSWORD={{ app_snipe_it_db_pass_snipe }}"
      - "MYSQL_DATABASE=snipe"
      - "MYSQL_USER=snipe"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin -u $$MYSQL_USER --password=$$MYSQL_PASSWORD ping || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  # ===========================================================================
  # =   BJOETIEK Y                                                            =
  # =   https://github.com/JenswBE/bjoetiek-y-frontend                        =
  # =   https://github.com/JenswBE/go-commerce                                =
  # =   https://github.com/JenswBE/go-commerce-admin                           =
  # ===========================================================================
  bjoetiek-frontend:
    <<: *defaults
    image: jenswbe/bjoetiek-y-frontend:v2.0.0
    container_name: bjoetiek-frontend
    networks:
      - traefik
      - bjoetiek
    environment:
      - "TZ={{ general_timezone }}"
      - "SENTRY_DSN={{ app_bjoetiek_sentry_dsn }}"
      - "BACKEND_URL_INTERNAL=http://bjoetiek-backend:8080"
      - "BACKEND_URL_EXTERNAL=https://backend.{{ general_domain_bjoetiek }}/api"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bjoetiek-frontend.entrypoints=websecure"
      - "traefik.http.routers.bjoetiek-frontend.rule=Host(`{{ general_domain_bjoetiek }}`)"
      - "traefik.http.routers.bjoetiek-frontend.tls.certresolver=le-tls"
      - "traefik.http.routers.bjoetiek-frontend-www-redirect.entrypoints=websecure"
      - "traefik.http.routers.bjoetiek-frontend-www-redirect.rule=Host(`www.{{ general_domain_bjoetiek }}`)"
      - "traefik.http.routers.bjoetiek-frontend-www-redirect.tls.certresolver=le-tls"
      - "traefik.http.routers.bjoetiek-frontend-www-redirect.middlewares=redirect-www-to-root@file"

  bjoetiek-admin:
    <<: *defaults
    image: jenswbe/go-commerce-admin:v0.1.0
    container_name: bjoetiek-admin
    networks:
      - traefik
    environment:
      - "TZ={{ general_timezone }}"
      - "BACKEND_URL=https://backend.{{ general_domain_bjoetiek }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bjoetiek-admin.entrypoints=websecure"
      - "traefik.http.routers.bjoetiek-admin.rule=Host(`beheer.{{ general_domain_bjoetiek }}`)"
      - "traefik.http.routers.bjoetiek-admin.tls.certresolver=le-tls"
      - "traefik.http.services.bjoetiek-admin-{{ ansible_hostname }}.loadbalancer.server.port=8080"

  bjoetiek-backend-proxy:
    <<: *defaults
    image: traefik:v2.5
    container_name: bjoetiek-backend-proxy
    command:
      # - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.network=bjoetiek"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.constraints=Label(`bjoetiek.env`,`backend-production`)"
      - "--entrypoints.web.address=:80"
    networks:
      - traefik
      - bjoetiek
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - "TZ={{ general_timezone }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bjoetiek-backend.entrypoints=websecure"
      - "traefik.http.routers.bjoetiek-backend.rule=Host(`backend.{{ general_domain_bjoetiek }}`)"
      - "traefik.http.routers.bjoetiek-backend.tls.certresolver=le-tls"
      - "traefik.http.routers.bjoetiek-backend.middlewares=bjoetiek-cors@file"

  bjoetiek-imgproxy:
    <<: *defaults
    image: darthsim/imgproxy:v2
    container_name: bjoetiek-imgproxy
    environment:
      - "IMGPROXY_KEY={{ app_bjoetiek_image_proxy_key }}"
      - "IMGPROXY_SALT={{ app_bjoetiek_image_proxy_salt }}"
      - "IMGPROXY_LOCAL_FILESYSTEM_ROOT=/images"
      - "IMGPROXY_MAX_SRC_RESOLUTION=64"
    networks:
      - bjoetiek
    volumes:
      - "{{ general_path_appdata }}/bjoetiek/backend/images:/images:ro"
    labels:
      - "bjoetiek.env=backend-production"
      - "traefik.enable=true"
      - "traefik.http.routers.images.entrypoints=web"
      - "traefik.http.routers.images.rule=PathPrefix(`/images`)"
      - "traefik.http.routers.images.middlewares=strip-images-prefix"
      - "traefik.http.middlewares.strip-images-prefix.stripPrefix.prefixes=/images"

  bjoetiek-backend:
    <<: *defaults
    image: jenswbe/go-commerce:v0.1.0
    container_name: bjoetiek-backend
    depends_on:
      - bjoetiek-db
    networks:
      - bjoetiek
    volumes:
      - "{{ general_path_appdata }}/bjoetiek/backend/images:/images"
    environment:
      - "TZ={{ general_timezone }}"
      - "AUTH_USERNAME={{ app_bjoetiek_admin_user }}"
      - "AUTH_PASSWORD={{ app_bjoetiek_admin_pass }}"
      - "DATABASE_HOST=bjoetiek-db"
      - "DATABASE_USER=bjoetiek"
      - "DATABASE_PASSWORD={{ app_bjoetiek_db_pass }}"
      - "DATABASE_DATABASE=bjoetiek"
      - "IMAGE_PROXY_BASE_URL=https://backend.{{ general_domain_bjoetiek }}/images/"
      - "IMAGE_PROXY_KEY={{ app_bjoetiek_image_proxy_key }}"
      - "IMAGE_PROXY_SALT={{ app_bjoetiek_image_proxy_salt }}"
      - "IMAGE_PROXY_ALLOWED_CONFIGS=100:100:FIT,150:150:FIT,400:400:FIT,550:550:FIT"
      - "STORAGE_IMAGES_PATH=/images"
    labels:
      - "bjoetiek.env=backend-production"
      - "traefik.enable=true"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.backend.middlewares=strip-api-prefix"
      - "traefik.http.middlewares.strip-api-prefix.stripPrefix.prefixes=/api"

  bjoetiek-db:
    <<: *defaults
    image: postgres:13-alpine
    container_name: bjoetiek-db
    networks:
      - bjoetiek
    volumes:
      - "{{ general_path_appdata }}/bjoetiek/postgres/data:/var/lib/postgresql/data"
      - bjoetiek-db-dump:/backup
    environment:
      - "TZ={{ general_timezone }}"
      - "POSTGRES_USER=bjoetiek"
      - "POSTGRES_PASSWORD={{ app_bjoetiek_db_pass }}"

  # ===========================================================================
  # =   BJOETIEK Y - Test                                                     =
  # =   https://github.com/JenswBE/bjoetiek-y-frontend                        =
  # =   https://github.com/JenswBE/go-commerce                                =
  # =   https://github.com/JenswBE/go-commerce-admin                          =
  # ===========================================================================

  bjoetiek-test-frontend:
    <<: *defaults
    image: jenswbe/bjoetiek-y-frontend:latest
    container_name: bjoetiek-test-frontend
    networks:
      - traefik
      - bjoetiek-test
    environment:
      - "TZ={{ general_timezone }}"
      - "SENTRY_DSN={{ app_bjoetiek_sentry_dsn }}"
      - "BACKEND_URL_INTERNAL=http://bjoetiek-test-backend:8080"
      - "BACKEND_URL_EXTERNAL=https://test-backend.{{ general_domain_bjoetiek }}/api"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bjoetiek-test-frontend.entrypoints=websecure"
      - "traefik.http.routers.bjoetiek-test-frontend.rule=Host(`test.{{ general_domain_bjoetiek }}`)"
      - "traefik.http.routers.bjoetiek-test-frontend.tls.certresolver=le-tls"

  bjoetiek-test-admin:
    <<: *defaults
    image: jenswbe/go-commerce-admin:latest
    container_name: bjoetiek-test-admin
    networks:
      - traefik
    environment:
      - "TZ={{ general_timezone }}"
      - "AUTH_CLIENT_ID={{ app_bjoetiek_test_auth_client_id }}"
      - "AUTH_STATE={{ app_bjoetiek_test_auth_state }}"
      - "AUTH_URL_AUTHORIZATION=https://auth.{{ general_domain_default }}/auth/realms/bjoetiek/protocol/openid-connect/auth"
      - "AUTH_URL_TOKEN=https://auth.{{ general_domain_default }}/auth/realms/bjoetiek/protocol/openid-connect/token"
      - "AUTH_URL_USERINFO=https://auth.{{ general_domain_default }}/auth/realms/bjoetiek/protocol/openid-connect/userinfo"
      - "AUTH_URL_LOGOUT=https://auth.{{ general_domain_default }}/auth/realms/bjoetiek/protocol/openid-connect/logout"
      - "AUTH_URL_LOGOUT_REDIRECT=https://test-beheer.{{ general_domain_bjoetiek }}/login"
      - "BACKEND_URL_INTERNAL=http://bjoetiek-test-backend:8080"
      - "BACKEND_URL_EXTERNAL=https://test-backend.{{ general_domain_bjoetiek }}/api"
      - "PRODUCT_URL_TEMPLATE=https://test.{{ general_domain_bjoetiek }}/producten/$${p.id}/$${p.name}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bjoetiek-test-admin.entrypoints=websecure"
      - "traefik.http.routers.bjoetiek-test-admin.rule=Host(`test-beheer.{{ general_domain_bjoetiek }}`)"
      - "traefik.http.routers.bjoetiek-test-admin.tls.certresolver=le-tls"
      - "traefik.http.services.bjoetiek-test-admin-{{ ansible_hostname }}.loadbalancer.server.port=8080"

  bjoetiek-test-backend-proxy:
    <<: *defaults
    image: traefik:latest
    container_name: bjoetiek-test-backend-proxy
    logging:
      driver: "local" # To prevent spamming Loki with debug logs
    command:
      - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.network=bjoetiek-test"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.constraints=Label(`bjoetiek.env`,`backend-test`)"
      - "--entrypoints.web.address=:80"
    networks:
      - traefik
      - bjoetiek-test
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - "TZ={{ general_timezone }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bjoetiek-test-backend.entrypoints=websecure"
      - "traefik.http.routers.bjoetiek-test-backend.rule=Host(`test-backend.{{ general_domain_bjoetiek }}`)"
      - "traefik.http.routers.bjoetiek-test-backend.tls.certresolver=le-tls"
      - "traefik.http.routers.bjoetiek-test-backend.middlewares=bjoetiek-cors@file"

  bjoetiek-test-imgproxy:
    <<: *defaults
    image: darthsim/imgproxy:latest
    container_name: bjoetiek-test-imgproxy
    environment:
      - "IMGPROXY_KEY={{ app_bjoetiek_test_image_proxy_key }}"
      - "IMGPROXY_SALT={{ app_bjoetiek_test_image_proxy_salt }}"
      - "IMGPROXY_LOCAL_FILESYSTEM_ROOT=/images"
      - "IMGPROXY_MAX_SRC_RESOLUTION=64"
    networks:
      - bjoetiek-test
    volumes:
      - "{{ general_path_appdata }}/bjoetiek/backend-test/images:/images:ro"
    labels:
      - "bjoetiek.env=backend-test"
      - "traefik.enable=true"
      - "traefik.http.routers.images.entrypoints=web"
      - "traefik.http.routers.images.rule=PathPrefix(`/images`)"
      - "traefik.http.routers.images.middlewares=strip-images-prefix"
      - "traefik.http.middlewares.strip-images-prefix.stripPrefix.prefixes=/images"

  bjoetiek-test-backend:
    <<: *defaults
    image: jenswbe/go-commerce:latest
    container_name: bjoetiek-test-backend
    depends_on:
      - bjoetiek-test-db
    networks:
      - bjoetiek-test
    volumes:
      - "{{ general_path_appdata }}/bjoetiek/backend-test/images:/images"
    environment:
      - "TZ={{ general_timezone }}"
      - "AUTH_ISSUER_URL=https://auth.{{ general_domain_default }}/auth/realms/bjoetiek"
      - "DATABASE_HOST=bjoetiek-test-db"
      - "DATABASE_USER=bjoetiek-test"
      - "DATABASE_PASSWORD=bjoetiek-test"
      - "DATABASE_DATABASE=bjoetiek-test"
      - "IMAGE_PROXY_BASE_URL=https://test-backend.{{ general_domain_bjoetiek }}/images/"
      - "IMAGE_PROXY_KEY={{ app_bjoetiek_test_image_proxy_key }}"
      - "IMAGE_PROXY_SALT={{ app_bjoetiek_test_image_proxy_salt }}"
      - "IMAGE_PROXY_ALLOWED_CONFIGS=100:100:FIT,150:150:FIT,400:400:FIT,550:550:FIT"
      - "STORAGE_IMAGES_PATH=/images"
    labels:
      - "bjoetiek.env=backend-test"
      - "traefik.enable=true"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.backend.middlewares=strip-api-prefix"
      - "traefik.http.middlewares.strip-api-prefix.stripPrefix.prefixes=/api"

  bjoetiek-test-db:
    <<: *defaults
    image: postgres:13-alpine
    container_name: bjoetiek-test-db
    networks:
      - bjoetiek-test
    volumes:
      - "bjoetiek-test-db-data:/var/lib/postgresql/data"
    environment:
      - "TZ={{ general_timezone }}"
      - "POSTGRES_USER=bjoetiek-test"
      - "POSTGRES_PASSWORD=bjoetiek-test"

  # ===========================================================================
  # =   SNOEP AND FRIET PROTOTYPE                                             =
  # =   https://github.com/JenswBE/candylicious-frontend                      =
  # =   https://github.com/JenswBE/oud-turnhoutsgebak-frontend                =
  # ===========================================================================
  snoep-frontend:
    <<: *defaults
    image: jenswbe/candylicious-frontend:latest
    container_name: snoep-frontend
    networks:
      - traefik
    environment:
      - "TZ={{ general_timezone }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.snoep-frontend.entrypoints=websecure"
      - "traefik.http.routers.snoep-frontend.rule=Host(`snoep.{{ general_domain_default }}`)"
      - "traefik.http.routers.snoep-frontend.tls.certresolver=le-tls"

  friet-frontend:
    <<: *defaults
    image: jenswbe/oud-turnhoutsgebak-frontend:latest
    container_name: friet-frontend
    networks:
      - traefik
    environment:
      - "TZ={{ general_timezone }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.friet-frontend.entrypoints=websecure"
      - "traefik.http.routers.friet-frontend.rule=Host(`friet.{{ general_domain_default }}`)"
      - "traefik.http.routers.friet-frontend.tls.certresolver=le-tls"

  # =========================
  # =      GOAT COUNTER     =
  # =========================
  goatcounter:
    <<: *defaults
    build:
      context: goatcounter
      args:
        - "version={{ app_goatcounter_version }}"
    container_name: goatcounter
    user: "{{ ansible_real_user_id }}"
    networks:
      - traefik
    volumes:
      - "{{ general_path_appdata }}/goatcounter/db:/db"
    environment:
      - "TZ={{ general_timezone }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.goatcounter.entrypoints=websecure"
      - "traefik.http.routers.goatcounter.tls.certresolver=le-tls"
      - >-
        traefik.http.routers.goatcounter.rule=Host(
          `stats.{{ general_domain_default }}`,
          `stats.{{ general_domain_bjoetiek }}`,
          `stats.{{ general_domain_klokracing }}`,
          `stats.{{ general_domain_tuinfeest }}`,
        )

  # =========================
  # =          AUTH         =
  # =========================
  keycloak:
    <<: *defaults
    image: quay.io/keycloak/keycloak:15.0.2
    container_name: keycloak
    depends_on:
      - keycloak-db
    networks:
      - traefik
      - keycloak
    environment:
      - "TZ={{ general_timezone }}"
      - "DB_VENDOR=POSTGRES"
      - "DB_ADDR=keycloak-db"
      - "DB_DATABASE=keycloak"
      - "DB_USER=keycloak"
      - "DB_SCHEMA=public"
      - "DB_PASSWORD={{ app_keycloak_db_pass }}"
      - "KEYCLOAK_USER={{ app_keycloak_admin_user }}"
      - "KEYCLOAK_PASSWORD={{ app_keycloak_admin_pass }}"
      - "KEYCLOAK_FRONTEND_URL=https://auth.{{ general_domain_default }}/auth"
      - "PROXY_ADDRESS_FORWARDING=true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.entrypoints=websecure"
      - "traefik.http.routers.keycloak.tls.certresolver=le-tls"
      - >-
        traefik.http.routers.keycloak.rule=Host(
          `auth.{{ general_domain_default }}`,
          `auth.{{ general_domain_bjoetiek }}`,
        )

  keycloak-db:
    <<: *defaults
    image: postgres:12-alpine
    container_name: keycloak-db
    networks:
      - keycloak
    volumes:
      - "{{ general_path_appdata }}/keycloak/postgres/data:/var/lib/postgresql/data"
      - keycloak-db-dump:/backup
    environment:
      - "TZ={{ general_timezone }}"
      - "POSTGRES_USER=keycloak"
      - "POSTGRES_PASSWORD={{ app_keycloak_db_pass }}"
      - "POSTGRES_DB=keycloak"

  # =========================
  # =      MAINTENANCE      =
  # =========================
  maintenance:
    <<: *defaults
    image: nginx:latest
    container_name: maintenance
    user: "{{ ansible_real_user_id }}"
    networks:
      - traefik
    volumes:
      - "./maintenance/public:/usr/share/nginx/html"
      - "./maintenance/nginx.conf:/etc/nginx/nginx.conf"
    environment:
      - "TZ={{ general_timezone }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.maintenance.entrypoints=websecure"
      - "traefik.http.routers.maintenance.rule=Host(`maintenance.{{ general_domain_default }}`)"
      - "traefik.http.routers.maintenance.tls.certresolver=le-tls"
      - "traefik.http.services.maintenance-{{ ansible_hostname }}.loadbalancer.server.port=8080"

  # =========================
  # =        LOGGING        =
  # =========================
  promtail:
    <<: *defaults
    image: grafana/promtail:2.3.0
    container_name: promtail
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml:ro
      - promtail-positions:/positions
      - /var/log:/var/log:ro
    environment:
      - "TZ={{ general_timezone }}"

  # =========================
  # =         BACKUP        =
  # =========================
  nc-calcardbackup:
    <<: *defaults
    image: waja/calcardbackup:latest
    container_name: nc-calcardbackup
    networks:
      - backup-nc-db
    depends_on:
      - nc-db
    volumes:
      - "{{ general_path_appdata }}/nextcloud/nextcloud/config/config:/nextcloud/config:ro"
      - nc-calcardbackup:/backup
    environment:
      - "TZ={{ general_timezone }}"
      # Disable cron
      - CRON_TIME="#"

  borgmatic:
    <<: *defaults
    image: b3vis/borgmatic:latest
    container_name: borgmatic
    privileged: true # Required for borg mount
    cap_add:
      - SYS_ADMIN # Required for borg mount
    volumes:
      # Backup locations
      - "bjoetiek-db-dump:/mnt/source/bjoetiek/dbdump:ro"
      - "{{ general_path_appdata }}/bjoetiek/backend:/mnt/source/bjoetiek/backend:ro"
      - "{{ general_path_appdata }}/goatcounter/db:/mnt/source/goatcounter/db:ro"
      - "keycloak-db-dump:/mnt/source/keycloak/dbdump:ro"
      - "nc-db-dump:/mnt/source/nextcloud/dbdump:ro"
      - "nc-calcardbackup:/mnt/source/nextcloud/calcardbackup:ro"
      - "{{ general_path_appdata }}/nextcloud/nextcloud/data:/mnt/source/nextcloud/data:ro"
      - "{{ general_path_appdata }}/nextcloud/nextcloud/config:/mnt/source/nextcloud/config:ro"
      - "passit-db-dump:/mnt/source/passit/dbdump:ro"
      - "snipe-it-db-dump:/mnt/source/snipe-it/dbdump:ro"
      # Config and cache
      - "./borgmatic/borgmatic.d:/etc/borgmatic.d"
      - "./borgmatic/ssh:/root/.ssh"
      - "{{ general_path_appdata }}/borgmatic/borgmatic/config:/root/.config/borg"
      - "{{ general_path_appdata }}/borgmatic/borgmatic/cache:/root/.cache/borg"
      - "{{ general_path_appdata }}/borgmatic/borgmatic/restore:/mnt/restore"
    devices:
      - "/dev/fuse:/dev/fuse" # Required for borg mount
    environment:
      - "TZ={{ general_timezone }}"
      - "BORG_PASSPHRASE={{ app_borgmatic_borg_passphrase }}"
      - "BORG_HOSTNAME_IS_UNIQUE=yes" # Automatically removes stale locks
      - "BORG_HOST_ID={{ ansible_hostname }}"

# #################################################################
# #                            VOLUMES                            #
# #################################################################
volumes:
  bjoetiek-db-dump:
  bjoetiek-test-db-data:
  isa-output:
  keycloak-db-dump:
  nc-db-dump:
  nc-calcardbackup:
  passit-db-dump:
  promtail-positions:
  snipe-it-db-dump:
  traefik-cert:

# #################################################################
# #                            NETWORKS                           #
# #################################################################
networks:
  bjoetiek:
    name: bjoetiek

  bjoetiek-test:
    name: bjoetiek

  backup-nc-db:
    name: backup-nc-db

  keycloak:
    name: keycloak

  nextcloud:
    name: nextcloud

  passit:
    name: passit

  snipe-it:
    name: snipe-it

  traefik:
    name: traefik
