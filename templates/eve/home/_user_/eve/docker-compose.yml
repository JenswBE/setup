version: "3.7"

# #################################################################
# #                            SERVICES                           #
# #################################################################
services:
  # =========================
  # =         PROXY         =
  # =========================
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: always
    command:
      # - "--log.level=DEBUG"
      - "--providers.file.directory=/conf"
      - "--providers.file.watch=true"
      - "--providers.docker=true"
      - "--providers.docker.defaultRule="
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.middlewares=secure-https@file"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.le-tls.acme.tlsChallenge=true"
      - "--certificatesresolvers.le-tls.acme.email={{ general_mail_admin }}@{{ general_domain_default }}"
      - "--certificatesresolvers.le-tls.acme.storage=/letsencrypt/acme.json"
      - "--api=true"
      - "--ping.manualrouting=true"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - traefik
    volumes:
      - "./traefik:/conf"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "traefik-cert:/letsencrypt/"
    environment:
      - "TZ={{ general_timezone }}"

  # =========================
  # =     AUTO-UPDATER      =
  # =========================
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: always
    command: --schedule "0 0 4 * * *" --cleanup
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - "TZ={{ general_timezone }}"

  # =========================
  # =       NEXTCLOUD       =
  # =========================
  nextcloud:
    image: nextcloud:19
    container_name: nextcloud
    hostname: nextcloud
    restart: always
    networks:
      - traefik
      - nextcloud
    depends_on:
      - nc-db
    volumes:
      - "{{ general_path_appdata }}/nextcloud/nextcloud/config:/var/www/html"
      - "{{ general_path_appdata }}/nextcloud/nextcloud/data:/var/www/html/data"
    environment:
      - "TZ={{ general_timezone }}"
      - "MYSQL_DATABASE=nextcloud"
      - "MYSQL_USER=nextcloud"
      - "MYSQL_PASSWORD={{ app_nextcloud_db_pass_nextcloud }}"
      - "MYSQL_HOST=nc-db"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"

  nc-db:
    image: mariadb:10
    container_name: nc-db
    restart: always
    networks:
      - nextcloud
      - backup-nc-db
    volumes:
      - "{{ general_path_appdata }}/nextcloud/mariadb/data:/var/lib/mysql"
      - nc-db-dump:/backup
    environment:
      - "TZ={{ general_timezone }}"
      - "MYSQL_ROOT_PASSWORD={{ app_nextcloud_db_pass_root }}"
      - "MYSQL_PASSWORD={{ app_nextcloud_db_pass_nextcloud }}"
      - "MYSQL_DATABASE=nextcloud"
      - "MYSQL_USER=nextcloud"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin -u $$MYSQL_USER --password=$$MYSQL_PASSWORD ping || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  # =========================
  # =         NGINX         =
  # =========================
  nginx-tuinfeest-beta:
    image: nginx:latest
    container_name: nginx-tuinfeest-beta
    restart: always
    networks:
      - traefik
    volumes:
      - "{{ general_path_appdata }}/nginx/tuinfeest-beta:/usr/share/nginx/html"
    environment:
      - "TZ={{ general_timezone }}"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"

  nginx-tuinfeest-archive-2019:
    image: nginx:latest
    container_name: nginx-tf-archive-2019
    restart: always
    networks:
      - traefik
    volumes:
      - "{{ general_path_appdata }}/nginx/tuinfeest-archive/2019:/usr/share/nginx/html"
    environment:
      - "TZ={{ general_timezone }}"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"

  nginx-tuinfeest-archive-2020:
    image: nginx:latest
    container_name: nginx-tf-archive-2020
    restart: always
    networks:
      - traefik
    volumes:
      - "{{ general_path_appdata }}/nginx/tuinfeest-archive/2020:/usr/share/nginx/html"
    environment:
      - "TZ={{ general_timezone }}"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"

  # =========================
  # =         PASSIT        =
  # =========================
  passit:
    image: passit/passit:stable
    container_name: passit
    restart: always
    networks:
      - traefik
      - passit
    environment:
      - "TZ={{ general_timezone }}"
      - "DATABASE_SERVICE_NAME=passit-db"
      - "DATABASE_NAME=passit"
      - "DATABASE_USER=passit"
      - "DATABASE_PASSWORD={{ app_passit_db_pass }}"
      - "DEFAULT_FROM_EMAIL=passit@{{ general_domain_tuinfeest }}"
      - "EMAIL_CONFIRMATION_HOST=passit.{{ general_domain_tuinfeest }}"
      - "IS_PRIVATE_ORG_MODE=False"
      - "PRIVATE_ORG_MODE_DOMAIN_WHITELIST={{ general_domain_tuinfeest }}"
      - "SECRET_KEY={{ app_passit_secret_key }}"
      - "EMAIL_URL=smtp+tls://{{ mailjet_username }}:{{ mailjet_password }}@{{ mailjet_host }}:{{ mailjet_port }}"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"

  passit-db:
    image: postgres:12-alpine
    container_name: passit-db
    restart: always
    networks:
      - passit
    volumes:
      - "{{ general_path_appdata }}/passit/postgres/data:/var/lib/postgresql/data"
      - passit-db-dump:/backup
    environment:
      - "TZ={{ general_timezone }}"
      - "POSTGRES_USER=passit"
      - "POSTGRES_PASSWORD={{ app_passit_db_pass }}"

  # =========================
  # =      IMAP-ALERTER     =
  # =========================
  imap-alerter:
    image: jenswbe/imap-alerter:latest
    container_name: imap-alerter
    restart: always
    volumes:
      - ./imap-alerter:/app/config
      - "{{ general_path_appdata }}/imap-alerter/imap-alerter/data:/app/data"
    environment:
      - "TZ={{ general_timezone }}"

  # =========================
  # = IMAP SAVE ATTACHMENTS =
  # =========================
  isa-fetchmail:
    image: jenswbe/imap-save-attachments:latest
    container_name: isa-fetchmail
    restart: always
    volumes:
      - ./isa/fetchmailrc:/config/.fetchmailrc
      - isa-output:/output
    environment:
      - "TZ={{ general_timezone }}"
      - "CRON_SCHEDULE=*/15 * * * *"

  isa-rclone:
    image: tynor88/rclone:latest
    container_name: isa-rclone
    restart: always
    volumes:
      - ./isa/rclone.conf:/config/.rclone.conf
      - isa-output:/data
    environment:
      - "TZ={{ general_timezone }}"
      - "PUID=0"
      - "PGID=0"
      - "CRON_SCHEDULE=5-59/15 * * * *"
      - "SYNC_COMMAND=rclone move /data/ nextcloud:/{{ app_isa_rclone_dav_path }} --delete-empty-src-dirs"
      - "RCLONE_VERSION=true"

  # ===========================================================================
  # =   DEAD LINK CHECKER                                                     =
  # =   https://github.com/JenswBE/python-dead-link-checker                   =
  # ===========================================================================
  delic:
    image: jenswbe/dead-link-checker:latest
    container_name: delic
    restart: always
    volumes:
      - "./delic/config.yml:/config.yml"
    environment:
      - "TZ={{ general_timezone }}"

  # ===========================================================================
  # =   Snipe-IT Asset Management                                             =
  # =   https://snipeitapp.com/                                               =
  # ===========================================================================
  snipe-it:
    image: linuxserver/snipe-it:latest
    container_name: snipe-it
    restart: always
    depends_on:
      - snipe-it-db
    networks:
      - traefik
      - snipe-it
    volumes:
      - "{{ general_path_appdata }}/snipe-it/snipe-it/config:/config"
    environment:
      - "TZ={{ general_timezone }}"
      - "APP_URL=https://assets.jensw.be"
      - "MYSQL_PORT_3306_TCP_ADDR=snipe-it-db"
      - "MYSQL_PORT_3306_TCP_PORT=3306"
      - "MYSQL_DATABASE=snipe"
      - "MYSQL_USER=snipe"
      - "MYSQL_PASSWORD={{ app_snipe_it_db_pass_snipe }}"
      - "PGID=1000"
      - "PUID=1000"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"

  snipe-it-db:
    image: mariadb:10
    container_name: snipe-it-db
    restart: always
    networks:
      - snipe-it
    volumes:
      - "{{ general_path_appdata }}/snipe-it/mariadb/data:/var/lib/mysql"
      - "snipe-it-db-dump:/backup"
    environment:
      - "TZ={{ general_timezone }}"
      - "MYSQL_ROOT_PASSWORD={{ app_snipe_it_db_pass_root }}"
      - "MYSQL_PASSWORD={{ app_snipe_it_db_pass_snipe }}"
      - "MYSQL_DATABASE=snipe"
      - "MYSQL_USER=snipe"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin -u $$MYSQL_USER --password=$$MYSQL_PASSWORD ping || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  # ===========================================================================
  # =   QUESTION QUEEN                                                        =
  # =   https://github.com/JenswBE/nuxtjs-question-queen-frontend             =
  # =   https://github.com/JenswBE/rust-question-queen-backend/               =
  # ===========================================================================
  question-queen-frontend:
    image: jenswbe/question-queen-frontend:latest
    container_name: question-queen-frontend
    depends_on:
      - question-queen-backend
    restart: always
    networks:
      - traefik
      - question-queen
    environment:
      - "BASE_URL=http://question-queen-backend"
      - "BROWSER_BASE_URL=https://qq-backend.{{ general_domain_default }}"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"

  question-queen-backend:
    image: jenswbe/question-queen-backend:latest
    container_name: question-queen-backend
    restart: always
    networks:
      - traefik
      - question-queen
    volumes:
      - "./question-queen/questions.yml:/data/data.yml"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"

  # =========================
  # =      MAINTENANCE      =
  # =========================
  maintenance:
    image: everydayhero/maintenance:latest
    container_name: maintenance
    restart: always
    networks:
      - traefik
    volumes:
      - "./maintenance:/usr/share/nginx/html"
    environment:
      - "TZ={{ general_timezone }}"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"

  # =========================
  # =         BACKUP        =
  # =========================
  nc-calcardbackup:
    image: waja/calcardbackup:latest
    container_name: nc-calcardbackup
    restart: always
    networks:
      - backup-nc-db
    depends_on:
      - nc-db
    volumes:
      - "{{ general_path_appdata }}/nextcloud/nextcloud/config/config:/nextcloud/config:ro"
      - nc-calcardbackup:/backup
    environment:
      - "TZ={{ general_timezone }}"
      # Disable cron
      - CRON_TIME="#"

  borgmatic:
    image: b3vis/borgmatic:latest
    container_name: borgmatic
    restart: always
    devices: ["/dev/fuse:/dev/fuse"]
    cap_add: ["SYS_ADMIN"]
    volumes:
      # Backup locations
      - nc-db-dump:/mnt/source/nextcloud/dbdump:ro
      - nc-calcardbackup:/mnt/source/nextcloud/calcardbackup:ro
      - "{{ general_path_appdata }}/nextcloud/nextcloud/data:/mnt/source/nextcloud/data:ro"
      - "{{ general_path_appdata }}/nextcloud/nextcloud/config:/mnt/source/nextcloud/config:ro"
      - passit-db-dump:/mnt/source/passit/dbdump:ro
      - snipe-it-db-dump:/mnt/source/snipe-it/dbdump:ro
      # Config and cache
      - "./borgmatic/borgmatic.d:/etc/borgmatic.d"
      - "./borgmatic/ssh:/root/.ssh"
      - "{{ general_path_appdata }}/borgmatic/borgmatic/config:/root/.config/borg"
      - "{{ general_path_appdata }}/borgmatic/borgmatic/cache:/root/.cache/borg"
      - "{{ general_path_appdata }}/borgmatic/borgmatic/restore:/mnt/restore"
    environment:
      - "TZ={{ general_timezone }}"
      - "BORG_PASSPHRASE={{ app_borgmatic_borg_passphrase }}"

# #################################################################
# #                            VOLUMES                            #
# #################################################################
volumes:
  isa-output:
  nc-db-dump:
  nc-calcardbackup:
  passit-db-dump:
  snipe-it-db-dump:
  traefik-cert:

# #################################################################
# #                            NETWORKS                           #
# #################################################################
networks:
  backup-nc-db:
    name: backup-nc-db

  nextcloud:
    name: nextcloud

  passit:
    name: passit

  question-queen:
    name: question-queen

  snipe-it:
    name: snipe-it

  traefik:
    name: traefik
