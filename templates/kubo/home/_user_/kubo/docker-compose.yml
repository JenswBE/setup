version: "3.7"

#################################################################
#                            LOGGING                            #
#################################################################
x-defaults: &defaults
  restart: always
  extra_hosts:
    - "host.docker.internal:host-gateway"
  logging:
    driver: syslog
    options:
      tag: "{{ 'docker-{{.Name}}' }}"

#################################################################
#                            SERVICES                           #
#################################################################
services:
  # =========================
  # =         PROXY         =
  # =========================
  traefik:
    <<: *defaults
    image: traefik:latest
    container_name: traefik
    command:
      # - "--log.level=DEBUG"
      - "--providers.file.directory=/conf"
      - "--providers.file.watch=true"
      - "--providers.docker=true"
      - "--providers.docker.network=traefik"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.middlewares=secure-https@file"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.le-tls.acme.tlsChallenge=true"
      - "--certificatesresolvers.le-tls.acme.email={{ general_mail_admin }}@{{ general_domain_default }}"
      - "--certificatesresolvers.le-tls.acme.storage=/letsencrypt/acme.json"
      - "--api=true"
      - "--ping.manualrouting=true"
    ports:
      - 80:80
      - 443:443
    networks:
      - traefik
    volumes:
      - ./traefik:/conf
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-cert:/letsencrypt/
    environment:
      - "TZ={{ general_timezone }}"

  # =========================
  # =    UNIFI CONTROLLER   =
  # =========================
  unifi-controller:
    <<: *defaults
    image: linuxserver/unifi-controller:latest
    container_name: unifi-controller
    environment:
      - "TZ={{ general_timezone }}"
      - "PUID=1000"
      - "PGID=1000"
      - "MEM_LIMIT=512M"
    volumes:
      - "{{ general_path_appdata }}/unifi-controller/config:/config"
    ports:
      - "3478:3478/udp"
      - "10001:10001/udp"
      - "8080:8080"
      - "8081:8081"
      - "8443:8443"
      - "8843:8843"
      - "8880:8880"
      - "6789:6789"

  # =========================
  # =    HOME AUTOMATION    =
  # =========================
  ha:
    <<: *defaults
    image: homeassistant/home-assistant:stable
    container_name: ha
    networks:
      - traefik
      - home-automation
    volumes:
      - "{{ general_path_appdata }}/home-automation/home-assistant/config:/config"
    environment:
      - "TZ={{ general_timezone }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ha.entrypoints=websecure"
      - "traefik.http.routers.ha.rule=Host(`ha.{{ general_domain_local }}`)"
      - "traefik.http.routers.ha.tls=true"
      - "traefik.http.services.ha-{{ ansible_hostname }}.loadbalancer.server.port=8123"

  ha-zigbee2mqtt:
    <<: *defaults
    image: koenkk/zigbee2mqtt:latest
    container_name: ha-zigbee2mqtt
    privileged: true
    networks:
      - home-automation
    depends_on:
      - ha-mosquitto
    volumes:
      - "{{ general_path_appdata }}/home-automation/zigbee2mqtt:/app/data"
      - "./home-automation/zigbee2mqtt/configuration.yaml:/app/data/configuration.yaml"
      - "/run/udev:/run/udev:ro"
    devices:
      - "/dev/ttyUSB0:/dev/ttyUSB0"
    environment:
      - "TZ={{ general_timezone }}"

  ha-mosquitto:
    <<: *defaults
    image: eclipse-mosquitto:latest
    container_name: ha-mosquitto
    networks:
      - home-automation
    volumes:
      - "./home-automation/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro"
    environment:
      - "TZ={{ general_timezone }}"

  # =========================
  # =        MINIFLUX       =
  # =========================
  miniflux:
    <<: *defaults
    image: miniflux/miniflux:latest
    container_name: miniflux
    networks:
      - traefik
      - miniflux
    depends_on:
      - miniflux-db
    environment:
      - "TZ={{ general_timezone }}"
      - "DATABASE_URL=postgres://miniflux:{{ app_miniflux_db_pass }}@miniflux-db/miniflux?sslmode=disable"
      - "RUN_MIGRATIONS=1"
      - "CREATE_ADMIN=1"
      - "ADMIN_USERNAME={{ app_miniflux_admin_user }}"
      - "ADMIN_PASSWORD={{ app_miniflux_admin_pass }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.miniflux.entrypoints=websecure"
      - "traefik.http.routers.miniflux.rule=Host(`feed.{{ general_domain_default }}`)"
      - "traefik.http.routers.miniflux.tls.certresolver=le-tls"
      - "traefik.http.services.miniflux-{{ ansible_hostname }}.loadbalancer.server.port=8080"

  miniflux-db:
    <<: *defaults
    image: postgres:13-alpine
    container_name: miniflux-db
    networks:
      - miniflux
    volumes:
      - "{{ general_path_appdata }}/miniflux/db:/var/lib/postgresql/data"
      - "miniflux-db-dump:/backup"
    environment:
      - "TZ={{ general_timezone }}"
      - "POSTGRES_USER=miniflux"
      - "POSTGRES_PASSWORD={{ app_miniflux_db_pass }}"

  # =========================
  # =       SYNCTHING       =
  # =========================
  syncthing:
    <<: *defaults
    image: syncthing/syncthing:1
    container_name: syncthing
    networks:
      - traefik
    ports:
      - "22000:22000"
    volumes:
      - "{{ general_path_appdata }}/syncthing/config:/var/syncthing"
      - "/data/syncthing:/data"
    environment:
      - "TZ=Europe/Brussels"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.syncthing.entrypoints=websecure"
      - "traefik.http.routers.syncthing.rule=Host(`syncthing-{{ ansible_hostname }}.{{ general_domain_default }}`)"
      - "traefik.http.routers.syncthing.tls.certresolver=le-tls"
      - "traefik.http.services.syncthing-{{ ansible_hostname }}.loadbalancer.server.port=8384"

  # =========================
  # =         LOGGING        =
  # =========================
  grafana:
    <<: *defaults
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - traefik
      - loki
    volumes:
      - "{{ general_path_appdata }}/grafana/data:/var/lib/grafana"
    environment:
      - "TZ=Europe/Brussels"
      - "GF_SECURITY_ADMIN_USER={{ app_grafana_username }}"
      - "GF_SECURITY_ADMIN_PASSWORD={{ app_grafana_password }}"
      - "GF_SECURITY_DISABLE_GRAVATAR=true"
      - "GF_SMTP_ENABLED=true"
      - "GF_SMTP_HOST={{ mailjet_host }}:{{ mailjet_port }}"
      - "GF_SMTP_USER={{ mailjet_username }}"
      - "GF_SMTP_PASSWORD={{ mailjet_password }}"
      - "GF_SMTP_FROM_ADDRESS=grafana@{{ general_domain_default }}"
      - "GF_SMTP_FROM_NAME=Grafana - JenswBE"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.rule=Host(`grafana.{{ general_domain_default }}`)"
      - "traefik.http.routers.grafana.tls.certresolver=le-tls"
      - "traefik.http.services.grafana-{{ ansible_hostname }}.loadbalancer.server.port=3000"

  loki:
    <<: *defaults
    image: grafana/loki:2.2.0
    container_name: loki
    command: -config.file=/etc/loki/config.yml
    user: "{{ ansible_real_user_id }}"
    networks:
      - traefik
      - loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/config.yml:/etc/loki/config.yml:ro
      - "{{ general_path_appdata }}/loki/data:/loki"
    environment:
      - "TZ=Europe/Brussels"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.loki.entrypoints=websecure"
      - "traefik.http.routers.loki.rule=Host(`loki.{{ general_domain_default }}`)"
      - "traefik.http.routers.loki.tls.certresolver=le-tls"
      - "traefik.http.routers.loki.middlewares=loki-auth@file"
      - "traefik.http.routers.loki-ready.entrypoints=websecure"
      - "traefik.http.routers.loki-ready.rule=Host(`loki.{{ general_domain_default }}`) && PathPrefix(`/ready`)"
      - "traefik.http.routers.loki-ready.tls.certresolver=le-tls"
      - "traefik.http.services.loki-{{ ansible_hostname }}.loadbalancer.server.port=3100"

  promtail:
    <<: *defaults
    image: grafana/promtail:2.2.0
    container_name: promtail
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml:ro
      - promtail-positions:/positions
      - /var/log:/var/log:ro
    networks:
      - loki
    environment:
      - "TZ=Europe/Brussels"

  # =========================
  # =         BACKUP        =
  # =========================
  borgmatic:
    <<: *defaults
    image: b3vis/borgmatic:latest
    container_name: borgmatic
    volumes:
      # Backup locations
      - "{{ general_path_appdata }}/home-automation/home-assistant/config:/mnt/source/home-automation/home-assistant/config:ro"
      # Config and cache
      - "./borgmatic/borgmatic.d:/etc/borgmatic.d"
      - "./borgmatic/ssh:/root/.ssh"
      - "{{ general_path_appdata }}/borgmatic/borgmatic/config:/root/.config/borg"
      - "{{ general_path_appdata }}/borgmatic/borgmatic/cache:/root/.cache/borg"
      - "{{ general_path_appdata }}/borgmatic/borgmatic/restore:/mnt/restore"
    environment:
      - "TZ={{ general_timezone }}"
      - "BORG_PASSPHRASE={{ app_borgmatic_borg_passphrase }}"

  # =========================
  # =     AUTO-UPDATER      =
  # =========================
  watchtower:
    <<: *defaults
    image: containrrr/watchtower:latest
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "0 0 4 * * *" --cleanup
    environment:
      - "TZ={{ general_timezone }}"

#################################################################
#                            NETWORKS                           #
#################################################################
networks:
  home-automation:
    name: home-automation

  miniflux:
    name: miniflux

  traefik:
    name: traefik

  loki:
    name: loki

#################################################################
#                            VOLUMES                            #
#################################################################
volumes:
  miniflux-db-dump:
  promtail-positions:
  traefik-cert:
