version: "3.7"

#################################################################
#                            SERVICES                           #
#################################################################
services:
  # =========================
  # =         PROXY         =
  # =========================
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: always
    command:
      # - "--log.level=DEBUG"
      - "--providers.file.directory=/conf"
      - "--providers.file.watch=true"
      - "--providers.docker=true"
      - "--providers.docker.network=traefik"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.middlewares=secure-https@file"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.le-tls.acme.tlsChallenge=true"
      - "--certificatesresolvers.le-tls.acme.email={{ general_mail_admin }}@{{ general_domain_default }}"
      - "--certificatesresolvers.le-tls.acme.storage=/letsencrypt/acme.json"
      - "--api=true"
      - "--ping.manualrouting=true"
    ports:
      - 80:80
      - 443:443
    networks:
      - traefik
    volumes:
      - ./traefik:/conf
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-cert:/letsencrypt/
    environment:
      - "TZ={{ general_timezone }}"

  # =========================
  # =    UNIFI CONTROLLER   =
  # =========================
  unifi-controller:
    image: linuxserver/unifi-controller:latest
    container_name: unifi-controller
    restart: always
    environment:
      - "TZ={{ general_timezone }}"
      - "PUID=1000"
      - "PGID=1000"
      - "MEM_LIMIT=512M"
    volumes:
      - "{{ general_path_appdata }}/unifi-controller/config:/config"
    ports:
      - "3478:3478/udp"
      - "10001:10001/udp"
      - "8080:8080"
      - "8081:8081"
      - "8443:8443"
      - "8843:8843"
      - "8880:8880"
      - "6789:6789"

  # =========================
  # =    HOME AUTOMATION    =
  # =========================
  ha:
    image: homeassistant/home-assistant:stable
    container_name: ha
    restart: always
    networks:
      - traefik
      - home-automation
    volumes:
      - "{{ general_path_appdata }}/home-automation/home-assistant/config:/config"
    environment:
      - "TZ={{ general_timezone }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ha.entrypoints=websecure"
      - "traefik.http.routers.ha.rule=Host(`ha.{{ general_domain_local }}`)"
      - "traefik.http.routers.ha.tls=true"
      - "traefik.http.services.ha-{{ ansible_hostname }}.loadbalancer.server.port=8123"

  ha-zigbee2mqtt:
    image: koenkk/zigbee2mqtt:latest
    container_name: ha-zigbee2mqtt
    restart: always
    privileged: true
    networks:
      - home-automation
    depends_on:
      - ha-mosquitto
    volumes:
      - "{{ general_path_appdata }}/home-automation/zigbee2mqtt:/app/data"
      - "./home-automation/zigbee2mqtt/configuration.yaml:/app/data/configuration.yaml"
      - "/run/udev:/run/udev:ro"
    devices:
      - "/dev/ttyUSB0:/dev/ttyUSB0"
    environment:
      - "TZ={{ general_timezone }}"

  ha-mosquitto:
    image: eclipse-mosquitto:latest
    container_name: ha-mosquitto
    restart: always
    networks:
      - home-automation
    volumes:
      - "{{ general_path_appdata }}/home-automation/mosquitto/data:/mosquitto/data"
      - "{{ general_path_appdata }}/home-automation/mosquitto/log:/mosquitto/log"
    environment:
      - "TZ={{ general_timezone }}"

  # =========================
  # =        MINIFLUX       =
  # =========================
  miniflux:
    image: miniflux/miniflux:latest
    container_name: miniflux
    restart: always
    networks:
      - traefik
      - miniflux
    depends_on:
      - miniflux-db
    environment:
      - "TZ={{ general_timezone }}"
      - "DATABASE_URL=postgres://miniflux:{{ app_miniflux_db_pass }}@miniflux-db/miniflux?sslmode=disable"
      - "RUN_MIGRATIONS=1"
      - "CREATE_ADMIN=1"
      - "ADMIN_USERNAME={{ app_miniflux_admin_user }}"
      - "ADMIN_PASSWORD={{ app_miniflux_admin_pass }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.miniflux.entrypoints=websecure"
      - "traefik.http.routers.miniflux.rule=Host(`feed.{{ general_domain_default }}`)"
      - "traefik.http.routers.miniflux.tls.certresolver=le-tls"
      - "traefik.http.services.miniflux-{{ ansible_hostname }}.loadbalancer.server.port=8080"

  miniflux-db:
    image: postgres:12-alpine
    container_name: miniflux-db
    restart: always
    networks:
      - miniflux
    volumes:
      - "{{ general_path_appdata }}/miniflux/db:/var/lib/postgresql/data"
      - "miniflux-db-dump:/backup"
    environment:
      - "TZ={{ general_timezone }}"
      - "POSTGRES_USER=miniflux"
      - "POSTGRES_PASSWORD={{ app_miniflux_db_pass }}"

  # =========================
  # =         BACKUP        =
  # =========================
  borgmatic:
    image: b3vis/borgmatic:latest
    container_name: borgmatic
    restart: always
    volumes:
      # Backup locations
      - "{{ general_path_appdata }}/home-automation/home-assistant/config:/mnt/source/home-automation/home-assistant/config:ro"
      # Config and cache
      - "./borgmatic/borgmatic.d:/etc/borgmatic.d"
      - "./borgmatic/ssh:/root/.ssh"
      - "{{ general_path_appdata }}/borgmatic/borgmatic/config:/root/.config/borg"
      - "{{ general_path_appdata }}/borgmatic/borgmatic/cache:/root/.cache/borg"
      - "{{ general_path_appdata }}/borgmatic/borgmatic/restore:/mnt/restore"
    environment:
      - "TZ={{ general_timezone }}"
      - "BORG_PASSPHRASE={{ app_borgmatic_borg_passphrase }}"

  # =========================
  # =     AUTO-UPDATER      =
  # =========================
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "0 0 4 * * *" --cleanup
    environment:
      - "TZ={{ general_timezone }}"

#################################################################
#                            NETWORKS                           #
#################################################################
networks:
  home-automation:
    name: home-automation

  miniflux:
    name: miniflux

  traefik:
    name: traefik

#################################################################
#                            VOLUMES                            #
#################################################################
volumes:
  miniflux-db-dump:
  traefik-cert:
