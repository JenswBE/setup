- include_tasks: tasks/powertop.yml
  tags: ["setup", "powertop"]

- name: Disable systemd-resolved DNSStubListener
  # Based on https://www.qualityology.com/tech/ubuntu-port-53-already-in-use-how-to-free-the-dns-port/
  ansible.builtin.lineinfile:
    dest: "/etc/systemd/resolved.conf"
    regexp: '^#?\s*DNSStubListener='
    line: "DNSStubListener=no"
    state: present
    mode: 0644
  become: yes
  register: disable_dns_stub_listener
  tags: ["setup"]

- name: Create a symbolic link
  ansible.builtin.file:
    src: /run/systemd/resolve/resolv.conf
    dest: /etc/resolv.conf
    owner: root
    group: root
    state: link
    force: true
  become: yes
  tags: ["setup"]

- name: Restart systemd-resolved
  when: disable_dns_stub_listener.changed
  systemd:
    name: "systemd-resolved"
    state: restarted
  become: yes
  tags: ["setup"]

- name: Copy systemd system unit templates
  include_tasks: tasks/helpers/copy_templates_folder.yml
  vars:
    - templates_folder: "{{ ansible_hostname }}/etc/systemd/system"
    - destination_folder: "/etc/systemd/system"
    - destination_owner: root
    - destination_group: root
    - destination_mode_files: 0600
    - destination_mode_dirs: 0700
    - destination_delete_extra: false
  tags: ["systemd"]

- name: Force systemd reload
  become: yes
  systemd:
    daemon_reload: yes
  tags: ["systemd"]

- name: Enable systemd services and timers
  become: yes
  systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - btrfs-scrub.timer
    - data.mount
    - docker-update-containers.timer
    - fatrace-btrfs.service
    - glitchtip-dump-db.timer
    - mnt-btrfs.mount
    - nextcloud-cron.timer
    - nextcloud-dump-db.timer
    - nextcloud-maps-scan-photos.timer
    - nextcloud-preview-generator.timer
    - nextcloud-update-apps.timer
  tags: ["systemd"]

- name: Copy home/_user_/kubo templates
  include_tasks: tasks/helpers/copy_templates_folder.yml
  vars:
    - templates_folder: "{{ ansible_hostname }}/home/_user_/kubo"
    - destination_folder: "{{ ansible_user_dir }}/{{ ansible_hostname }}"
    - destination_owner: "{{ ansible_real_user_id }}"
    - destination_group: "{{ ansible_real_group_id }}"
    - destination_mode_files: 0600
    - destination_mode_dirs: 0700
    - destination_delete_extra: true
  tags: ["docker"]
