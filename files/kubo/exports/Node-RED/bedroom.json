[
    {
        "id": "46b4ba35.3f801c",
        "type": "tab",
        "label": "Bedroom",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d893488a.f8e76",
        "type": "subflow",
        "name": "dashboard",
        "info": "A simple zigbee2mqtt dashboard, it takes mqtt input and gives mqtt output.",
        "category": "zigbee2mqtt",
        "in": [
            {
                "x": 100,
                "y": 180,
                "wires": [
                    {
                        "id": "8b244745.b1b59"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 240,
                "y": 180,
                "wires": [
                    {
                        "id": "89552bfd.da82f8",
                        "port": 0
                    }
                ]
            }
        ],
        "inputLabels": [
            "mqtt"
        ],
        "outputLabels": [
            "mqtt"
        ],
        "icon": "node-red-dashboard/ui_form.png"
    },
    {
        "id": "73659738.6d05e",
        "type": "mqtt-broker",
        "z": "",
        "name": "Flash",
        "broker": "ha-mosquitto",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "e61d8742.42735",
        "type": "ui_group",
        "z": "",
        "name": "Bedroom",
        "tab": "57c0642f.c58964",
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "57c0642f.c58964",
        "type": "ui_tab",
        "z": "",
        "name": "Home",
        "icon": "settings",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ab7c2791.97f8a8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "c8225571.4e7b28",
        "type": "mqtt in",
        "z": "46b4ba35.3f801c",
        "name": "Button: Bedroom - Bed",
        "topic": "zigbee2mqtt/button_bedroom_bed",
        "qos": "2",
        "datatype": "json",
        "broker": "73659738.6d05e",
        "x": 140,
        "y": 480,
        "wires": [
            [
                "613e908f.02aa8"
            ]
        ]
    },
    {
        "id": "f92e33b0.61d38",
        "type": "mqtt out",
        "z": "46b4ba35.3f801c",
        "name": "Lamp: Bedroom (set)",
        "topic": "zigbee2mqtt/lamp_bedroom/set",
        "qos": "",
        "retain": "",
        "broker": "73659738.6d05e",
        "x": 2120,
        "y": 540,
        "wires": []
    },
    {
        "id": "cfcbe86e.94aa08",
        "type": "ui_switch",
        "z": "d893488a.f8e76",
        "name": "permit_join",
        "label": "Pairing",
        "tooltip": "Enable joining of new devices",
        "group": "e61d8742.42735",
        "order": 1,
        "width": "4",
        "height": "1",
        "passthru": false,
        "decouple": "true",
        "topic": "zigbee2mqtt/bridge/config/permit_join",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 390,
        "y": 120,
        "wires": [
            [
                "5db27927.32aab"
            ]
        ]
    },
    {
        "id": "5e1c5581.1e9c5c",
        "type": "function",
        "z": "d893488a.f8e76",
        "name": "update_zigbee_ui",
        "func": "var mqtt = null;\nvar permit_join = null;\nvar log_level = null;\nvar devices = null;\n\n// decode json payload\nif (typeof msg.payload == \"string\") {\n    try {\n        msg.payload = JSON.parse(msg.payload);\n    } catch (e) {\n        // payload was not json\n    }\n}\n\n// route messages\nswitch (msg.topic) {\n    case \"zigbee2mqtt/bridge/state\":\n        if (msg.payload == \"online\") {\n            mqtt = {\n                \"topic\": \"zigbee2mqtt/bridge/config/devices/get\",\n                \"payload\": true,\n            };\n        }\n        break;\n    case \"zigbee2mqtt/bridge/config\":\n        permit_join = {\n            \"payload\": msg.payload.permit_join,\n        };\n        log_level = {\n            \"payload\": msg.payload.log_level,\n        };\n        break;\n    case \"zigbee2mqtt/bridge/config/devices\":\n        var devices = {\"options\": []}\n        \n        for (var i = 0; i < msg.payload.length; i++) {\n            if (msg.payload[i].type == \"Coordinator\")\n                continue;\n           \n            var opt = {};\n            opt[msg.payload[i].friendly_name] =\n                msg.payload[i];\n            devices.options.push(opt);\n        }\n        break;\n}\nreturn [\n    mqtt,\n    permit_join,\n    log_level,\n    devices,\n];",
        "outputs": 4,
        "noerr": 0,
        "x": 170,
        "y": 100,
        "wires": [
            [
                "8ea343da.d116c"
            ],
            [
                "cfcbe86e.94aa08"
            ],
            [
                "573e7b08.246334"
            ],
            [
                "39bb6ee3.fb7c12"
            ]
        ],
        "outputLabels": [
            "mqtt",
            "permit_join",
            "log_level",
            "devices"
        ],
        "icon": "node-red/switch.png"
    },
    {
        "id": "573e7b08.246334",
        "type": "ui_dropdown",
        "z": "d893488a.f8e76",
        "name": "log_level",
        "label": "Log Level",
        "tooltip": "Select the log level for zigbee2mqtt",
        "place": "Select option",
        "group": "e61d8742.42735",
        "order": 2,
        "width": "6",
        "height": "1",
        "passthru": false,
        "options": [
            {
                "label": "Info",
                "value": "info",
                "type": "str"
            },
            {
                "label": "Debug",
                "value": "debug",
                "type": "str"
            },
            {
                "label": "Warn",
                "value": "warn",
                "type": "str"
            },
            {
                "label": "Error",
                "value": "error",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "zigbee2mqtt/bridge/config/log_level",
        "x": 380,
        "y": 160,
        "wires": [
            [
                "76988225.f09404"
            ]
        ]
    },
    {
        "id": "39bb6ee3.fb7c12",
        "type": "ui_dropdown",
        "z": "d893488a.f8e76",
        "name": "device",
        "label": "",
        "tooltip": "Select a device",
        "place": "Device",
        "group": "e61d8742.42735",
        "order": 3,
        "width": "8",
        "height": "1",
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 370,
        "y": 200,
        "wires": [
            [
                "844598ae.436718"
            ]
        ]
    },
    {
        "id": "5db27927.32aab",
        "type": "link out",
        "z": "d893488a.f8e76",
        "name": "permit_join",
        "links": [
            "89552bfd.da82f8"
        ],
        "x": 515,
        "y": 120,
        "wires": []
    },
    {
        "id": "76988225.f09404",
        "type": "link out",
        "z": "d893488a.f8e76",
        "name": "log_level",
        "links": [
            "89552bfd.da82f8"
        ],
        "x": 515,
        "y": 160,
        "wires": []
    },
    {
        "id": "844598ae.436718",
        "type": "function",
        "z": "d893488a.f8e76",
        "name": "store_device_cur",
        "func": "flow.set(\"device\", msg.payload.friendly_name);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 200,
        "wires": [
            [
                "e920c174.c23b68"
            ]
        ],
        "outputLabels": [
            "device_info",
            "remove_confirm"
        ]
    },
    {
        "id": "1e6e2851.3f78b",
        "type": "ui_button",
        "z": "d893488a.f8e76",
        "name": "remove_device",
        "group": "e61d8742.42735",
        "order": 4,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "",
        "tooltip": "Remove device from network",
        "color": "",
        "bgcolor": "red",
        "icon": "remove_circle",
        "payload": "device",
        "payloadType": "flow",
        "topic": "Remove device?",
        "x": 400,
        "y": 360,
        "wires": [
            [
                "581ed2ff.308194"
            ]
        ]
    },
    {
        "id": "c43e27a3.e50dc8",
        "type": "ui_button",
        "z": "d893488a.f8e76",
        "name": "refresh_devices",
        "group": "e61d8742.42735",
        "order": 5,
        "width": "1",
        "height": "2",
        "passthru": false,
        "label": "",
        "tooltip": "Refresh devices information",
        "color": "",
        "bgcolor": "gray",
        "icon": "update",
        "payload": "true",
        "payloadType": "bool",
        "topic": "zigbee2mqtt/bridge/config/devices/get",
        "x": 400,
        "y": 280,
        "wires": [
            [
                "7a035cd1.d51a04"
            ]
        ]
    },
    {
        "id": "7a035cd1.d51a04",
        "type": "link out",
        "z": "d893488a.f8e76",
        "name": "refresh_devices",
        "links": [
            "89552bfd.da82f8"
        ],
        "x": 515,
        "y": 280,
        "wires": []
    },
    {
        "id": "e920c174.c23b68",
        "type": "ui_template",
        "z": "d893488a.f8e76",
        "group": "e61d8742.42735",
        "name": "device_info",
        "order": 8,
        "width": "10",
        "height": "4",
        "format": "<div>\n    <h3>Device Information</h3>\n    <div><label style=\"width: 8em; display: inline-block;\">Name:</label> <span ng-bind-html=\"msg.payload.friendly_name\"></span></div>\n    <div><label style=\"width: 8em; display: inline-block;\">IEEE Address:</label> <span ng-bind-html=\"msg.payload.ieeeAddr\"></span></div>\n    <div><label style=\"width: 8em; display: inline-block;\">Type:</label> <span ng-bind-html=\"msg.payload.type\"></span></div>\n    <div><label style=\"width: 8em; display: inline-block;\">Manufacturer :</label> <span ng-bind-html=\"msg.payload.manufName\"></span></div>\n    <div><label style=\"width: 8em; display: inline-block;\">Model:</label> <span ng-bind-html=\"msg.payload.modelId\"></span> <span style=\"font-weight: bold;\" ng-bind-html=\"msg.payload.model\"></span></div>\n    <div><label style=\"width: 8em; display: inline-block;\">Power Source:</label> <span ng-bind-html=\"msg.payload.powerSource\"></span></div>\n    <div><label style=\"width: 8em; display: inline-block;\">Firmware:</label> <span ng-bind-html=\"msg.payload.swBuildId\"></span></div>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 790,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "d626fbf0.a7c548",
        "type": "link out",
        "z": "d893488a.f8e76",
        "name": "execute_remove",
        "links": [
            "89552bfd.da82f8"
        ],
        "x": 1075,
        "y": 360,
        "wires": []
    },
    {
        "id": "24874e18.2f2112",
        "type": "ui_button",
        "z": "d893488a.f8e76",
        "name": "rename_device",
        "group": "e61d8742.42735",
        "order": 7,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "",
        "tooltip": "Rename device",
        "color": "",
        "bgcolor": "orange",
        "icon": "swap_horiz",
        "payload": "device_rename",
        "payloadType": "flow",
        "topic": "zigbee2mqtt/bridge/config/rename",
        "x": 400,
        "y": 320,
        "wires": [
            [
                "b27e8f1f.3d7798"
            ]
        ]
    },
    {
        "id": "4718ed7b.0176ac",
        "type": "ui_text_input",
        "z": "d893488a.f8e76",
        "name": "device_new",
        "label": "",
        "tooltip": "New device name",
        "group": "e61d8742.42735",
        "order": 6,
        "width": "8",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 390,
        "y": 240,
        "wires": [
            [
                "2cab2a71.fb8a76"
            ]
        ]
    },
    {
        "id": "2cab2a71.fb8a76",
        "type": "function",
        "z": "d893488a.f8e76",
        "name": "store_device_new",
        "func": "var rename_payload = null;\nvar name_old = flow.get(\"device\");\nvar name_new = msg.payload;\n\nif (name_old != name_new && name_new !== \"\") {\n    rename_payload = {\n        \"old\": flow.get(\"device\"),\n        \"new\": msg.payload,\n    }\n}\n\nflow.set(\"device_rename\", rename_payload);",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "a4cd4a7f.a15ee",
        "type": "link out",
        "z": "d893488a.f8e76",
        "name": "execute_rename::mqtt",
        "links": [
            "89552bfd.da82f8"
        ],
        "x": 1075,
        "y": 320,
        "wires": []
    },
    {
        "id": "b27e8f1f.3d7798",
        "type": "function",
        "z": "d893488a.f8e76",
        "name": "execute_rename",
        "func": "var msg_rename = msg;\nvar msg_update = {};\nvar msg_clear = {};\n\nif (msg_rename.payload !== null) {\n    // update devices\n    msg_update[\"topic\"] = \"zigbee2mqtt/bridge/config/devices/get\";\n    msg_update[\"payload\"] = true; \n    \n    // clear rename_device field\n    msg_clear[\"payload\"] = \"\";\n    \n    // clear flow fields\n    flow.set(\"device\", null);\n    flow.set(\"rename_payload\", null);\n} else {\n    msg_rename = null;\n    msg_update = null;\n    msg_clear = null;\n}\n\n\nreturn [[msg_rename, msg_update], msg_clear];",
        "outputs": 2,
        "noerr": 0,
        "x": 580,
        "y": 320,
        "wires": [
            [
                "4cba9f23.257868"
            ],
            [
                "6e2346cd.0cc9e8"
            ]
        ],
        "outputLabels": [
            "mqtt",
            "ui_clear"
        ],
        "icon": "node-red/switch.png"
    },
    {
        "id": "4cba9f23.257868",
        "type": "delay",
        "z": "d893488a.f8e76",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 970,
        "y": 320,
        "wires": [
            [
                "a4cd4a7f.a15ee"
            ]
        ]
    },
    {
        "id": "2c2b74d5.bdc44c",
        "type": "link in",
        "z": "d893488a.f8e76",
        "name": "device_new",
        "links": [
            "6e2346cd.0cc9e8"
        ],
        "x": 275,
        "y": 240,
        "wires": [
            [
                "4718ed7b.0176ac"
            ]
        ]
    },
    {
        "id": "6e2346cd.0cc9e8",
        "type": "link out",
        "z": "d893488a.f8e76",
        "name": "execute_rename::ui_clear",
        "links": [
            "2c2b74d5.bdc44c"
        ],
        "x": 695,
        "y": 340,
        "wires": []
    },
    {
        "id": "98f30050.1d0d9",
        "type": "function",
        "z": "d893488a.f8e76",
        "name": "execute_remove",
        "func": "var msg_remove = {};\nvar msg_update = {};\n\nif (msg.payload == \"yes\") {\n    // remove device\n    msg_remove[\"topic\"] = \"zigbee2mqtt/bridge/config/remove\";\n    msg_remove[\"payload\"] = flow.get(\"device\"); \n    \n    // update devices\n    msg_update[\"topic\"] = \"zigbee2mqtt/bridge/config/devices/get\";\n    msg_update[\"payload\"] = true; \n} else {\n    msg_remove = null;\n    msg_update = null;\n}\n\nreturn [[msg_remove, msg_update]];",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 360,
        "wires": [
            [
                "f934860.1012578"
            ]
        ],
        "outputLabels": [
            "mqtt"
        ],
        "icon": "node-red/switch.png"
    },
    {
        "id": "f934860.1012578",
        "type": "delay",
        "z": "d893488a.f8e76",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 970,
        "y": 360,
        "wires": [
            [
                "d626fbf0.a7c548"
            ]
        ]
    },
    {
        "id": "ac40d511.2264b8",
        "type": "inject",
        "z": "d893488a.f8e76",
        "name": "networkmap",
        "topic": "zigbee2mqtt/bridge/networkmap",
        "payload": "graphviz",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 390,
        "y": 440,
        "wires": [
            [
                "aa719c98.67eee"
            ]
        ]
    },
    {
        "id": "aa719c98.67eee",
        "type": "link out",
        "z": "d893488a.f8e76",
        "name": "networkmap",
        "links": [
            "89552bfd.da82f8"
        ],
        "x": 515,
        "y": 440,
        "wires": []
    },
    {
        "id": "860e6fe5.15e54",
        "type": "link out",
        "z": "d893488a.f8e76",
        "name": "update_zigbee_ui",
        "links": [
            "89552bfd.da82f8"
        ],
        "x": 515,
        "y": 80,
        "wires": []
    },
    {
        "id": "8ea343da.d116c",
        "type": "delay",
        "z": "d893488a.f8e76",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 380,
        "y": 80,
        "wires": [
            [
                "860e6fe5.15e54"
            ]
        ]
    },
    {
        "id": "f598d1e7.3bde6",
        "type": "link in",
        "z": "d893488a.f8e76",
        "name": "update_zigbee_ui",
        "links": [
            "8b244745.b1b59"
        ],
        "x": 35,
        "y": 100,
        "wires": [
            [
                "5e1c5581.1e9c5c"
            ]
        ]
    },
    {
        "id": "8b244745.b1b59",
        "type": "link out",
        "z": "d893488a.f8e76",
        "name": "mqtt_in",
        "links": [
            "f598d1e7.3bde6"
        ],
        "x": 175,
        "y": 200,
        "wires": []
    },
    {
        "id": "89552bfd.da82f8",
        "type": "link in",
        "z": "d893488a.f8e76",
        "name": "mqtt_out",
        "links": [
            "7a035cd1.d51a04",
            "d626fbf0.a7c548",
            "76988225.f09404",
            "860e6fe5.15e54",
            "a4cd4a7f.a15ee",
            "5db27927.32aab",
            "aa719c98.67eee"
        ],
        "x": 175,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "581ed2ff.308194",
        "type": "ui_toast",
        "z": "d893488a.f8e76",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "no",
        "cancel": "yes",
        "topic": "",
        "name": "confirm_remove",
        "x": 580,
        "y": 360,
        "wires": [
            [
                "98f30050.1d0d9"
            ]
        ]
    },
    {
        "id": "33f437df.d4b178",
        "type": "inject",
        "z": "46b4ba35.3f801c",
        "name": "At deploy",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 120,
        "y": 380,
        "wires": [
            [
                "45da8e2.54ca7f"
            ]
        ]
    },
    {
        "id": "95ff4ec0.407eb",
        "type": "mqtt in",
        "z": "46b4ba35.3f801c",
        "name": "Button: Bedroom - Bath room",
        "topic": "zigbee2mqtt/button_bedroom_bathroom",
        "qos": "2",
        "datatype": "json",
        "broker": "73659738.6d05e",
        "x": 160,
        "y": 540,
        "wires": [
            [
                "613e908f.02aa8"
            ]
        ]
    },
    {
        "id": "8bb394d8.9b536",
        "type": "mqtt in",
        "z": "46b4ba35.3f801c",
        "name": "Button: Bedroom - Living",
        "topic": "zigbee2mqtt/button_bedroom_living",
        "qos": "2",
        "datatype": "json",
        "broker": "73659738.6d05e",
        "x": 150,
        "y": 600,
        "wires": [
            [
                "613e908f.02aa8"
            ]
        ]
    },
    {
        "id": "613e908f.02aa8",
        "type": "switch",
        "z": "46b4ba35.3f801c",
        "name": "Action",
        "property": "payload.click",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "brightness_up",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "brightness_down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "brightness_stop",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 410,
        "y": 540,
        "wires": [
            [
                "d02adbe4.eaf9f"
            ],
            [
                "595f6896.04b3a"
            ],
            [
                "b0e078d1.c91d58"
            ],
            [
                "6d3824dd.1439dc"
            ],
            [
                "8fdff4fc.6d4be8"
            ]
        ],
        "outputLabels": [
            "On",
            "Off",
            "Hold on",
            "Hold off",
            "Release"
        ]
    },
    {
        "id": "595f6896.04b3a",
        "type": "function",
        "z": "46b4ba35.3f801c",
        "name": "Off",
        "func": "if(flow.get('lamp_state') !== \"OFF\") {\n    // Turn lamp off\n    flow.set('lamp_mode', 0);\n} else {\n    // Turn lamp on\n    let max = flow.get('lamp_mode_max');\n    flow.set('lamp_mode', max);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 500,
        "wires": [
            [
                "4d5bdc5f.0c25d4"
            ]
        ]
    },
    {
        "id": "b0e078d1.c91d58",
        "type": "function",
        "z": "46b4ba35.3f801c",
        "name": "Hold on",
        "func": "if(flow.get('lamp_state') === \"OFF\") {\n    // Turn lamp on\n    let min = flow.get('lamp_mode_min');\n    flow.set('lamp_mode', min);\n    return [msg, null];\n} else {\n    // Start dimmer loop\n    flow.set('lamp_mode_loop', 1);\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 640,
        "y": 540,
        "wires": [
            [
                "4d5bdc5f.0c25d4"
            ],
            [
                "c2da609e.c0e418"
            ]
        ]
    },
    {
        "id": "d02adbe4.eaf9f",
        "type": "function",
        "z": "46b4ba35.3f801c",
        "name": "On",
        "func": "if(flow.get('lamp_state') !== \"OFF\") {\n    // Turn lamp off\n    flow.set('lamp_mode', 0);\n} else {\n    // Turn lamp on\n    let max = flow.get('lamp_mode_max');\n    flow.set('lamp_mode', max);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 460,
        "wires": [
            [
                "4d5bdc5f.0c25d4"
            ]
        ]
    },
    {
        "id": "6d3824dd.1439dc",
        "type": "function",
        "z": "46b4ba35.3f801c",
        "name": "Hold off",
        "func": "if(flow.get('lamp_state') === \"OFF\") {\n    // Turn lamp on\n    let min = flow.get('lamp_mode_min');\n    flow.set('lamp_mode', min);\n    return [msg, null];\n} else {\n    // Start dimmer loop\n    flow.set('lamp_mode_loop', -1);\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 640,
        "y": 580,
        "wires": [
            [
                "4d5bdc5f.0c25d4"
            ],
            [
                "c2da609e.c0e418"
            ]
        ]
    },
    {
        "id": "8fdff4fc.6d4be8",
        "type": "function",
        "z": "46b4ba35.3f801c",
        "name": "Hold stop",
        "func": "// Stop dimmer loop\nflow.set('lamp_mode_loop', 0);",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "45da8e2.54ca7f",
        "type": "function",
        "z": "46b4ba35.3f801c",
        "name": "Init flow and constants",
        "func": "// Color\nlet dark_orange = \"fd9402\";\nlet dark_yellow = \"ebb63e\";\nlet warm_white = \"efd275\";\nlet warm_white2 = \"efc53b\";\nlet mode_color = [\n    dark_orange, // 1\n    dark_yellow, // 2\n    dark_yellow, // 3\n    warm_white2,  // 4\n    warm_white2   // 5\n    ];\nflow.set('mode_c', mode_color);\n    \n// Brightness\nlet mode_brightness = [\n    10,  // 1\n    60,  // 2\n    140,  // 3\n    200, // 4\n    255  // 5\n    ];\nflow.set('mode_b', mode_brightness);\n\n// Lamp initial state\nflow.set('lamp_mode', 0);\nflow.set('lamp_state', \"OFF\");\nflow.set('lamp_brightness', 0);\nflow.set('lamp_color', '000000');\n\n// Lamp mode settings\nflow.set('lamp_mode_min', 1);\nflow.set('lamp_mode_max', mode_color.length);\nflow.set('lamp_mode_loop', 0);",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "41cb1ff5.637de",
        "type": "ui_button",
        "z": "46b4ba35.3f801c",
        "name": "Off",
        "group": "e61d8742.42735",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Off",
        "tooltip": "",
        "color": "white",
        "bgcolor": "#aa4444",
        "icon": "",
        "payload": "0",
        "payloadType": "num",
        "topic": "",
        "x": 90,
        "y": 760,
        "wires": [
            [
                "db9c25fc.29766"
            ]
        ]
    },
    {
        "id": "3f69c2d4.75947e",
        "type": "ui_button",
        "z": "46b4ba35.3f801c",
        "name": "Night (mode 1)",
        "group": "e61d8742.42735",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Night (mode 1)",
        "tooltip": "",
        "color": "white",
        "bgcolor": "#097479",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "",
        "x": 120,
        "y": 800,
        "wires": [
            [
                "db9c25fc.29766"
            ]
        ]
    },
    {
        "id": "208fd48f.b9f9dc",
        "type": "ui_button",
        "z": "46b4ba35.3f801c",
        "name": "Mode 2",
        "group": "e61d8742.42735",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Mode 2",
        "tooltip": "",
        "color": "white",
        "bgcolor": "#097479",
        "icon": "",
        "payload": "2",
        "payloadType": "num",
        "topic": "",
        "x": 100,
        "y": 840,
        "wires": [
            [
                "db9c25fc.29766"
            ]
        ]
    },
    {
        "id": "6f6f8d09.6c26c4",
        "type": "ui_button",
        "z": "46b4ba35.3f801c",
        "name": "Mode 3",
        "group": "e61d8742.42735",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Mode 3",
        "tooltip": "",
        "color": "white",
        "bgcolor": "#097479",
        "icon": "",
        "payload": "3",
        "payloadType": "num",
        "topic": "",
        "x": 100,
        "y": 880,
        "wires": [
            [
                "db9c25fc.29766"
            ]
        ]
    },
    {
        "id": "2cceba11.4b331e",
        "type": "ui_button",
        "z": "46b4ba35.3f801c",
        "name": "Mode 4",
        "group": "e61d8742.42735",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Mode 4",
        "tooltip": "",
        "color": "white",
        "bgcolor": "#097479",
        "icon": "",
        "payload": "4",
        "payloadType": "num",
        "topic": "",
        "x": 100,
        "y": 920,
        "wires": [
            [
                "db9c25fc.29766"
            ]
        ]
    },
    {
        "id": "1fbaa285.7402dd",
        "type": "ui_button",
        "z": "46b4ba35.3f801c",
        "name": "Day (mode 5)",
        "group": "e61d8742.42735",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Day (mode 5)",
        "tooltip": "",
        "color": "white",
        "bgcolor": "#097479",
        "icon": "",
        "payload": "5",
        "payloadType": "num",
        "topic": "",
        "x": 120,
        "y": 960,
        "wires": [
            [
                "db9c25fc.29766"
            ]
        ]
    },
    {
        "id": "db9c25fc.29766",
        "type": "function",
        "z": "46b4ba35.3f801c",
        "name": "Set mode",
        "func": "flow.set('lamp_mode', msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 860,
        "wires": [
            [
                "4d5bdc5f.0c25d4"
            ]
        ]
    },
    {
        "id": "4d5bdc5f.0c25d4",
        "type": "function",
        "z": "46b4ba35.3f801c",
        "name": "Update lamp",
        "func": "let mode = flow.get('lamp_mode');\nif (mode === 0) {\n    // Turn light off\n    flow.set('lamp_state', 'OFF');\n    flow.set('lamp_brightness', 0);\n    flow.set('lamp_color', '000000');\n    msg.payload = {\"state\": \"OFF\"};\n    return [msg, null];\n} else if (mode === -1) {\n    // Custom mode\n    return [null, msg];\n} else {\n    let min = flow.get('lamp_mode_min');\n    let max = flow.get('lamp_mode_max');\n    if (min <= mode && mode <= max) {\n        // Process new mode\n        flow.set('lamp_state', 'ON');\n        let b = flow.get('mode_b');\n        flow.set('lamp_brightness', b[mode - 1]);\n        let c = flow.get('mode_c');\n        flow.set('lamp_color', c[mode - 1]);\n        return [null, msg];\n    } else {\n        node.error(\"Invalid mode: \" + mode, msg);\n        return [null, null];\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 1130,
        "y": 540,
        "wires": [
            [
                "c440d4e3.01f0a"
            ],
            [
                "df7dde16.856ad",
                "1a84d218.7b476e",
                "9f0b6b18.5f3cb"
            ]
        ]
    },
    {
        "id": "df7dde16.856ad",
        "type": "function",
        "z": "46b4ba35.3f801c",
        "name": "Update color",
        "func": "msg.payload = {\n    \"color\": {\n        \"hex\": flow.get('lamp_color')\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1550,
        "y": 580,
        "wires": [
            [
                "c440d4e3.01f0a"
            ]
        ]
    },
    {
        "id": "1a84d218.7b476e",
        "type": "delay",
        "z": "46b4ba35.3f801c",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1350,
        "y": 620,
        "wires": [
            [
                "fa0351d4.869f98"
            ]
        ]
    },
    {
        "id": "fa0351d4.869f98",
        "type": "function",
        "z": "46b4ba35.3f801c",
        "name": "Update brightness",
        "func": "msg.payload = {\n    \"brightness\": flow.get('lamp_brightness')\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1570,
        "y": 620,
        "wires": [
            [
                "c440d4e3.01f0a"
            ]
        ]
    },
    {
        "id": "c440d4e3.01f0a",
        "type": "function",
        "z": "46b4ba35.3f801c",
        "name": "Collect update",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1840,
        "y": 540,
        "wires": [
            [
                "f92e33b0.61d38",
                "5c8d8a20.6d5994"
            ]
        ]
    },
    {
        "id": "5c8d8a20.6d5994",
        "type": "debug",
        "z": "46b4ba35.3f801c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 2090,
        "y": 500,
        "wires": []
    },
    {
        "id": "c2da609e.c0e418",
        "type": "function",
        "z": "46b4ba35.3f801c",
        "name": "Update mode",
        "func": "let loop = flow.get('lamp_mode_loop');\nif (loop !== 0) {\n    let mode = flow.get('lamp_mode');\n    let min = flow.get('lamp_mode_min');\n    let max = flow.get('lamp_mode_max');\n    \n    let new_mode = mode + loop;\n    if (min <= new_mode && new_mode <= max) {\n        // Update mode\n        flow.set('lamp_mode', new_mode);\n    }\n    \n    // Continue looping\n    // Loop even if boundary reached,\n    // to mitigate connection issues\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 600,
        "wires": [
            [
                "4d5bdc5f.0c25d4",
                "38ae894f.9f10ee"
            ]
        ]
    },
    {
        "id": "38ae894f.9f10ee",
        "type": "delay",
        "z": "46b4ba35.3f801c",
        "name": "Dimmer delay (3s)",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 850,
        "y": 640,
        "wires": [
            [
                "c2da609e.c0e418"
            ]
        ]
    },
    {
        "id": "9f0b6b18.5f3cb",
        "type": "trigger",
        "z": "46b4ba35.3f801c",
        "op1": "false",
        "op2": "true",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "6",
        "extend": true,
        "units": "hr",
        "reset": "",
        "bytopic": "all",
        "name": "Auto off (6h)",
        "x": 1350,
        "y": 680,
        "wires": [
            [
                "b61bd9d.7fbdc28"
            ]
        ],
        "outputLabels": [
            "Mode"
        ]
    },
    {
        "id": "b61bd9d.7fbdc28",
        "type": "function",
        "z": "46b4ba35.3f801c",
        "name": "Off",
        "func": "if (msg.payload) {\n    // Turn lamp off\n    flow.set('lamp_mode', 0);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1530,
        "y": 680,
        "wires": [
            [
                "4d5bdc5f.0c25d4"
            ]
        ]
    },
    {
        "id": "38f06476.b75b5c",
        "type": "inject",
        "z": "46b4ba35.3f801c",
        "name": "",
        "topic": "",
        "payload": "{\"state\":\"\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 1060,
        "wires": [
            [
                "1887d33a.27a40d"
            ]
        ]
    },
    {
        "id": "1887d33a.27a40d",
        "type": "mqtt out",
        "z": "46b4ba35.3f801c",
        "name": "Lamp: Bedroom (get)",
        "topic": "zigbee2mqtt/lamp_bedroom/get",
        "qos": "",
        "retain": "",
        "broker": "73659738.6d05e",
        "x": 340,
        "y": 1060,
        "wires": []
    },
    {
        "id": "6550f1be.a06e58",
        "type": "mqtt in",
        "z": "46b4ba35.3f801c",
        "name": "Lamp: Bedroom",
        "topic": "zigbee2mqtt/lamp_bedroom",
        "qos": "2",
        "datatype": "json",
        "broker": "73659738.6d05e",
        "x": 140,
        "y": 1120,
        "wires": [
            [
                "40649024.d92138"
            ]
        ]
    },
    {
        "id": "40649024.d92138",
        "type": "debug",
        "z": "46b4ba35.3f801c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 310,
        "y": 1120,
        "wires": []
    },
    {
        "id": "3e613ad4.56ade6",
        "type": "mqtt out",
        "z": "46b4ba35.3f801c",
        "name": "Lamp: Bedroom (set)",
        "topic": "zigbee2mqtt/lamp_bedroom/set",
        "qos": "",
        "retain": "",
        "broker": "73659738.6d05e",
        "x": 760,
        "y": 1060,
        "wires": []
    },
    {
        "id": "1f679d46.95b7fb",
        "type": "inject",
        "z": "46b4ba35.3f801c",
        "name": "Debug",
        "topic": "",
        "payload": "{\"brightness\":254,\"color\":{\"hex\":\"efc53b\"}}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 570,
        "y": 1060,
        "wires": [
            [
                "3e613ad4.56ade6"
            ]
        ]
    }
]