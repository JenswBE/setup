- name: Setup Wireguard config
  become: true
  register: wireguard_config
  ansible.builtin.template:
    src: "wireguard.conf.j2"
    dest: "/etc/wireguard/{{ wg_config.name }}.conf"
    owner: root
    group: root
    mode: "600"

- name: Ensure Wireguard drop-in directory exists
  become: true
  ansible.builtin.file:
    owner: root
    group: root
    mode: "0755"
    path: /etc/systemd/system/wg-quick@{{ wg_config.name }}.service.d
    state: directory

- name: Ensure Wireguard is restarted on failure
  become: true
  ansible.builtin.copy:
    dest: /etc/systemd/system/wg-quick@{{ wg_config.name }}.service.d/10-restart_on_failure.conf
    owner: root
    group: root
    mode: "0644"
    content: |
      [Service]
      Restart=on-failure
      RestartSec=5m

- name: Ensure Wireguard is started after Docker
  become: true
  ansible.builtin.copy:
    dest: /etc/systemd/system/wg-quick@{{ wg_config.name }}.service.d/10-start_before_docker.conf
    owner: root
    group: root
    mode: "0644"
    content: |
      [Unit]
      Before=docker.service
    # Systemd reload is not needed as this change only applies after a reboot anyway

  # Without, resolvconf returns "Failed to set DNS configuration: Could not activate remote peer."
- name: Ensure systemd-resolved is running
  when: ansible_distribution == 'Rocky'
  become: true
  ansible.builtin.systemd_service:
    name: systemd-resolved
    enabled: true
    state: started

- name: Enable Wireguard on boot
  become: true
  ansible.builtin.systemd_service:
    name: "wg-quick@{{ wg_config.name }}"
    enabled: true
    state: started

# Cannot use a handler as the interface name is dynamic
- name: Restart Wireguard interface if config was changed # noqa: no-handler
  become: true
  when: wireguard_config.changed
  ansible.builtin.systemd_service:
    name: "wg-quick@{{ wg_config.name }}"
    state: restarted
