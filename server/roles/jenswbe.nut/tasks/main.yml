- name: Include arg spec
  ansible.builtin.include_tasks: arg_spec.yml

- name: Setup Network UPS Tools (NUT)
  become: true
  block:
    - name: Install NUT client
      ansible.builtin.package:
        state: present
        name: nut-client

    - name: Install NUT server
      when: jwnu_nut_type == 'client_server'
      ansible.builtin.package:
        state: present
        name: nut-server

    - name: Add the user 'nut' to group 'smtp-cli'
      ansible.builtin.user:
        name: nut
        groups: smtp-cli
        append: true

    - name: Set device group with udev rule
      when: jwnu_nut_type == 'client_server'
      ansible.builtin.template:
        src: client_server/50-ups.rules
        dest: /etc/udev/rules.d/50-ups.rules
        owner: root
        group: root
        mode: "644"
        variable_start_string: '#VAR:'
        variable_end_string: ':VAR#'
        lstrip_blocks: true
        trim_blocks: false
      notify: Reload udev

    - name: Flush handlers # udev rule is needed before NUT/UPS driver
      ansible.builtin.meta: flush_handlers

    - name: Copy NUT config
      ansible.builtin.include_role:
        name: jenswbe.copy_dir
      vars:
        jwcd_source_templates_dir: "roles/jenswbe.nut/templates/{{ jwnu_nut_type }}/nut"
        jwcd_destination_dir: /etc/nut
        jwcd_privileged: true
        jwcd_destination_mode_files: "640"
        jwcd_destination_mode_dirs: "750"
        jwcd_destination_owner: root
        jwcd_destination_group: nut

    - name: Copy upssched-cmd
      ansible.builtin.copy:
        src: files/upssched-cmd/cmd.py
        dest: /usr/sbin/upssched-cmd
        owner: root
        group: nut
        mode: "755"

    - name: Force restart NUT client services
      ansible.builtin.service:
        name: "{{ item }}"
        state: restarted
      loop:
        - nut-monitor

    - name: Force restart NUT server services
      when: jwnu_nut_type == 'client_server'
      ansible.builtin.service:
        name: nut-server
        state: restarted

    - name: Ensure nut-driver-enumerator ran
      when: jwnu_nut_type == 'client_server'
      ansible.builtin.service:
        name: nut-server
        state: restarted

    - name: Restart driver
      when: jwnu_nut_type == 'client_server'
      ansible.builtin.service:
        name: nut-driver@apc
        state: restarted

    - name: Enable NUT services on boot
      ansible.builtin.service:
        name: nut.target
        enabled: true

    - name: Test upssched-cmd (should receive email)
      ansible.builtin.command: /usr/sbin/upssched-cmd test
      changed_when: false
      retries: 3 # Server might need some time to settle after reboot
      delay: 5
