- name: Create temporary dir
  connection: "{{ privileged | ternary('ssh', 'local') }}"
  ansible.builtin.tempfile:
    state: directory
  register: tmp_dir
  changed_when: false
  tags: ["always"]

- name: Create directory structure in temporary dir
  connection: "{{ privileged | ternary('ssh', 'local') }}"
  ansible.builtin.file:
    path: "{{ tmp_dir.path }}/{{ item.path }}"
    state: directory
    mode: "{{ destination_mode_dirs }}"
  with_community.general.filetree: templates/{{ templates_folder }}
  when: item.state == 'directory'
  changed_when: false
  tags: ["always"]

- name: Generate template files to temporary dir
  connection: "{{ privileged | ternary('ssh', 'local') }}"
  ansible.builtin.template:
    src: "{{ item.root }}/{{ item.path }}"
    dest: "{{ tmp_dir.path }}/{{ item.path }}"
    mode: "{{ destination_mode_files }}"
    block_start_string: |-
      {{ '#BLOCK:' if item.path is match('docker-compose(\..*)?\.ya?ml') else '{%' }}
    block_end_string: |-
      {{ ':BLOCK#' if item.path is match('docker-compose(\..*)?\.ya?ml') else '%}' }}
    variable_start_string: |-
      {{ '#VAR:' if item.path is match('docker-compose(\..*)?\.ya?ml') else '{{' }}
    variable_end_string: |-
      {{ ':VAR#' if item.path is match('docker-compose(\..*)?\.ya?ml') else '}}' }}
    lstrip_blocks: true
    trim_blocks: false
  with_community.general.filetree: templates/{{ templates_folder }}
  when: item.state == 'file' and item.path is not search(".+\.(png|jpg)$")
  changed_when: false
  tags: ["always"]

- name: Copy binary files
  connection: "{{ privileged | ternary('ssh', 'local') }}"
  ansible.builtin.copy:
    src: "{{ item.root }}/{{ item.path }}"
    dest: "{{ tmp_dir.path }}/{{ item.path }}"
    owner: "{{ destination_owner }}"
    group: "{{ destination_group }}"
    mode: "{{ destination_mode_files }}"
  with_community.general.filetree: templates/{{ templates_folder }}
  when: item.state == 'file' and item.path is search(".+\.(png|jpg)$")
  changed_when: false
  tags: ["always"]

- name: Sync temporary dir to destination
  become: "{{ privileged }}"
  ansible.posix.synchronize:
    src: "{{ tmp_dir.path }}/"
    dest: "{{ destination_folder }}"
    archive: false
    checksum: true
    compress: false
    group: true
    owner: true
    perms: true
    recursive: true
    rsync_opts:
      - "--chown={{ destination_owner }}:{{ destination_group }}"
      - "--chmod=D{{ destination_mode_dirs }},F{{ destination_mode_files }}"
    delete: "{{ destination_delete_extra }}"
  delegate_to: "{{ privileged | ternary(inventory_hostname, 'localhost') }}"
  register: rsync_output
  tags: ["always"]

- name: Show rsync logs
  ansible.builtin.debug:
    var: rsync_output.stdout_lines
  tags: ["always"]

- name: Delete temporary folder
  become: true
  ansible.builtin.file:
    path: "{{ tmp_dir.path }}"
    state: absent
  changed_when: false
  tags: ["always"]
