- name: Install, configure, and enable FirewallD
  become: true
  tags: ["setup", "firewall"]
  block:
    - name: FirewallD - Ensure is installed
      ansible.builtin.package:
        name: firewalld
        state: present

    - name: FirewallD - Ensure is enabled
      become: true
      ansible.builtin.systemd:
        name: firewalld
        state: started
        enabled: true

    - name: FirewallD - Clear current firewall rules
      ansible.builtin.shell: |
        for filepath in /etc/firewalld/zones/*; do    
          filename=$(basename $filepath)
          if [[ $filename =~ ^docker.*$ ]]; then
            echo "Skipping $filepath ..."
            continue
          fi
          echo "Deleting $filepath ..."
          /bin/rm $filepath
        done

    - name: FirewallD - Disable Cockpit
      ansible.posix.firewalld:
        service: cockpit
        permanent: true
        state: disabled

    - name: FirewallD - Create custom zones
      ansible.posix.firewalld:
        zone: "{{ item.name }}"
        state: present
        permanent: true
      loop: "{{ firewalld.zones }}"

    - name: FirewallD - Apply sources to custom zones
      ansible.posix.firewalld:
        zone: "{{ item[0].name }}"
        source: "{{ lookup('vars', 'network_' + item[1]) }}"
        state: enabled
        permanent: true
      loop: "{{ firewalld.zones | subelements('source_networks') }}"

    - name: FirewallD - Allow additional services
      ansible.posix.firewalld:
        zone: "{{ item[0].zone }}"
        service: "{{ item[1] }}"
        state: enabled
        permanent: true
      loop: "{{ firewalld.allowed_services | subelements('services') }}"

    - name: FirewallD - Allow additional ports
      ansible.posix.firewalld:
        zone: "{{ item[0].zone }}"
        port: "{{ item[1] }}"
        state: enabled
        permanent: true
      loop: "{{ firewalld.allowed_ports | subelements('ports') }}"

    - name: FirewallD - Reload
      become: true
      ansible.builtin.systemd:
        name: firewalld
        state: reloaded
