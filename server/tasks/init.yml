- name: Init tasks
  tags: ["always"]
  block:
    - name: Check if supported distro
      ansible.builtin.fail:
        msg: "{{ ansible_distribution }} is not a supported distro for this playbook. Supported distro's: {{ playbook_supported_distros }}"
      when: ansible_distribution not in playbook_supported_distros

    - name: Derive facts
      ansible.builtin.set_fact:
        ansible_distribution_lowercase: "{{ ansible_distribution | lower }}"
        ansible_os_family_lowercase: "{{ ansible_os_family | lower }}"
        arch_map:
          i386: "i386"
          x86_64: "amd64"
          aarch64: "arm64"
          armv6l: "armv6"
          armv7l: "armv7"

    - name: Set arch in Golang format
      ansible.builtin.set_fact:
        arch: "{{ arch_map[ansible_architecture] }}"
      tags: ["always"]

    - name: Load domain vars
      ansible.builtin.include_vars: public/domains.yml
      tags: ["always"]

    - name: Load hostname vars
      ansible.builtin.include_vars: public/hostnames.yml
      tags: ["always"]

    - name: Enrich hostnames
      ansible.builtin.set_fact:
        hostnames: "{{ hostnames | enrich_hostnames }}"

    - name: Print hostnames result
      ansible.builtin.debug:
        var: hostnames

    - name: Load public basic vars
      ansible.builtin.include_vars: public/basics.yml

    - name: Load secret basic vars
      ansible.builtin.include_vars: secret/basics.yml

    - name: Load public host specific vars
      ansible.builtin.include_vars: "{{ (item | split('vars/'))[1] }}"
      with_ansible.builtin.fileglob: "{{ ('vars/public/*%s.yml' | format(inventory_hostname)) }}"

    - name: Load secret host specific vars
      ansible.builtin.include_vars: "{{ (item | split('vars/'))[1] }}"
      with_ansible.builtin.fileglob: "{{ ('vars/secret/*%s.yml' | format(inventory_hostname)) }}"
