#################################################################
#                            DEFAULTS                           #
#################################################################
x-defaults: &defaults
  restart: always
  extra_hosts:
    - "host.docker.internal:host-gateway"

#################################################################
#                            SERVICES                           #
#################################################################
services:
  # =========================
  # =         PROXY         =
  # =========================
  # Having 2 Traefik instances (1 on host network and 1 on bridge network)
  # allows to have the real client IP's available inside the bridged
  # Treafik instance (using PROXY protocol). In case you would only have
  # a single instance on the host network, you would loose all the convenience
  # of the Docker provider support (not having to expose each service on a host
  # port and auto-configuration of the services/loadbalancers).
  traefik-host:
    <<: *defaults
    image: traefik:latest
    container_name: traefik-host
    network_mode: host
    command:
      # - "--log.level=DEBUG"
      - "--providers.file.directory=/conf"
      - "--providers.file.watch=true"
      - "--entrypoints.tcp80.address=:80"
      - "--entrypoints.tcp443.address=:443"
    volumes:
      - ./traefik/host:/conf:ro

  traefik:
    <<: *defaults
    image: traefik:latest
    container_name: traefik
    command:
      # - "--log.level=DEBUG"
      - "--accesslog.filepath=/access-logs/access.log" # Used by CrowdSec
      - "--providers.file.directory=/conf"
      - "--providers.file.watch=true"
      - "--providers.docker=true"
      - "--providers.docker.network=traefik"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.proxyProtocol.trustedIPs={{ network_any_private }}"
      - "--entrypoints.websecure.http.middlewares=secure-https@file"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.proxyProtocol.trustedIPs={{ network_any_private }}"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.le-tls.acme.tlsChallenge=true"
      - "--certificatesresolvers.le-tls.acme.email={{ general_mail_admin }}@{{ general_domain_default }}"
      - "--certificatesresolvers.le-tls.acme.storage=/letsencrypt/acme.json"
      - "--api=true"
      - "--ping.manualrouting=true"
    ports:
      - 127.0.0.1:2080:80
      - 127.0.0.1:2443:443
    networks:
      - traefik
    volumes:
      - ./traefik/bridge:/conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-cert:/letsencrypt/
      - traefik-access-logs:/access-logs
    environment:
      TZ: "{{ general_timezone }}"

  traefik-forward-auth:
    <<: *defaults
    image: thomseddon/traefik-forward-auth:2
    container_name: traefik-forward-auth
    networks:
      - traefik
    environment:
      TZ: "{{ general_timezone }}"
      COOKIE_DOMAIN: "{{ general_domain_default }}"
      DEFAULT_PROVIDER: oidc
      SECRET=: "{{ app_traefik_forward_auth_secret }}"
      PROVIDERS_OIDC_ISSUER_URL: "{{ app_traefik_forward_auth_oidc_issuer_url }}"
      PROVIDERS_OIDC_CLIENT_ID: "{{ app_traefik_forward_auth_oidc_client_id }}"
      PROVIDERS_OIDC_CLIENT_SECRET: "{{ app_traefik_forward_auth_oidc_client_secret }}"

  # =========================
  # =       SYNCTHING       =
  # =========================
  syncthing:
    <<: *defaults
    image: syncthing/syncthing:1
    container_name: syncthing
    hostname: "{{ ansible_hostname }}"
    networks:
      - traefik
    ports:
      - "22000:22000"
    volumes:
      - "{{ general_path_appdata }}/syncthing/config:/var/syncthing"
      - "{{ general_path_appdata }}/syncthing/data:/data"
    environment:
      TZ: "{{ general_timezone }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.syncthing.entrypoints=websecure"
      - "traefik.http.routers.syncthing.rule=Host(`syncthing-{{ ansible_hostname }}.{{ general_domain_default }}`)"
      - "traefik.http.routers.syncthing.tls.certresolver=le-tls"
      - "traefik.http.services.syncthing-{{ ansible_hostname }}.loadbalancer.server.port=8384"

  # =========================
  # =      BORG SERVER      =
  # =========================
  borgserver:
    <<: *defaults
    image: nold360/borgserver:latest
    container_name: borgserver
    ports:
      - "23:22"
    volumes:
      - "{{ general_path_appdata }}/borgserver/backups:/backup"
      - "./borgserver:/sshkeys/clients:ro"
      - "borgserver-sshkeys-host:/sshkeys/host"
    environment:
      TZ: "{{ general_timezone }}"
      PUID: "{{ ansible_real_user_id }}"
      PGID: "{{ ansible_real_group_id }}"

  # =========================
  # =        CROWDSEC       =
  # =========================
  crowdsec:
    <<: *defaults
    image: crowdsecurity/crowdsec:{{ crowdsec_version }}
    container_name: crowdsec
    ports:
      - 127.0.0.1:9000:8080
    environment:
      TZ: "{{ general_timezone }}"
      COLLECTIONS: >-
        crowdsecurity/http-cve
        crowdsecurity/linux
        crowdsecurity/traefik
      GID: "{{ ansible_real_group_id }}"
      BOUNCER_KEY_firewall: "{{ app_crowdsec_bouncer_firewall_key }}"
    volumes:
      # Config
      - ./crowdsec/acquis.yaml:/etc/crowdsec/acquis.yaml
      - crowdsec-db:/var/lib/crowdsec/data/
      - crowdsec-config:/etc/crowdsec/
      # Logs
      - /var/log/auth.log:/var/log/auth.log:ro
      - traefik-access-logs:/var/log/traefik:ro

#################################################################
#                            VOLUMES                            #
#################################################################
volumes:
  borgserver-sshkeys-host:
  crowdsec-config:
  crowdsec-db:
  traefik-access-logs:
  traefik-cert:

# #################################################################
# #                            NETWORKS                           #
# #################################################################
networks:
  traefik:
    name: traefik
