#################################################################
#                            DEFAULTS                           #
#################################################################

x-defaults: &defaults
  x-dummy: ""
  # Putting the anchor in this file ensures it's a valid YAML file for Renovate Bot
  #VAR:lookup('ansible.builtin.file', 'files/docker-compose-defaults.yml',) | indent(width=2):VAR#

#################################################################
#                            SERVICES                           #
#################################################################
services:
  # ==============================
  # =   PROXY + STATIC HOSTING   =
  # ==============================
  # Having 2 reverse proxies (1 on host network and 1 on bridge network)
  # allows to have the real client IP's available inside the bridged
  # Caddy instance (using PROXY protocol). In case you would only have
  # a single reverse proxy on the host network, you would loose all the convenience
  # of using Docker networks.
  nginx:
    <<: *defaults
    image: docker.io/library/nginx:alpine
    container_name: nginx
    network_mode: host
    volumes:
      - ./nginx/default.conf:/etc/nginx/nginx.conf:ro,z

  caddy:
    <<: *defaults
    build: ./caddy
    container_name: caddy
    ports:
      - 127.0.0.1:2080:80
      - 127.0.0.1:2443:443
    networks:
      - caddy
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./caddy/configs:/etc/caddy/configs:ro
      - caddy-access-logs:/access_logs
      - caddy-config:/config
      - caddy-data:/data
      - website-assets:/public/assets:ro
      - website-bjoetiek:/public/bjoetiek:ro
      - website-email-username-generator:/public/email-username-generator:ro
      - website-family-trees:/public/family-trees:ro
      - website-hetvleermuizenkind:/public/hetvleermuizenkind:ro
      - website-interwego:/public/interwego:ro
      - website-wtech:/public/wtech:ro
    environment:
      TZ: "#VAR:general_timezone:VAR#"

  # =========================
  # =      FILE UPLOADS     =
  # =========================
  rsyncd:
    <<: *defaults
    build:
      context: ./rsyncd
      args:
        SSH_USERS: |
          assets:900:900
          bjoetiek:901:901
          email-username-generator:902:902
          family-trees:903:903
          hetvleermuizenkind:904:904
          interwego:905:905
          wtech:906:906
    container_name: rsyncd
    network_mode: host # Ensures Crowdsec has real source IP to act on
    environment:
      TZ: "#VAR:general_timezone:VAR#"
    volumes:
      - rsyncd-ssh-host-keys:/etc/ssh/keys
      - website-assets:/data/assets
      - website-bjoetiek:/data/bjoetiek
      - website-email-username-generator:/data/email-username-generator
      - website-family-trees:/data/family-trees
      - website-hetvleermuizenkind:/data/hetvleermuizenkind
      - website-interwego:/data/interwego
      - website-wtech:/data/wtech

  # =========================
  # =        CROWDSEC       =
  # =========================
  # Based on https://github.com/crowdsecurity/example-docker-compose/blob/main/container-socket/docker-compose.yml
  crowdsec:
    <<: *defaults
    image: ghcr.io/crowdsecurity/crowdsec:v1.6.3-debian
    container_name: crowdsec
    ports:
      - 127.0.0.1:9000:8080
      - "#VAR:app_wireguard[0].ip_addresses[0]:VAR#:6060:6060"
    depends_on:
      crowdsec-docker-proxy:
        condition: service_started
    networks:
      - caddy
      - crowdsec
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      COLLECTIONS: >-
        crowdsecurity/caddy
        crowdsecurity/http-cve
        crowdsecurity/linux
      GID: "#VAR:ansible_real_group_id:VAR#"
      BOUNCER_KEY_firewall: "#VAR:app_crowdsec_bouncer_firewall_key:VAR#"
      DOCKER_HOST: tcp://crowdsec-docker-proxy:2375 # Needed for rsyncd logs
    volumes:
      # Config
      - ./crowdsec/acquis.yaml:/etc/crowdsec/acquis.yaml:ro,z
      - ./crowdsec/postoverflows:/etc/crowdsec/postoverflows:ro,z
      - crowdsec-db:/var/lib/crowdsec/data/
      - crowdsec-config:/etc/crowdsec/
      # Logs
      - /var/log/secure:/var/log/secure:ro,z # RedHat-based
      - caddy-access-logs:/var/log/caddy:ro

  crowdsec-docker-proxy:
    <<: *defaults
    image: lscr.io/linuxserver/socket-proxy:latest
    container_name: crowdsec-docker-proxy
    networks:
      - crowdsec
    environment:
      INFO: 1
      CONTAINERS: 1
      POST: 0
      BUILD: 0
      COMMIT: 0
      CONFIGS: 0
      DISTRIBUTION: 0
      EXEC: 0
      GRPC: 0
      IMAGES: 0
      NETWORKS: 0
      NODES: 0
      PLUGINS: 0
      SERVICES: 0
      SESSION: 0
      SWARM: 0
      SYSTEM: 0
      TASKS: 0
      VOLUMES: 0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro,z
    read_only: true
    tmpfs:
      - /run

# #################################################################
# #                            VOLUMES                            #
# #################################################################
volumes:
  caddy-access-logs:
  caddy-config:
  caddy-data:
  crowdsec-config:
  crowdsec-db:
  rsyncd-ssh-host-keys:
  website-assets:
  website-bjoetiek:
  website-email-username-generator:
  website-family-trees:
  website-hetvleermuizenkind:
  website-interwego:
  website-wtech:

# #################################################################
# #                            NETWORKS                           #
# #################################################################
networks:
  caddy:
    name: caddy

  crowdsec:
    name: crowdsec
