#################################################################
#                            DEFAULTS                           #
#################################################################

x-defaults: &defaults
  x-dummy: ""
  # Putting the anchor in this file ensures it's a valid YAML file for Renovate Bot
  #VAR:lookup('ansible.builtin.file', 'files/docker-compose-defaults.yml',) | indent(width=2):VAR#

#################################################################
#                            SERVICES                           #
#################################################################
services:
  # =========================
  # =         PROXY         =
  # =========================
  # Having 2 reverse proxies (1 on host network and 1 on bridge network)
  # allows to have the real client IP's available inside the bridged
  # Treafik instance (using PROXY protocol). In case you would only have
  # a single reverse proxy on the host network, you would loose all the convenience
  # of the Traefik Docker provider support (not having to expose each service on a host
  # port and auto-configuration of the services/loadbalancers).
  nginx:
    <<: *defaults
    image: docker.io/library/nginx:alpine
    container_name: nginx
    network_mode: host
    volumes:
      - ./nginx/default.conf:/etc/nginx/nginx.conf:ro,z

  traefik:
    <<: *defaults
    image: docker.io/library/traefik:latest
    container_name: traefik
    command:
      # - "--log.level=DEBUG"
      - "--accesslog.filepath=/access-logs/access.log" # Used by CrowdSec
      - "--providers.file.directory=/conf"
      - "--providers.file.watch=true"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.proxyProtocol.trustedIPs=#VAR:network_any_private:VAR#"
      - "--entrypoints.websecure.http.middlewares=secure-https@file"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.proxyProtocol.trustedIPs=#VAR:network_any_private:VAR#"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.le-tls.acme.tlsChallenge=true"
      - "--certificatesresolvers.le-tls.acme.email=#VAR:general_mail_admin:VAR#@#VAR:general_domain_default:VAR#"
      - "--certificatesresolvers.le-tls.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.le-tls-staging.acme.tlsChallenge=true"
      - "--certificatesresolvers.le-tls-staging.acme.email=#VAR:general_mail_admin:VAR#@#VAR:general_domain_default:VAR#"
      - "--certificatesresolvers.le-tls-staging.acme.storage=/letsencrypt/acme-staging.json"
      - "--certificatesResolvers.le-tls-staging.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--api=true"
      - "--ping.manualrouting=true"
    ports:
      - 127.0.0.1:2080:80
      - 127.0.0.1:2443:443
    networks:
      - traefik
    volumes:
      - ./traefik:/conf:ro,z
      - traefik-cert:/letsencrypt/
      - traefik-access-logs:/access-logs
    environment:
      TZ: "#VAR:general_timezone:VAR#"

  oauth2-proxy:
    <<: *defaults
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    container_name: oauth2-proxy
    command: >
      --http-address=0.0.0.0:4180
      --reverse-proxy
      --provider=keycloak-oidc
      --oidc-issuer-url=#VAR:app_oauth2_proxy_issuer_url:VAR#
      --client-id=#VAR:app_oauth2_proxy_client_id:VAR#
      --client-secret=#VAR:app_oauth2_proxy_client_secret:VAR#
      --code-challenge-method=S256
      --email-domain=*
      --cookie-domain=#VAR:general_domain_default:VAR#
      --cookie-secret=#VAR:app_oauth2_proxy_cookie_secret:VAR#
    networks:
      - traefik
    environment:
      TZ: "#VAR:general_timezone:VAR#"

  # Since the login page handling of OAuth2 Proxy is based on HTTP
  # status code 401, it might conflict with an upstream reply.
  # Therefore, this helper translates an error response of OAuth2 Proxy
  # to status code 601. This prevents any conflicts.
  oauth2-proxy-helper:
    <<: *defaults
    image: docker.io/library/caddy:2
    container_name: oauth2-proxy-helper
    networks:
      - traefik
    volumes:
      - ./oauth2-proxy/helper/Caddyfile:/etc/caddy/Caddyfile:ro,z
      - oauth2-proxy-helper-config:/config
      - oauth2-proxy-helper-data:/data
    environment:
      TZ: "#VAR:general_timezone:VAR#"

  # =========================
  # =      STATIC HOSTS     =
  # =========================
  sws-assets:
    <<: *defaults
    image: joseluisq/static-web-server:2
    container_name: sws-assets
    networks:
      - traefik
    volumes:
      - ./sws/assets.toml:/config.toml:ro
      - website-assets:/public:ro

  sws-email-username-generator:
    <<: *defaults
    image: joseluisq/static-web-server:2
    container_name: sws-email-username-generator
    networks:
      - traefik
    volumes:
      - ./sws/email-username-generator.toml:/config.toml:ro
      - website-email-username-generator:/public:ro

  sws-family-trees:
    <<: *defaults
    image: joseluisq/static-web-server:2
    container_name: sws-family-trees
    networks:
      - traefik
    volumes:
      - ./sws/family-trees.toml:/config.toml:ro
      - website-family-trees:/public:ro

  sws-interwego:
    <<: *defaults
    image: joseluisq/static-web-server:2
    container_name: sws-interwego
    networks:
      - traefik
    volumes:
      - ./sws/interwego.toml:/config.toml:ro
      - website-interwego:/public:ro

  sws-wtech:
    <<: *defaults
    image: joseluisq/static-web-server:2
    container_name: sws-wtech
    networks:
      - traefik
    volumes:
      - ./sws/wtech.toml:/config.toml:ro
      - website-wtech:/public:ro

  # =========================
  # =      FILE UPLOADS     =
  # =========================
  rsyncd:
    <<: *defaults
    build:
      context: ./rsyncd
      args:
        SSH_USERS: |
          assets:900:900
          email-username-generator:901:901
          family-trees:903:903
          interwego:902:902
          wtech:904:904
    container_name: rsyncd
    network_mode: host # Ensures Crowdsec has real source IP to act on
    environment:
      TZ: "#VAR:general_timezone:VAR#"
    volumes:
      - rsyncd-ssh-host-keys:/etc/ssh/keys
      - website-assets:/data/assets
      - website-email-username-generator:/data/email-username-generator
      - website-family-trees:/data/family-trees
      - website-interwego:/data/interwego
      - website-wtech:/data/wtech

  # =========================
  # =        CROWDSEC       =
  # =========================
  # Based on https://github.com/crowdsecurity/example-docker-compose/blob/main/container-socket/docker-compose.yml
  crowdsec:
    <<: *defaults
    image: ghcr.io/crowdsecurity/crowdsec:v1.6.2-debian
    container_name: crowdsec
    ports:
      - 127.0.0.1:9000:8080
      - "#VAR:app_wireguard[0].ip_addresses[0]:VAR#:6060:6060"
    depends_on:
      crowdsec-docker-proxy:
        condition: service_started
    networks:
      - crowdsec
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      COLLECTIONS: >-
        crowdsecurity/http-cve
        crowdsecurity/linux
        crowdsecurity/traefik
      GID: "#VAR:ansible_real_group_id:VAR#"
      BOUNCER_KEY_firewall: "#VAR:app_crowdsec_bouncer_firewall_key:VAR#"
      DOCKER_HOST: tcp://crowdsec-docker-proxy:2375
    volumes:
      # Config
      - ./crowdsec/acquis.yaml:/etc/crowdsec/acquis.yaml:ro,z
      - ./crowdsec/postoverflows:/etc/crowdsec/postoverflows:ro,z
      - crowdsec-db:/var/lib/crowdsec/data/
      - crowdsec-config:/etc/crowdsec/
      # Logs
      - /var/log/secure:/var/log/secure:ro,z # RedHat-based
      - traefik-access-logs:/var/log/traefik:ro

  crowdsec-docker-proxy:
    <<: *defaults
    image: lscr.io/linuxserver/socket-proxy:latest
    container_name: crowdsec-docker-proxy
    networks:
      - crowdsec
    environment:
      INFO: 1
      CONTAINERS: 1
      POST: 0
      BUILD: 0
      COMMIT: 0
      CONFIGS: 0
      DISTRIBUTION: 0
      EXEC: 0
      GRPC: 0
      IMAGES: 0
      NETWORKS: 0
      NODES: 0
      PLUGINS: 0
      SERVICES: 0
      SESSION: 0
      SWARM: 0
      SYSTEM: 0
      TASKS: 0
      VOLUMES: 0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro,z
    read_only: true
    tmpfs:
      - /run

# #################################################################
# #                            VOLUMES                            #
# #################################################################
volumes:
  crowdsec-config:
  crowdsec-db:
  oauth2-proxy-helper-config:
  oauth2-proxy-helper-data:
  rsyncd-ssh-host-keys:
  traefik-access-logs:
  traefik-cert:
  website-assets:
  website-email-username-generator:
  website-family-trees:
  website-interwego:
  website-wtech:

# #################################################################
# #                            NETWORKS                           #
# #################################################################
networks:
  crowdsec:
    name: crowdsec

  traefik:
    name: traefik
