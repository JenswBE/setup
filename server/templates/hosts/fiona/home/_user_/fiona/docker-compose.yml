#VAR:ansible_managed | comment:VAR#

#################################################################
#                            DEFAULTS                           #
#################################################################

x-defaults: &defaults
  x-dummy: ""
  # Putting the anchor in this file ensures it's a valid YAML file for Renovate Bot
  #VAR:lookup('ansible.builtin.file', 'files/docker-compose-defaults.yml',) | indent(width=2):VAR#

x-extra-docker-host: &extra-docker-host
  extra_hosts:
    - "host.docker.internal:host-gateway"

x-fix-prettier-formatting:

#################################################################
#                            SERVICES                           #
#################################################################
services:
  # =========================
  # =         PROXY         =
  # =========================
  # Having 2 reverse proxies (1 on host network and 1 on bridge network)
  # allows to have the real client IP's available inside the bridged
  # Caddy instance (using PROXY protocol). In case you would only have
  # a single reverse proxy on the host network, you would loose all the convenience
  # of using Docker networks.
  nginx:
    <<: *defaults
    image: docker.io/library/nginx:alpine
    container_name: nginx
    network_mode: host
    volumes:
      - ./nginx/default.conf:/etc/nginx/nginx.conf:ro

  caddy:
    <<: *defaults
    build: ./caddy
    container_name: caddy
    ports:
      - 127.0.0.1:2080:80
      - 127.0.0.1:2443:443
    networks:
      - caddy
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./caddy/configs:/etc/caddy/configs:ro
      - caddy-access-logs:/access_logs
      - caddy-config:/config
      - caddy-data:/data
    environment:
      TZ: "#VAR:general_timezone:VAR#"

  # ==========================
  # =      DNS - BLOCKY      =
  # ==========================
  blocky:
    <<: *defaults
    image: ghcr.io/0xerr0r/blocky:latest
    container_name: blocky
    user: "#VAR:ansible_real_user_id:VAR#:#VAR:ansible_real_group_id:VAR#"
    networks:
      - caddy
    ports:
      - "53:53/tcp" # DNS TCP
      - "53:53/udp" # DNS UDP
    volumes:
      - ./blocky/config.txt:/app/config.yml:ro

  # =========================
  # =         PEANUT        =
  # =========================
  peanut:
    <<: [*defaults, *extra-docker-host]
    image: docker.io/brandawg93/peanut:latest
    container_name: peanut
    networks:
      - caddy
    volumes:
      - ./peanut/settings.yml:/config/settings.yml
    environment:
      TZ: "#VAR:general_timezone:VAR#"

  # =========================
  # =        CROWDSEC       =
  # =========================
  crowdsec:
    <<: *defaults
    image: ghcr.io/crowdsecurity/crowdsec:v1.6.5-debian
    container_name: crowdsec
    ports:
      - 127.0.0.1:9000:8080
    networks:
      - caddy
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      COLLECTIONS: >-
        crowdsecurity/caddy
        crowdsecurity/http-cve
        crowdsecurity/linux
      PARSERS: >-
        crowdsecurity/nextcloud-whitelist
      GID: "#VAR:ansible_real_group_id:VAR#"
      BOUNCER_KEY_firewall: "#VAR:app_crowdsec_bouncer_firewall_key:VAR#"
    volumes:
      # Config
      - ./crowdsec/acquis.yaml:/etc/crowdsec/acquis.yaml
      - crowdsec-db:/var/lib/crowdsec/data/
      - crowdsec-config:/etc/crowdsec/
      # Logs
      - /var/log/journal:/var/log/host:ro # SSHD logs for Debian
      - caddy-access-logs:/var/log/caddy:ro

#################################################################
#                            NETWORKS                           #
#################################################################
networks:
  caddy:
    name: caddy

#################################################################
#                            VOLUMES                            #
#################################################################
volumes:
  caddy-access-logs:
  caddy-config:
  caddy-data:
  crowdsec-config:
  crowdsec-db:
