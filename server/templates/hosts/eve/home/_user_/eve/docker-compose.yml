#################################################################
#                            DEFAULTS                           #
#################################################################

x-defaults: &defaults
  x-dummy: ""
  # Putting the anchor in this file ensures it's a valid YAML file for Renovate Bot
  #VAR:lookup('ansible.builtin.file', 'files/docker-compose-defaults.yml',) | indent(width=2):VAR#

x-fix-prettier-formatting:

#################################################################
#                            SERVICES                           #
#################################################################
services:
  # =========================
  # =         PROXY         =
  # =========================
  # Having 2 Traefik instances (1 on host network and 1 on bridge network)
  # allows to have the real client IP's available inside the bridged
  # Treafik instance (using PROXY protocol). In case you would only have
  # a single instance on the host network, you would loose all the convenience
  # of the Docker provider support (not having to expose each service on a host
  # port and auto-configuration of the services/loadbalancers).
  traefik-host:
    <<: *defaults
    image: docker.io/library/traefik:latest
    container_name: traefik-host
    network_mode: host
    command:
      # - "--log.level=DEBUG"
      - "--providers.file.directory=/conf"
      - "--providers.file.watch=true"
      - "--entrypoints.tcp80.address=:80"
      - "--entrypoints.tcp443.address=:443"
    volumes:
      - ./traefik/host:/conf:ro

  traefik:
    <<: *defaults
    image: docker.io/library/traefik:latest
    container_name: traefik
    command:
      # - "--log.level=DEBUG"
      - "--accesslog.filepath=/access-logs/access.log" # Used by CrowdSec
      - "--providers.file.directory=/conf"
      - "--providers.file.watch=true"
      - "--providers.docker=true"
      - "--providers.docker.network=traefik"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.proxyProtocol.trustedIPs=#VAR:network_any_private:VAR#"
      - "--entrypoints.websecure.http.middlewares=secure-https@file"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.proxyProtocol.trustedIPs=#VAR:network_any_private:VAR#"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.le-tls.acme.tlsChallenge=true"
      - "--certificatesresolvers.le-tls.acme.email=#VAR:general_mail_admin:VAR#@#VAR:general_domain_default:VAR#"
      - "--certificatesresolvers.le-tls.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.le-tls-staging.acme.tlsChallenge=true"
      - "--certificatesresolvers.le-tls-staging.acme.email=#VAR:general_mail_admin:VAR#@#VAR:general_domain_default:VAR#"
      - "--certificatesresolvers.le-tls-staging.acme.storage=/letsencrypt/acme-staging.json"
      - "--certificatesResolvers.le-tls-staging.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--api=true"
      - "--ping.manualrouting=true"
    ports:
      - 127.0.0.1:2080:80
      - 127.0.0.1:2443:443
    networks:
      - traefik
    volumes:
      - ./traefik/bridge:/conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-cert:/letsencrypt/
      - traefik-access-logs:/access-logs
    environment:
      TZ: "#VAR:general_timezone:VAR#"

  oauth2-proxy:
    <<: *defaults
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    container_name: oauth2-proxy
    command: >
      --http-address=0.0.0.0:4180
      --reverse-proxy
      --provider=keycloak-oidc
      --oidc-issuer-url=#VAR:app_oauth2_proxy_issuer_url:VAR#
      --client-id=#VAR:app_oauth2_proxy_client_id:VAR#
      --client-secret=#VAR:app_oauth2_proxy_client_secret:VAR#
      --code-challenge-method=S256
      --email-domain=*
      --cookie-domain=#VAR:general_domain_default:VAR#
      --cookie-secret=#VAR:app_oauth2_proxy_cookie_secret:VAR#
    networks:
      - traefik
    environment:
      TZ: "#VAR:general_timezone:VAR#"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.oauth2-proxy.entrypoints=websecure"
      - "traefik.http.routers.oauth2-proxy.tls.certresolver=le-tls"
      - >-
        traefik.http.routers.oauth2-proxy.rule=(
        Host(`assets.#VAR:general_domain_default:VAR#`) ||
        Host(`start.#VAR:general_domain_default:VAR#`) ||
        Host(`syncthing.#VAR:ansible_hostname:VAR#.#VAR:general_domain_default:VAR#`) ||
        Host(`traefik.#VAR:ansible_hostname:VAR#.#VAR:general_domain_default:VAR#`) ||
        Host(`uptime.#VAR:general_domain_default:VAR#`)
        ) && PathPrefix(`/oauth2/`)
      - "traefik.http.services.oauth2-proxy-#VAR:ansible_hostname:VAR#.loadbalancer.server.port=4180"

  # Since the login page handling of OAuth2 Proxy is based on HTTP
  # status code 401, it might conflict with an upstream reply.
  # Therefore, this helper translates an error response of OAuth2 Proxy
  # to status code 601. This prevents any conflicts.
  oauth2-proxy-helper:
    <<: *defaults
    image: docker.io/library/caddy:2
    container_name: oauth2-proxy-helper
    networks:
      - traefik
    volumes:
      - ./oauth2-proxy/helper/Caddyfile:/etc/caddy/Caddyfile
      - oauth2-proxy-helper-config:/config
      - oauth2-proxy-helper-data:/data
    environment:
      TZ: "#VAR:general_timezone:VAR#"

  # =========================
  # =       NEXTCLOUD       =
  # =========================
  nextcloud:
    <<: *defaults
    build: ./nextcloud
    container_name: nextcloud
    hostname: nextcloud
    networks:
      - nextcloud
      - traefik
    depends_on:
      - nc-db
    volumes:
      - "#VAR:general_path_appdata:VAR#/nextcloud/nextcloud/config:/var/www/html"
      - "#VAR:general_path_appdata:VAR#/nextcloud/nextcloud/data:/var/www/html/data"
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
      MYSQL_PASSWORD: "#VAR:app_nextcloud_db_pass_nextcloud:VAR#"
      MYSQL_HOST: nc-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.rule=Host(`nextcloud.#VAR:general_domain_default:VAR#`) || Host(`bestanden.#VAR:general_domain_tuinfeest:VAR#`)"
      - "traefik.http.routers.nextcloud.tls.certresolver=le-tls"
      - "traefik.http.routers.nextcloud.middlewares=nextcloud-redirect-dav@file, nextcloud-redirect-webfinger@file"
    deploy:
      resources:
        limits:
          cpus: "6"
          memory: 8G

  nc-db:
    <<: *defaults
    # Nextcloud currently only supports up to 10.6.
    # See https://docs.nextcloud.com/server/27/admin_manual/installation/system_requirements.html
    image: docker.io/library/mariadb:10.6
    container_name: nc-db
    command: --transaction-isolation=READ-COMMITTED --log-bin=ROW --innodb-read-only-compressed=OFF
    networks:
      - nextcloud
      - backup-nc-db
    volumes:
      - "#VAR:general_path_appdata:VAR#/nextcloud/mariadb/data:/var/lib/mysql"
      - nc-db-dump:/backup
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      MYSQL_ROOT_PASSWORD: "#VAR:app_nextcloud_db_pass_root:VAR#"
      MYSQL_PASSWORD: "#VAR:app_nextcloud_db_pass_nextcloud:VAR#"
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin -u $$MYSQL_USER --password=$$MYSQL_PASSWORD ping || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  # ====================================
  # =              WIKI.JS             =
  # = https://github.com/requarks/wiki =
  # ====================================
  wikijs:
    <<: *defaults
    image: lscr.io/linuxserver/wikijs:latest
    container_name: wikijs
    networks:
      - traefik
      - wikijs
    depends_on:
      - wikijs-db
    volumes:
      - "#VAR:general_path_appdata:VAR#/wikijs/wikijs/config:/config"
      - "#VAR:general_path_appdata:VAR#/wikijs/wikijs/data:/data"
      - wikijs-backup:/backup
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      PUID: "#VAR:ansible_real_user_id:VAR#"
      PGID: "#VAR:ansible_real_user_id:VAR#"
      DB_TYPE: postgres
      DB_HOST: wikijs-db
      DB_PORT: 5432
      DB_USER: wikijs
      DB_PASS: "#VAR:app_wikijs_db_pass:VAR#"
      DB_NAME: wikijs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wikijs.entrypoints=websecure"
      - "traefik.http.routers.wikijs.rule=Host(`wiki.#VAR:general_domain_default:VAR#`)"
      - "traefik.http.routers.wikijs.tls.certresolver=le-tls"
      - "traefik.http.services.wikijs-#VAR:ansible_hostname:VAR#.loadbalancer.server.port=3000"
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 2G

  wikijs-db:
    <<: *defaults
    image: docker.io/library/postgres:16-alpine
    container_name: wikijs-db
    networks:
      - wikijs
    volumes:
      - "#VAR:general_path_appdata:VAR#/wikijs/postgres/data:/var/lib/postgresql/data"
      - wikijs-db-dump:/backup
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      POSTGRES_USER: wikijs
      POSTGRES_PASSWORD: "#VAR:app_wikijs_db_pass:VAR#"
      POSTGRES_DB: wikijs

  # =========================
  # =         NGINX         =
  # =========================
  nginx-tuinfeest-beta:
    <<: *defaults
    image: ghcr.io/nginxinc/nginx-unprivileged:alpine
    container_name: nginx-tuinfeest-beta
    networks:
      - traefik
    volumes:
      - "#VAR:general_path_appdata:VAR#/nginx/tuinfeest-beta:/usr/share/nginx/html:ro"
    environment:
      TZ: "#VAR:general_timezone:VAR#"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-tuinfeest-beta.entrypoints=websecure"
      - "traefik.http.routers.nginx-tuinfeest-beta.rule=Host(`beta.#VAR:general_domain_tuinfeest:VAR#`)"
      - "traefik.http.routers.nginx-tuinfeest-beta.tls.certresolver=le-tls"

  # =========================
  # = IMAP SAVE ATTACHMENTS =
  # =========================
  isa-fetchmail:
    <<: *defaults
    image: docker.io/jenswbe/imap-save-attachments:latest
    container_name: isa-fetchmail
    volumes:
      - ./isa/fetchmailrc:/config/.fetchmailrc
      - isa-output:/output
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      CRON_SCHEDULE: "*/15 * * * *"

  isa-rclone:
    <<: *defaults
    image: docker.io/rclone/rclone:latest
    container_name: isa-rclone
    command: "move /data/ nextcloud:#VAR:app_isa_rclone_dav_path:VAR# --delete-empty-src-dirs --verbose"
    restart: "no" # Will be called by systemd timer
    volumes:
      - ./isa/rclone:/config/rclone
      - isa-output:/data
    environment:
      TZ: "#VAR:general_timezone:VAR#"

  # ===========================================================================
  # =   DEAD LINK CHECKER                                                     =
  # =   https://github.com/JenswBE/python-dead-link-checker                   =
  # ===========================================================================
  delic:
    <<: *defaults
    image: docker.io/jenswbe/dead-link-checker:latest
    container_name: delic
    volumes:
      - "./delic/config.yml:/config.yml:ro,z"
    environment:
      TZ: "#VAR:general_timezone:VAR#"

  # ===========================================================================
  # =   EMAIL USERNAME GENERATOR                                              =
  # =   https://github.com/JenswBE/email-username-generator                   =
  # ===========================================================================
  email-username-generator:
    <<: *defaults
    image: docker.io/jenswbe/email-username-generator:stable
    container_name: email-username-generator
    networks:
      - traefik
    environment:
      TZ: "#VAR:general_timezone:VAR#"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.email-username-generator.entrypoints=websecure"
      - "traefik.http.routers.email-username-generator.rule=Host(`ext.#VAR:general_domain_default:VAR#`)"
      - "traefik.http.routers.email-username-generator.tls.certresolver=le-tls"

  # ===========================================================================
  # =   Assets                                                                =
  # =   https://github.com/JenswBE/assets                                     =
  # ===========================================================================
  assets:
    <<: *defaults
    image: ghcr.io/jenswbe/assets:latest
    container_name: assets
    networks:
      - traefik
    environment:
      TZ: "#VAR:general_timezone:VAR#"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.assets.entrypoints=websecure"
      - "traefik.http.routers.assets.rule=Host(`assets.#VAR:general_domain_default:VAR#`)"
      - "traefik.http.routers.assets.tls.certresolver=le-tls"
      - "traefik.http.routers.assets.middlewares=oauth2-proxy-handle-error@file, oauth2-proxy-forward-auth-infra@file"

  # ===========================================================================
  # =   BJOETIEK Y                                                            =
  # =   https://github.com/JenswBE/bjoetiek-y-frontend                        =
  # =   https://github.com/JenswBE/go-commerce                                =
  # =   https://github.com/JenswBE/go-commerce-admin                          =
  # ===========================================================================
  bjoetiek-frontend:
    <<: *defaults
    image: docker.io/jenswbe/bjoetiek-y-frontend:stable
    container_name: bjoetiek-frontend
    networks:
      - bjoetiek
      - traefik
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      BJOETIEK_Y_BACKEND_URL: http://bjoetiek-backend:8080/api
      NO_COLOR: true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bjoetiek-frontend.entrypoints=websecure"
      - "traefik.http.routers.bjoetiek-frontend.rule=Host(`#VAR:general_domain_bjoetiek:VAR#`)"
      - "traefik.http.routers.bjoetiek-frontend.tls.certresolver=le-tls"
      - "traefik.http.routers.bjoetiek-frontend-www-redirect.entrypoints=websecure"
      - "traefik.http.routers.bjoetiek-frontend-www-redirect.rule=Host(`www.#VAR:general_domain_bjoetiek:VAR#`)"
      - "traefik.http.routers.bjoetiek-frontend-www-redirect.tls.certresolver=le-tls"
      - "traefik.http.routers.bjoetiek-frontend-www-redirect.middlewares=redirect-www-to-root@file"

  bjoetiek-backend:
    <<: *defaults
    image: docker.io/jenswbe/go-commerce:v1.1.0
    container_name: bjoetiek-backend
    depends_on:
      - bjoetiek-db
    networks:
      - bjoetiek
      - traefik
    volumes:
      - "#VAR:general_path_appdata:VAR#/bjoetiek/backend/images:/images"
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      AUTH_OIDC_ISSUER_URL: "#VAR:app_bjoetiek_auth_oidc_issuer_url:VAR#"
      AUTH_OIDC_CLIENT_ID: "#VAR:app_bjoetiek_auth_oidc_client_id:VAR#"
      AUTH_OIDC_CLIENT_SECRET: "#VAR:app_bjoetiek_auth_oidc_client_secret:VAR#"
      AUTH_SESSION_AUTH_KEY: "#VAR:app_bjoetiek_auth_session_auth_key:VAR#"
      AUTH_SESSION_ENC_KEY: "#VAR:app_bjoetiek_auth_session_enc_key:VAR#"
      DATABASE_DEFAULT_HOST: bjoetiek-db
      DATABASE_DEFAULT_USER: bjoetiek
      DATABASE_DEFAULT_PASSWORD: "#VAR:app_bjoetiek_db_pass:VAR#"
      DATABASE_DEFAULT_DATABASE: bjoetiek
      FEATURES_CONTENT_ENABLED: "false"
      FEATURES_EVENTS_ENABLED: "false"
      FEATURES_PRODUCTS_PUBLIC_URL_TEMPLATE: "https://#VAR:general_domain_bjoetiek:VAR#/#BLOCK:raw:BLOCK#producten/{{ .ID.String }}/{{ .Name }}#BLOCK:endraw:BLOCK#"
      IMAGE_PROXY_BASE_URL: "https://backend.#VAR:general_domain_bjoetiek:VAR#/images/"
      IMAGE_PROXY_KEY: "#VAR:app_bjoetiek_image_proxy_key:VAR#"
      IMAGE_PROXY_SALT: "#VAR:app_bjoetiek_image_proxy_salt:VAR#"
      IMAGE_PROXY_ALLOWED_CONFIGS: 100:100:FIT,150:150:FIT,400:400:FIT,550:550:FIT
      STORAGE_IMAGES_PATH: /images
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bjoetiek-backend.entrypoints=websecure"
      - >-
        traefik.http.routers.bjoetiek-backend.rule=(
        Host(`backend.#VAR:general_domain_bjoetiek:VAR#`) ||
        Host(`beheer.#VAR:general_domain_bjoetiek:VAR#`)
        ) && !PathPrefix(`/images`)
      - "traefik.http.routers.bjoetiek-backend.tls.certresolver=le-tls"
      - "traefik.http.routers.bjoetiek-backend.middlewares=bjoetiek-cors@file"

  bjoetiek-db:
    <<: *defaults
    image: docker.io/library/postgres:13-alpine
    container_name: bjoetiek-db
    networks:
      - bjoetiek
    volumes:
      - "#VAR:general_path_appdata:VAR#/bjoetiek/postgres/data:/var/lib/postgresql/data"
      - bjoetiek-db-dump:/backup
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      POSTGRES_USER: bjoetiek
      POSTGRES_PASSWORD: "#VAR:app_bjoetiek_db_pass:VAR#"

  bjoetiek-imgproxy:
    <<: *defaults
    image: docker.io/darthsim/imgproxy:v3
    container_name: bjoetiek-imgproxy
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      IMGPROXY_KEY: "#VAR:app_bjoetiek_image_proxy_key:VAR#"
      IMGPROXY_SALT: "#VAR:app_bjoetiek_image_proxy_salt:VAR#"
      IMGPROXY_LOCAL_FILESYSTEM_ROOT: /images
      IMGPROXY_MAX_SRC_RESOLUTION: "64"
    networks:
      - traefik
    volumes:
      - "#VAR:general_path_appdata:VAR#/bjoetiek/backend/images:/images:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bjoetiek-imgproxy.entrypoints=websecure"
      - "traefik.http.routers.bjoetiek-imgproxy.rule=Host(`backend.#VAR:general_domain_bjoetiek:VAR#`) && PathPrefix(`/images`)"
      - "traefik.http.routers.bjoetiek-imgproxy.tls.certresolver=le-tls"
      - "traefik.http.routers.bjoetiek-imgproxy.middlewares=strip-images-prefix@file"

  # ===========================================================================
  # =   BJOETIEK Y - Test                                                     =
  # =   https://github.com/JenswBE/bjoetiek-y-frontend                        =
  # =   https://github.com/JenswBE/go-commerce                                =
  # =   https://github.com/JenswBE/go-commerce-admin                          =
  # ===========================================================================
  bjoetiek-test-frontend:
    <<: *defaults
    image: docker.io/jenswbe/bjoetiek-y-frontend:latest
    container_name: bjoetiek-test-frontend
    networks:
      - bjoetiek-test
      - traefik
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      BJOETIEK_Y_BACKEND_URL: http://bjoetiek-test-backend:8080/api
      NO_COLOR: "true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bjoetiek-test-frontend.entrypoints=websecure"
      - "traefik.http.routers.bjoetiek-test-frontend.rule=Host(`test.#VAR:general_domain_bjoetiek:VAR#`)"
      - "traefik.http.routers.bjoetiek-test-frontend.tls.certresolver=le-tls"

  bjoetiek-test-backend:
    <<: *defaults
    image: docker.io/jenswbe/go-commerce:latest
    container_name: bjoetiek-test-backend
    depends_on:
      - bjoetiek-test-db
    networks:
      - bjoetiek-test
      - traefik
    volumes:
      - "#VAR:general_path_appdata:VAR#/bjoetiek/backend-test/images:/images"
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      AUTH_OIDC_ISSUER_URL: "#VAR:app_bjoetiek_test_auth_oidc_issuer_url:VAR#"
      AUTH_OIDC_CLIENT_ID: "#VAR:app_bjoetiek_test_auth_oidc_client_id:VAR#"
      AUTH_OIDC_CLIENT_SECRET: "#VAR:app_bjoetiek_test_auth_oidc_client_secret:VAR#"
      AUTH_SESSION_AUTH_KEY: "#VAR:app_bjoetiek_test_auth_session_auth_key:VAR#"
      AUTH_SESSION_ENC_KEY: "#VAR:app_bjoetiek_test_auth_session_enc_key:VAR#"
      DATABASE_DEFAULT_HOST: bjoetiek-test-db
      DATABASE_DEFAULT_USER: bjoetiek-test
      DATABASE_DEFAULT_PASSWORD: bjoetiek-test
      DATABASE_DEFAULT_DATABASE: bjoetiek-test
      FEATURES_CONTENT_ENABLED: "false"
      FEATURES_EVENTS_ENABLED: "false"
      FEATURES_PRODUCTS_PUBLIC_URL_TEMPLATE: "https://test.#VAR:general_domain_bjoetiek:VAR#/#BLOCK:raw:BLOCK#producten/{{ .ID.String }}/{{ .Name }}#BLOCK:endraw:BLOCK#"
      IMAGE_PROXY_BASE_URL: "https://test-backend.#VAR:general_domain_bjoetiek:VAR#/images/"
      IMAGE_PROXY_KEY: "#VAR:app_bjoetiek_test_image_proxy_key:VAR#"
      IMAGE_PROXY_SALT: "#VAR:app_bjoetiek_test_image_proxy_salt:VAR#"
      IMAGE_PROXY_ALLOWED_CONFIGS: 100:100:FIT,150:150:FIT,400:400:FIT,550:550:FIT
      STORAGE_IMAGES_PATH: /images
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bjoetiek-test-backend.entrypoints=websecure"
      - >-
        traefik.http.routers.bjoetiek-test-backend.rule=(
        Host(`test-backend.#VAR:general_domain_bjoetiek:VAR#`) ||
        Host(`test-beheer.#VAR:general_domain_bjoetiek:VAR#`)
        ) && !PathPrefix(`/images`)
      - "traefik.http.routers.bjoetiek-test-backend.tls.certresolver=le-tls"
      - "traefik.http.routers.bjoetiek-test-backend.middlewares=bjoetiek-cors@file"

  bjoetiek-test-db:
    <<: *defaults
    image: docker.io/library/postgres:13-alpine
    container_name: bjoetiek-test-db
    networks:
      - bjoetiek-test
    volumes:
      - "bjoetiek-test-db-data:/var/lib/postgresql/data"
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      POSTGRES_USER: bjoetiek-test
      POSTGRES_PASSWORD: bjoetiek-test

  bjoetiek-test-imgproxy:
    <<: *defaults
    image: docker.io/darthsim/imgproxy:latest
    container_name: bjoetiek-test-imgproxy
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      IMGPROXY_KEY: "#VAR:app_bjoetiek_test_image_proxy_key:VAR#"
      IMGPROXY_SALT: "#VAR:app_bjoetiek_test_image_proxy_salt:VAR#"
      IMGPROXY_LOCAL_FILESYSTEM_ROOT: /images
      IMGPROXY_MAX_SRC_RESOLUTION: "64"
    networks:
      - traefik
    volumes:
      - "#VAR:general_path_appdata:VAR#/bjoetiek/backend-test/images:/images:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bjoetiek-test-imgproxy.entrypoints=websecure"
      - "traefik.http.routers.bjoetiek-test-imgproxy.rule=Host(`test-backend.#VAR:general_domain_bjoetiek:VAR#`) && PathPrefix(`/images`)"
      - "traefik.http.routers.bjoetiek-test-imgproxy.tls.certresolver=le-tls"
      - "traefik.http.routers.bjoetiek-test-imgproxy.middlewares=strip-images-prefix@file"

  # =========================
  # =       TUINFEEST       =
  # =========================
  # sudo docker exec -u root tuinfeest-directus chown -R node:node /directus/uploads
  # sudo docker restart tuinfeest-directus
  tuinfeest-directus:
    <<: *defaults
    build:
      context: directus
    container_name: tuinfeest-directus
    depends_on:
      - tuinfeest-directus-db
    environment:
      # See https://docs.directus.io/self-hosted/config-options#general
      TZ: "#VAR:general_timezone:VAR#"
      KEY: "#VAR:app_tuinfeest_directus_key:VAR#"
      SECRET: "#VAR:app_tuinfeest_directus_secret:VAR#"
      DB_CLIENT: pg
      DB_HOST: tuinfeest-directus-db
      DB_PORT: "5432"
      DB_DATABASE: directus
      DB_USER: directus
      DB_PASSWORD: directus
      ADMIN_EMAIL: "#VAR:app_tuinfeest_directus_admin_email:VAR#"
      ADMIN_PASSWORD: "#VAR:app_tuinfeest_directus_admin_password:VAR#"
      PUBLIC_URL: "https://beheer.#VAR:general_domain_tuinfeest:VAR#"
      EMAIL_FROM: "beheer@#VAR:general_domain_tuinfeest:VAR#"
      EMAIL_TRANSPORT: smtp
      EMAIL_SMTP_HOST: "#VAR:mailjet_host:VAR#"
      EMAIL_SMTP_PORT: "#VAR:mailjet_port_starttls:VAR#"
      EMAIL_SMTP_USER: "#VAR:mailjet_username:VAR#"
      EMAIL_SMTP_PASSWORD: "#VAR:mailjet_password:VAR#"
      FLOWS_ENV_ALLOW_LIST: "FLOWS_ENV_GITHUB_TOKEN"
      FLOWS_ENV_GITHUB_TOKEN: "#VAR:app_tuinfeest_directus_github_token:VAR#"
    networks:
      - traefik
      - tuinfeest-directus
    volumes:
      - "#VAR:general_path_appdata:VAR#/tuinfeest/directus/uploads:/directus/uploads:z"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tuinfeest-directus.entrypoints=websecure"
      - "traefik.http.routers.tuinfeest-directus.rule=Host(`beheer.#VAR:general_domain_tuinfeest:VAR#`)"
      - "traefik.http.routers.tuinfeest-directus.tls.certresolver=le-tls"
      - "traefik.http.services.tuinfeest-directus-#VAR:ansible_hostname:VAR#.loadbalancer.server.port=8055"

  tuinfeest-directus-db:
    <<: *defaults
    image: docker.io/library/postgres:16
    container_name: tuinfeest-directus-db
    networks:
      - tuinfeest-directus
    security_opt:
      - no-new-privileges=true
    volumes:
      - "#VAR:general_path_appdata:VAR#/tuinfeest/directus/db:/var/lib/postgresql/data"
      - tuinfeest-directus-db-dump:/backup
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      POSTGRES_USER: directus
      POSTGRES_DB: directus
      POSTGRES_PASSWORD: directus

  # =========================
  # =      W-TECHNIEKEN     =
  # =========================
  # sudo docker exec -u root wtech-directus chown -R node:node /directus/uploads
  # sudo docker restart wtech-directus
  wtech-directus:
    <<: *defaults
    build:
      context: directus
    container_name: wtech-directus
    depends_on:
      - wtech-directus-db
    environment:
      # See https://docs.directus.io/self-hosted/config-options#general
      TZ: "#VAR:general_timezone:VAR#"
      KEY: "#VAR:app_wtech_directus_key:VAR#"
      SECRET: "#VAR:app_wtech_directus_secret:VAR#"
      DB_CLIENT: pg
      DB_HOST: wtech-directus-db
      DB_PORT: "5432"
      DB_DATABASE: directus
      DB_USER: directus
      DB_PASSWORD: directus
      ADMIN_EMAIL: "#VAR:app_wtech_directus_admin_email:VAR#"
      ADMIN_PASSWORD: "#VAR:app_wtech_directus_admin_password:VAR#"
      PUBLIC_URL: "https://beheer.#VAR:general_domain_wtech:VAR#"
      EMAIL_FROM: "beheer@#VAR:general_domain_wtech:VAR#"
      EMAIL_TRANSPORT: smtp
      EMAIL_SMTP_HOST: "#VAR:mailjet_host:VAR#"
      EMAIL_SMTP_PORT: "#VAR:mailjet_port_starttls:VAR#"
      EMAIL_SMTP_USER: "#VAR:mailjet_username:VAR#"
      EMAIL_SMTP_PASSWORD: "#VAR:mailjet_password:VAR#"
      FLOWS_ENV_ALLOW_LIST: "FLOWS_ENV_GITHUB_TOKEN"
      FLOWS_ENV_GITHUB_TOKEN: "#VAR:app_wtech_directus_github_token:VAR#"
    networks:
      - traefik
      - wtech-directus
    volumes:
      - "#VAR:general_path_appdata:VAR#/wtech/directus/uploads:/directus/uploads:z"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wtech-directus.entrypoints=websecure"
      - "traefik.http.routers.wtech-directus.rule=Host(`beheer.#VAR:general_domain_wtech:VAR#`)"
      - "traefik.http.routers.wtech-directus.tls.certresolver=le-tls"
      - "traefik.http.services.wtech-directus-#VAR:ansible_hostname:VAR#.loadbalancer.server.port=8055"

  wtech-directus-db:
    <<: *defaults
    image: docker.io/library/postgres:16
    container_name: wtech-directus-db
    networks:
      - wtech-directus
    security_opt:
      - no-new-privileges=true
    volumes:
      - "#VAR:general_path_appdata:VAR#/wtech/directus/db:/var/lib/postgresql/data"
      - wtech-directus-db-dump:/backup
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      POSTGRES_USER: directus
      POSTGRES_DB: directus
      POSTGRES_PASSWORD: directus

  # =========================
  # =      GOAT COUNTER     =
  # =========================
  goatcounter:
    <<: *defaults
    build:
      context: goatcounter
      args:
        - "arch=#VAR:app_goatcounter_arch:VAR#"
        - "version=#VAR:app_goatcounter_version:VAR#"
    container_name: goatcounter
    user: "#VAR:ansible_real_user_id:VAR#"
    networks:
      - traefik
    volumes:
      - "#VAR:general_path_appdata:VAR#/goatcounter/db:/db"
    environment:
      TZ: "#VAR:general_timezone:VAR#"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.goatcounter.entrypoints=websecure"
      - "traefik.http.routers.goatcounter.tls.certresolver=le-tls"
      - >-
        traefik.http.routers.goatcounter.rule=(
        Host(`stats.#VAR:general_domain_default:VAR#`) ||
        Host(`stats-spellebel.#VAR:general_domain_default:VAR#`) ||
        Host(`stats.#VAR:general_domain_bjoetiek:VAR#`) ||
        Host(`stats.#VAR:general_domain_interwego:VAR#`) ||
        Host(`stats.#VAR:general_domain_klokracing:VAR#`) ||
        Host(`stats.#VAR:general_domain_tuinfeest:VAR#`) ||
        Host(`stats.#VAR:general_domain_wtech:VAR#`)
        )

  # =========================
  # =         UPTIME        =
  # =========================
  uptime-kuma:
    <<: *defaults
    image: docker.io/louislam/uptime-kuma:1
    container_name: uptime-kuma
    volumes:
      - "#VAR:general_path_appdata:VAR#/uptime-kuma/data:/app/data"
    networks:
      - traefik
    environment:
      TZ: "#VAR:general_timezone:VAR#"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.uptime-kuma.entrypoints=websecure"
      - "traefik.http.routers.uptime-kuma.rule=Host(`uptime.#VAR:general_domain_default:VAR#`)"
      - "traefik.http.routers.uptime-kuma.tls.certresolver=le-tls"
      - "traefik.http.routers.uptime-kuma.middlewares=oauth2-proxy-handle-error@file, oauth2-proxy-forward-auth-infra@file"
      - "traefik.http.services.uptime-kuma-#VAR:ansible_hostname:VAR#.loadbalancer.server.port=3001"

  # =========================
  # =          AUTH         =
  # =========================
  keycloak:
    <<: *defaults
    build: ./keycloak
    container_name: keycloak
    depends_on:
      - keycloak-db
    networks:
      - keycloak
      - traefik
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: "#VAR:app_keycloak_db_pass:VAR#"
      KC_DB_SCHEMA: public
      KC_HOSTNAME: "auth.#VAR:general_domain_default:VAR#"
      KC_HOSTNAME_STRICT: "false" # Hostnames validated by Traefik
      KC_PROXY_HEADERS: xforwarded
      KC_HTTP_ENABLED: "true"
      # Only for initial setup
      # KEYCLOAK_ADMIN: admin
      # KEYCLOAK_ADMIN_PASSWORD: change_me
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.entrypoints=websecure"
      - "traefik.http.routers.keycloak.tls.certresolver=le-tls"
      - >-
        traefik.http.routers.keycloak.rule=(
        Host(`auth.#VAR:general_domain_default:VAR#`) ||
        Host(`auth.#VAR:general_domain_bjoetiek:VAR#`)
        )
      - "traefik.http.services.keycloak-#VAR:ansible_hostname:VAR#.loadbalancer.server.port=8080"
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 4G

  keycloak-db:
    <<: *defaults
    image: docker.io/library/postgres:12-alpine
    container_name: keycloak-db
    networks:
      - keycloak
    volumes:
      - "#VAR:general_path_appdata:VAR#/keycloak/postgres/data:/var/lib/postgresql/data"
      - keycloak-db-dump:/backup
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: "#VAR:app_keycloak_db_pass:VAR#"
      POSTGRES_DB: keycloak

  # =========================
  # =      PLACEHOLDERS     =
  # =========================
  maintenance:
    <<: *defaults
    image: docker.io/nginxinc/nginx-unprivileged:alpine
    container_name: maintenance
    user: "#VAR:ansible_real_user_id:VAR#"
    networks:
      - traefik
    volumes:
      - "./nginx/maintenance/public:/usr/share/nginx/html:ro"
      - "./nginx/maintenance/nginx.conf:/etc/nginx/conf.d/default.conf:ro"
    environment:
      TZ: "#VAR:general_timezone:VAR#"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.maintenance.entrypoints=websecure"
      - "traefik.http.routers.maintenance.rule=Host(`maintenance.#VAR:general_domain_default:VAR#`)"
      - "traefik.http.routers.maintenance.tls.certresolver=le-tls"
      - "traefik.http.services.maintenance-#VAR:ansible_hostname:VAR#.loadbalancer.server.port=8080"

  wip:
    <<: *defaults
    image: docker.io/nginxinc/nginx-unprivileged:alpine
    container_name: wip
    user: "#VAR:ansible_real_user_id:VAR#"
    networks:
      - traefik
    volumes:
      - "./nginx/wip/public:/usr/share/nginx/html:ro"
      - "./nginx/wip/nginx.conf:/etc/nginx/conf.d/default.conf:ro"
    environment:
      TZ: "#VAR:general_timezone:VAR#"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wip.entrypoints=websecure"
      - "traefik.http.routers.wip.rule=Host(`wip.#VAR:general_domain_default:VAR#`)"
      - "traefik.http.routers.wip.tls.certresolver=le-tls"
      - "traefik.http.services.wip-#VAR:ansible_hostname:VAR#.loadbalancer.server.port=8080"

  # =========================
  # =        CROWDSEC       =
  # =========================
  crowdsec:
    <<: *defaults
    image: docker.io/crowdsecurity/crowdsec:v1.6.0
    container_name: crowdsec
    ports:
      - 127.0.0.1:9000:8080
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      COLLECTIONS: >-
        crowdsecurity/http-cve
        crowdsecurity/linux
        crowdsecurity/traefik
      PARSERS: >-
        crowdsecurity/nextcloud-whitelist
      GID: "#VAR:ansible_real_group_id:VAR#"
      BOUNCER_KEY_firewall: "#VAR:app_crowdsec_bouncer_firewall_key:VAR#"
    volumes:
      # Config
      - ./crowdsec/acquis.yaml:/etc/crowdsec/acquis.yaml
      - ./crowdsec/postoverflows:/etc/crowdsec/postoverflows
      - crowdsec-db:/var/lib/crowdsec/data/
      - crowdsec-config:/etc/crowdsec/
      # Logs
      - /var/log/auth.log:/var/log/auth.log:ro
      - traefik-access-logs:/var/log/traefik:ro

  # =========================
  # =      VAULTWARDEN      =
  # =========================
  vaultwarden:
    <<: *defaults
    image: docker.io/vaultwarden/server:latest
    container_name: vaultwarden
    networks:
      - traefik
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      DOMAIN: "https://vault.#VAR:general_domain_default:VAR#"
      PASSWORD_HINTS_ALLOWED: "false"
      SIGNUPS_ALLOWED: "false"
      SMTP_HOST: "#VAR:mailjet_host:VAR#"
      SMTP_PORT: "#VAR:mailjet_port_starttls:VAR#"
      SMTP_SECURITY: starttls
      SMTP_USERNAME: "#VAR:mailjet_username:VAR#"
      SMTP_PASSWORD: "#VAR:mailjet_password:VAR#"
      SMTP_FROM: "vaultwarden@#VAR:general_domain_default:VAR#"
      SMTP_FROM_NAME: Vaultwarden
    volumes:
      - "#VAR:general_path_appdata:VAR#/vaultwarden/data:/data"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.entrypoints=websecure"
      - "traefik.http.routers.vaultwarden.rule=Host(`vault.#VAR:general_domain_default:VAR#`)"
      - "traefik.http.routers.vaultwarden.tls.certresolver=le-tls"

  # =========================
  # =         HOMER         =
  # =========================
  homer:
    <<: *defaults
    image: docker.io/b4bz/homer:latest
    container_name: homer
    user: "#VAR:ansible_real_user_id:VAR#"
    networks:
      - traefik
    volumes:
      - "./homer/config.yml:/www/assets/config.yml:ro"
      - "./homer/logos:/www/assets/logos:ro"
    environment:
      - "TZ=#VAR:general_timezone:VAR#"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homer.entrypoints=websecure"
      - "traefik.http.routers.homer.rule=Host(`start.#VAR:general_domain_default:VAR#`)"
      - "traefik.http.routers.homer.tls.certresolver=le-tls"
      - "traefik.http.routers.homer.middlewares=oauth2-proxy-handle-error@file, oauth2-proxy-forward-auth-infra@file"

  # =========================
  # =       PAPERLESS       =
  # =========================
  paperless:
    <<: *defaults
    container_name: paperless
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    networks:
      - traefik
      - paperless
    security_opt:
      - no-new-privileges=true
    depends_on:
      - paperless-redis
      - paperless-db
      - paperless-gotenberg
      - paperless-tika
    healthcheck:
      test:
        ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - "#VAR:general_path_appdata:VAR#/paperless/data:/usr/src/paperless/data" # Docker container data
      - "#VAR:general_path_appdata:VAR#/paperless/docs:/usr/src/paperless/media" # Documents
      - "paperless-export:/usr/src/paperless/export" # Backup
      - "paperless-consume:/usr/src/paperless/consume" # Watch folder
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      USERMAP_UID: "#VAR:ansible_real_user_id:VAR#"
      USERMAP_GID: "#VAR:ansible_real_group_id:VAR#"
      PAPERLESS_TIME_ZONE: "#VAR:general_timezone:VAR#"
      PAPERLESS_OCR_LANGUAGE: nld+eng
      PAPERLESS_OCR_LANGUAGES: eng nld
      # See:
      #   - continue_on_soft_render_error: https://docs.paperless-ngx.com/troubleshooting/#consumption-fails-with-ghostscript-pdfa-rendering-failed
      #   - invalidate_digital_signatures: https://github.com/paperless-ngx/paperless-ngx/discussions/4047
      PAPERLESS_OCR_USER_ARGS: >-
        {
          "continue_on_soft_render_error": true,
          "invalidate_digital_signatures": true
        }
      PAPERLESS_ENABLE_UPDATE_CHECK: "false"
      PAPERLESS_REDIS: redis://paperless-redis:6379
      PAPERLESS_DBHOST: paperless-db
      PAPERLESS_SECRET_KEY: "#VAR:app_paperless_secret_key:VAR#"
      PAPERLESS_FILENAME_FORMAT: "{created_year}.{created_month}.{created_day} - {correspondent} - {title}"
      PAPERLESS_URL: "https://docs.#VAR:general_domain_default:VAR#"
      PAPERLESS_TASK_WORKERS: "2"
      PAPERLESS_TIKA_ENABLED: "1"
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://paperless-tika:9998
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.paperless.entrypoints=websecure"
      - "traefik.http.routers.paperless.rule=Host(`docs.#VAR:general_domain_default:VAR#`)"
      - "traefik.http.routers.paperless.tls.certresolver=le-tls"
    deploy:
      resources:
        limits:
          cpus: "#VAR:ansible_processor_nproc:VAR#"
          memory: 6G

  paperless-db:
    <<: *defaults
    container_name: paperless-db
    image: docker.io/library/postgres:16
    networks:
      - paperless
    security_opt:
      - no-new-privileges=true
    volumes:
      - "#VAR:general_path_appdata:VAR#/paperless/db:/var/lib/postgresql/data"
      - paperless-db-dump:/backup
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      POSTGRES_USER: paperless
      POSTGRES_DB: paperless
      POSTGRES_PASSWORD: paperless

  paperless-redis:
    <<: *defaults
    container_name: paperless-redis
    image: docker.io/library/redis:7
    networks:
      - paperless
    security_opt:
      - no-new-privileges=true
    volumes:
      - paperless-redis-data:/data
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      REDIS_ARGS: "--save 60 10"

  paperless-gotenberg:
    <<: *defaults
    container_name: paperless-gotenberg
    image: docker.io/gotenberg/gotenberg:7.10
    networks:
      - paperless
    command:
      # The gotenberg chromium route is used to convert .eml files. We do not
      # want to allow external content like tracking pixels or even javascript.
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"
    environment:
      TZ: "#VAR:general_timezone:VAR#"
    deploy:
      resources:
        limits:
          cpus: "#VAR:ansible_processor_nproc:VAR#"
          memory: 6G

  paperless-tika:
    <<: *defaults
    container_name: paperless-tika
    image: ghcr.io/paperless-ngx/tika:latest
    networks:
      - paperless
    environment:
      TZ: "#VAR:general_timezone:VAR#"
    deploy:
      resources:
        limits:
          cpus: "#VAR:ansible_processor_nproc:VAR#"
          memory: 6G

  # =========================
  # =       SYNCTHING       =
  # =========================
  syncthing:
    <<: *defaults
    image: docker.io/syncthing/syncthing:1
    container_name: syncthing
    hostname: "#VAR:ansible_hostname:VAR#"
    networks:
      - traefik
    ports:
      - "22000:22000"
      - "22000:22000/udp"
    volumes:
      - "#VAR:general_path_appdata:VAR#/syncthing/config:/var/syncthing"
      - "#VAR:general_path_appdata:VAR#/paperless/docs/documents/originals:/data/paperless"
      - "wikijs-backup:/data/wikijs"
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      PUID: "#VAR:ansible_real_user_id:VAR#"
      PGID: "#VAR:ansible_real_user_id:VAR#"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.syncthing.entrypoints=websecure"
      - "traefik.http.routers.syncthing.rule=Host(`syncthing.#VAR:ansible_hostname:VAR#.#VAR:general_domain_default:VAR#`)"
      - "traefik.http.routers.syncthing.tls.certresolver=le-tls"
      - "traefik.http.routers.syncthing.middlewares=oauth2-proxy-handle-error@file, oauth2-proxy-forward-auth-infra@file"
      - "traefik.http.services.syncthing-#VAR:ansible_hostname:VAR#.loadbalancer.server.port=8384"

  # =========================
  # =         BACKUP        =
  # =========================
  nc-calcardbackup:
    <<: *defaults
    image: docker.io/waja/calcardbackup:latest
    container_name: nc-calcardbackup
    networks:
      - backup-nc-db
    depends_on:
      - nc-db
    volumes:
      - "#VAR:general_path_appdata:VAR#/nextcloud/nextcloud/config/config:/nextcloud/config:ro"
      - nc-calcardbackup:/backup
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      CRON_TIME: "#" # Disable cron, executed by SystemD timer/service
      CALCARD_OPTS: "--remove 7" # Remove files older than 7 days

  borgmatic:
    <<: *defaults
    image: ghcr.io/borgmatic-collective/borgmatic:1.8.9
    container_name: borgmatic
    privileged: true # Required for borg mount
    cap_add:
      - SYS_ADMIN # Required for borg mount
    volumes:
      # Backup locations
      - "bjoetiek-db-dump:/mnt/source/bjoetiek/dbdump:ro"
      - "#VAR:general_path_appdata:VAR#/bjoetiek/backend:/mnt/source/bjoetiek/backend:ro"
      - "#VAR:general_path_appdata:VAR#/goatcounter/db:/mnt/source/goatcounter/db:ro"
      - "keycloak-db-dump:/mnt/source/keycloak/dbdump:ro"
      - "nc-db-dump:/mnt/source/nextcloud/dbdump:ro"
      - "nc-calcardbackup:/mnt/source/nextcloud/calcardbackup:ro"
      - "#VAR:general_path_appdata:VAR#/nextcloud/nextcloud/data:/mnt/source/nextcloud/data:ro"
      - "#VAR:general_path_appdata:VAR#/nextcloud/nextcloud/config:/mnt/source/nextcloud/config:ro"
      - "#VAR:general_path_appdata:VAR#/paperless/docs:/mnt/source/paperless/docs:ro"
      - "paperless-db-dump:/mnt/source/paperless/dbdump:ro"
      - "paperless-export:/mnt/source/paperless/export:ro"
      - "#VAR:general_path_appdata:VAR#/tuinfeest/directus/uploads:/mnt/source/tuinfeest/directus/uploads:z"
      - "tuinfeest-directus-db-dump:/mnt/source/tuinfeest/directus/dbdump:ro"
      - "#VAR:general_path_appdata:VAR#/uptime-kuma/data:/mnt/source/uptime-kuma/data:ro"
      - "#VAR:general_path_appdata:VAR#/vaultwarden/data:/mnt/source/vaultwarden/data:ro"
      - "wikijs-backup:/mnt/source/wikijs/backup:ro"
      - "wikijs-db-dump:/mnt/source/wikijs/dbdump:ro"
      - "#VAR:general_path_appdata:VAR#/wtech/directus/uploads:/mnt/source/wtech/directus/uploads:z"
      - "wtech-directus-db-dump:/mnt/source/wtech/directus/dbdump:ro"
      # Config and cache
      - "./borgmatic/borgmatic.d/config.yaml:/etc/borgmatic.d/config.yaml"
      - "./borgmatic/ssh/BorgHost:/root/.ssh/BorgHost"
      - "./borgmatic/ssh/known_hosts:/root/.ssh/known_hosts"
      - "#VAR:general_path_appdata:VAR#/borgmatic/borgmatic/config:/root/.config/borg"
      - "#VAR:general_path_appdata:VAR#/borgmatic/borgmatic/cache:/root/.cache/borg"
      - "#VAR:general_path_appdata:VAR#/borgmatic/borgmatic/restore:/mnt/restore"
    devices:
      - "/dev/fuse:/dev/fuse" # Required for borg mount
    environment:
      TZ: "#VAR:general_timezone:VAR#"
      BACKUP_CRON: "0 3 * * *"
      BORG_PASSPHRASE: "#VAR:app_borgmatic_borg_passphrase:VAR#"
      BORG_HOSTNAME_IS_UNIQUE: "yes" # Automatically removes stale locks
      BORG_HOST_ID: "#VAR:ansible_hostname:VAR#"
    deploy:
      resources:
        limits:
          cpus: "#VAR:ansible_processor_nproc:VAR#"
          memory: 6G

# #################################################################
# #                            VOLUMES                            #
# #################################################################
volumes:
  bjoetiek-db-dump:
  bjoetiek-test-db-data:
  crowdsec-config:
  crowdsec-db:
  isa-output:
  keycloak-db-dump:
  nc-db-dump:
  nc-calcardbackup:
  oauth2-proxy-helper-config:
  oauth2-proxy-helper-data:
  paperless-consume:
  paperless-db-dump:
  paperless-export:
  paperless-redis-data:
  traefik-access-logs:
  traefik-cert:
  tuinfeest-directus-db-dump:
  wikijs-backup:
  wikijs-db-dump:
  wtech-directus-db-dump:

# #################################################################
# #                            NETWORKS                           #
# #################################################################
networks:
  bjoetiek:
    name: bjoetiek

  bjoetiek-test:
    name: bjoetiek-test

  backup-nc-db:
    name: backup-nc-db

  keycloak:
    name: keycloak

  nextcloud:
    name: nextcloud

  paperless:
    name: paperless

  traefik:
    name: traefik

  tuinfeest-directus:
    name: tuinfeest-directus

  wikijs:
    name: wikijs

  wtech-directus:
    name: wtech-directus
