# ===== SECURITY =====

(default_authorization) {
	crypto key verify "{{ app_caddy_security_jwt_secret }}"
	allow roles {args[0]}
}

(default_authorization_local) {
	authorization policy policy_local_{args[0]} {
		import default_authorization {args[0]}
		set auth url "https://portal.{{ general_domain_local }}/"
	}
}

(default_authorization_public) {
	authorization policy policy_public_{args[0]} {
		import default_authorization {args[0]}
		set auth url "https://portal.{{ general_domain_default }}/"
	}
}

(default_authorization_local_and_public) {
	import default_authorization_local {args[0]}
	import default_authorization_public {args[0]}
}

# ===== SITES =====

(defaults) {
	log {
		output file /access_logs/caddy.log
	}
}

(reverse_proxy_secure_headers) {
	# Based on https://owasp.org/www-project-secure-headers/#div-bestpractices
	header_down Referrer-Policy "no-referrer"
	header_down Strict-Transport-Security "max-age=31536000; includeSubDomains"
	header_down X-Content-Type-Options "nosniff"
	header_down X-Frame-Options "DENY"
	header_down X-XSS-Protection "0"
}

(local_access) {
	tls {
		dns desec {
			token "{{ app_caddy_desec_token }}"
		}
		propagation_delay 60s
	}

	@not_local_ip not remote_ip private_ranges
	abort @not_local_ip
}

(default_redirect) {
	{args[0]} {
		import defaults
		redir https://{args[1]}{uri}
	}
}

(default_reverse_proxy) {
	import defaults
	reverse_proxy {args[0]} {
		import reverse_proxy_secure_headers
	}
}

(default_reverse_proxy_with_insecure_upstream) {
	import defaults
	reverse_proxy {args[0]} {
		import reverse_proxy_secure_headers
		transport http {
			tls_insecure_skip_verify
		}
	}
}

(default_local_reverse_proxy) {
	import local_access
	import default_reverse_proxy {args[0]}
}

(default_local_reverse_proxy_with_insecure_upstream) {
	import local_access
	import default_reverse_proxy_with_insecure_upstream {args[0]}
}

(default_public_reverse_proxy) {
	import default_reverse_proxy {args[0]}
}

(default_public_reverse_proxy_with_insecure_upstream) {
	import default_reverse_proxy_with_insecure_upstream {args[0]}
}

(site_local_blocky) {
	"blocky.{{ ansible_hostname }}.{{ general_domain_local }}" {
		@blocky_not_allowed_api_request {
			not {
				method GET
				path /metrics
			}
		}
		respond @blocky_not_allowed_api_request "403 Forbidden: Only GET /metrics is allowed" 403
		import default_local_reverse_proxy "http://blocky:8080"
	}
}
