#################################################################
#                            DEFAULTS                           #
#################################################################
x-defaults: &defaults
  restart: always
  extra_hosts:
    - "host.docker.internal:host-gateway"

#################################################################
#                            SERVICES                           #
#################################################################
services:
  # =========================
  # =         PROXY         =
  # =========================
  # Having 2 Traefik instances (1 on host network and 1 on bridge network)
  # allows to have the real client IP's available inside the bridged
  # Treafik instance (using PROXY protocol). In case you would only have
  # a single instance on the host network, you would loose all the convenience
  # of the Docker provider support (not having to expose each service on a host
  # port and auto-configuration of the services/loadbalancers).
  traefik-host:
    <<: *defaults
    image: traefik:latest
    container_name: traefik-host
    network_mode: host
    command:
      # - "--log.level=DEBUG"
      - "--providers.file.directory=/conf"
      - "--providers.file.watch=true"
      - "--entrypoints.tcp80.address=:80"
      - "--entrypoints.tcp443.address=:443"
    volumes:
      - ./traefik/host:/conf:ro

  traefik:
    <<: *defaults
    image: traefik:latest
    container_name: traefik
    command:
      # - "--log.level=DEBUG"
      - "--accesslog.filepath=/access-logs/access.log" # Used by CrowdSec
      - "--providers.file.directory=/conf"
      - "--providers.file.watch=true"
      - "--providers.docker=true"
      - "--providers.docker.network=traefik"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.constraints=!(LabelRegex(`bjoetiek.env`,`.+`) || LabelRegex(`candylicious.env`,`.+`) || LabelRegex(`oud-turnhoutsgebak.env`,`.+`))"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.proxyProtocol.trustedIPs={{ network_any_private }}"
      - "--entrypoints.websecure.http.middlewares=secure-https@file"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.proxyProtocol.trustedIPs={{ network_any_private }}"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.le-tls.acme.tlsChallenge=true"
      - "--certificatesresolvers.le-tls.acme.email={{ general_mail_admin }}@{{ general_domain_default }}"
      - "--certificatesresolvers.le-tls.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.le-tls-staging.acme.tlsChallenge=true"
      - "--certificatesresolvers.le-tls-staging.acme.email={{ general_mail_admin }}@{{ general_domain_default }}"
      - "--certificatesresolvers.le-tls-staging.acme.storage=/letsencrypt/acme-staging.json"
      - "--certificatesResolvers.le-tls-staging.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--api=true"
      - "--ping.manualrouting=true"
    ports:
      - 127.0.0.1:2080:80
      - 127.0.0.1:2443:443
    networks:
      - traefik
    volumes:
      - ./traefik/bridge:/conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-cert:/letsencrypt/
      - traefik-access-logs:/access-logs
    environment:
      - "TZ={{ general_timezone }}"

  traefik-forward-auth:
    <<: *defaults
    image: thomseddon/traefik-forward-auth:2
    container_name: traefik-forward-auth
    networks:
      - traefik
    environment:
      - "COOKIE_DOMAIN={{ general_domain_default }}"
      - "DEFAULT_PROVIDER=oidc"
      - "SECRET={{ app_traefik_forward_auth_secret }}"
      - "PROVIDERS_OIDC_ISSUER_URL={{ app_traefik_forward_auth_oidc_issuer_url }}"
      - "PROVIDERS_OIDC_CLIENT_ID={{ app_traefik_forward_auth_oidc_client_id }}"
      - "PROVIDERS_OIDC_CLIENT_SECRET={{ app_traefik_forward_auth_oidc_client_secret }}"

  # =========================
  # =       NEXTCLOUD       =
  # =========================
  nextcloud:
    <<: *defaults
    build: ./nextcloud
    container_name: nextcloud
    hostname: nextcloud
    networks:
      - nextcloud
      - traefik
    depends_on:
      - nc-db
    volumes:
      - "{{ general_path_appdata }}/nextcloud/nextcloud/config:/var/www/html"
      - "{{ general_path_appdata }}/nextcloud/nextcloud/data:/var/www/html/data"
    environment:
      - "TZ={{ general_timezone }}"
      - "MYSQL_DATABASE=nextcloud"
      - "MYSQL_USER=nextcloud"
      - "MYSQL_PASSWORD={{ app_nextcloud_db_pass_nextcloud }}"
      - "MYSQL_HOST=nc-db"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.rule=Host(`nextcloud.{{ general_domain_default }}`, `bestanden.{{ general_domain_tuinfeest }}`)"
      - "traefik.http.routers.nextcloud.tls.certresolver=le-tls"
      - "traefik.http.routers.nextcloud.middlewares=nextcloud-redirect-dav@file, nextcloud-redirect-webfinger@file"

  nc-db:
    <<: *defaults
    image: mariadb:10.6
    container_name: nc-db
    command: --transaction-isolation=READ-COMMITTED --log-bin=ROW --innodb-read-only-compressed=OFF
    networks:
      - nextcloud
      - backup-nc-db
    volumes:
      - "{{ general_path_appdata }}/nextcloud/mariadb/data:/var/lib/mysql"
      - nc-db-dump:/backup
    environment:
      - "TZ={{ general_timezone }}"
      - "MYSQL_ROOT_PASSWORD={{ app_nextcloud_db_pass_root }}"
      - "MYSQL_PASSWORD={{ app_nextcloud_db_pass_nextcloud }}"
      - "MYSQL_DATABASE=nextcloud"
      - "MYSQL_USER=nextcloud"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin -u $$MYSQL_USER --password=$$MYSQL_PASSWORD ping || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  # =========================
  # =         NGINX         =
  # =========================
  nginx-tuinfeest-beta:
    <<: *defaults
    image: nginxinc/nginx-unprivileged:alpine
    container_name: nginx-tuinfeest-beta
    networks:
      - traefik
    volumes:
      - "{{ general_path_appdata }}/nginx/tuinfeest-beta:/usr/share/nginx/html:ro"
    environment:
      - "TZ={{ general_timezone }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-tuinfeest-beta.entrypoints=websecure"
      - "traefik.http.routers.nginx-tuinfeest-beta.rule=Host(`beta.{{ general_domain_tuinfeest }}`)"
      - "traefik.http.routers.nginx-tuinfeest-beta.tls.certresolver=le-tls"

  # =========================
  # =         PASSIT        =
  # =========================
  passit:
    <<: *defaults
    image: passit/passit:stable
    container_name: passit
    networks:
      - passit
      - traefik
    environment:
      - "TZ={{ general_timezone }}"
      - "DATABASE_SERVICE_NAME=passit-db"
      - "DATABASE_NAME=passit"
      - "DATABASE_USER=passit"
      - "DATABASE_PASSWORD={{ app_passit_db_pass }}"
      - "DEFAULT_FROM_EMAIL=passit@{{ general_domain_tuinfeest }}"
      - "EMAIL_CONFIRMATION_HOST=passit.{{ general_domain_tuinfeest }}"
      - "IS_PRIVATE_ORG_MODE=True"
      - "PRIVATE_ORG_MODE_DOMAIN_WHITELIST={{ general_domain_tuinfeest }}"
      - "SECRET_KEY={{ app_passit_secret_key }}"
      - "EMAIL_URL=smtp+tls://{{ mailjet_tuinfeest_username }}:{{ mailjet_tuinfeest_password }}@{{ mailjet_host }}:{{ mailjet_port_starttls }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.passit.entrypoints=websecure"
      - "traefik.http.routers.passit.rule=Host(`wachtwoorden.{{ general_domain_tuinfeest }}`)"
      - "traefik.http.routers.passit.tls.certresolver=le-tls"

  passit-db:
    <<: *defaults
    image: postgres:13-alpine
    container_name: passit-db
    networks:
      - passit
    volumes:
      - "{{ general_path_appdata }}/passit/postgres/data:/var/lib/postgresql/data"
      - passit-db-dump:/backup
    environment:
      - "TZ={{ general_timezone }}"
      - "POSTGRES_USER=passit"
      - "POSTGRES_PASSWORD={{ app_passit_db_pass }}"

  # =========================
  # = IMAP SAVE ATTACHMENTS =
  # =========================
  isa-fetchmail:
    <<: *defaults
    image: jenswbe/imap-save-attachments:latest
    container_name: isa-fetchmail
    volumes:
      - ./isa/fetchmailrc:/config/.fetchmailrc
      - isa-output:/output
    environment:
      - "TZ={{ general_timezone }}"
      - "CRON_SCHEDULE=*/15 * * * *"

  isa-rclone:
    <<: *defaults
    image: rclone/rclone:latest
    container_name: isa-rclone
    command: "move /data/ nextcloud:{{ app_isa_rclone_dav_path }} --delete-empty-src-dirs --verbose"
    restart: "no" # Will be called by systemd timer
    volumes:
      - ./isa/rclone:/config/rclone
      - isa-output:/data
    environment:
      - "TZ={{ general_timezone }}"

  # ===========================================================================
  # =   DEAD LINK CHECKER                                                     =
  # =   https://github.com/JenswBE/python-dead-link-checker                   =
  # ===========================================================================
  delic:
    <<: *defaults
    image: jenswbe/dead-link-checker:latest
    container_name: delic
    volumes:
      - "./delic/config.yml:/config.yml"
    environment:
      - "TZ={{ general_timezone }}"

  # ===========================================================================
  # =   Snipe-IT Asset Management                                             =
  # =   https://snipeitapp.com/                                               =
  # ===========================================================================
  snipe-it:
    <<: *defaults
    image: linuxserver/snipe-it:latest
    container_name: snipe-it
    depends_on:
      - snipe-it-db
    networks:
      - snipe-it
      - traefik
    volumes:
      - "{{ general_path_appdata }}/snipe-it/snipe-it/config:/config"
    environment:
      - "TZ={{ general_timezone }}"
      - "NGINX_APP_URL=:80"
      - "MYSQL_PORT_3306_TCP_ADDR=snipe-it-db"
      - "MYSQL_PORT_3306_TCP_PORT=3306"
      - "MYSQL_DATABASE=snipe"
      - "MYSQL_USER=snipe"
      - "MYSQL_PASSWORD={{ app_snipe_it_db_pass_snipe }}"
      - "PGID=1000"
      - "PUID=1000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.snipe-it.entrypoints=websecure"
      - "traefik.http.routers.snipe-it.rule=Host(`assets.{{ general_domain_default }}`)"
      - "traefik.http.routers.snipe-it.tls.certresolver=le-tls"

  snipe-it-db:
    <<: *defaults
    image: mariadb:10
    container_name: snipe-it-db
    networks:
      - snipe-it
    volumes:
      - "{{ general_path_appdata }}/snipe-it/mariadb/data:/var/lib/mysql"
      - "snipe-it-db-dump:/backup"
    environment:
      - "TZ={{ general_timezone }}"
      - "MYSQL_ROOT_PASSWORD={{ app_snipe_it_db_pass_root }}"
      - "MYSQL_PASSWORD={{ app_snipe_it_db_pass_snipe }}"
      - "MYSQL_DATABASE=snipe"
      - "MYSQL_USER=snipe"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin -u $$MYSQL_USER --password=$$MYSQL_PASSWORD ping || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  # ===========================================================================
  # =   BJOETIEK Y                                                            =
  # =   https://github.com/JenswBE/bjoetiek-y-frontend                        =
  # =   https://github.com/JenswBE/go-commerce                                =
  # =   https://github.com/JenswBE/go-commerce-admin                           =
  # ===========================================================================
  bjoetiek-frontend:
    <<: *defaults
    image: jenswbe/bjoetiek-y-frontend:v2.2.1
    container_name: bjoetiek-frontend
    networks:
      - bjoetiek
      - traefik
    environment:
      - "TZ={{ general_timezone }}"
      - "SENTRY_DSN={{ app_bjoetiek_sentry_dsn }}"
      - "BACKEND_URL_INTERNAL=http://bjoetiek-backend:8080"
      - "BACKEND_URL_EXTERNAL=https://backend.{{ general_domain_bjoetiek }}/api"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bjoetiek-frontend.entrypoints=websecure"
      - "traefik.http.routers.bjoetiek-frontend.rule=Host(`{{ general_domain_bjoetiek }}`)"
      - "traefik.http.routers.bjoetiek-frontend.tls.certresolver=le-tls"
      - "traefik.http.routers.bjoetiek-frontend-www-redirect.entrypoints=websecure"
      - "traefik.http.routers.bjoetiek-frontend-www-redirect.rule=Host(`www.{{ general_domain_bjoetiek }}`)"
      - "traefik.http.routers.bjoetiek-frontend-www-redirect.tls.certresolver=le-tls"
      - "traefik.http.routers.bjoetiek-frontend-www-redirect.middlewares=redirect-www-to-root@file"

  bjoetiek-admin:
    <<: *defaults
    image: jenswbe/go-commerce-admin:v0.3.0
    container_name: bjoetiek-admin
    networks:
      - bjoetiek
      - traefik
    environment:
      - "TZ={{ general_timezone }}"
      - "AUTH_CLIENT_ID={{ app_bjoetiek_auth_client_id }}"
      - "AUTH_STATE={{ app_bjoetiek_auth_state }}"
      - "AUTH_URL_AUTHORIZATION=https://auth.{{ general_domain_bjoetiek }}/realms/bjoetiek/protocol/openid-connect/auth"
      - "AUTH_URL_TOKEN=https://auth.{{ general_domain_bjoetiek }}/realms/bjoetiek/protocol/openid-connect/token"
      - "AUTH_URL_USERINFO=https://auth.{{ general_domain_bjoetiek }}/realms/bjoetiek/protocol/openid-connect/userinfo"
      - "AUTH_URL_LOGOUT=https://auth.{{ general_domain_bjoetiek }}/realms/bjoetiek/protocol/openid-connect/logout"
      - "AUTH_URL_LOGOUT_REDIRECT=https://beheer.{{ general_domain_bjoetiek }}/login"
      - "BACKEND_URL_INTERNAL=http://bjoetiek-backend:8080"
      - "BACKEND_URL_EXTERNAL=https://backend.{{ general_domain_bjoetiek }}/api"
      - "PRODUCT_URL_TEMPLATE=https://{{ general_domain_bjoetiek }}/producten/$${p.id}/$${p.name}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bjoetiek-admin.entrypoints=websecure"
      - "traefik.http.routers.bjoetiek-admin.rule=Host(`beheer.{{ general_domain_bjoetiek }}`)"
      - "traefik.http.routers.bjoetiek-admin.tls.certresolver=le-tls"
      - "traefik.http.services.bjoetiek-admin-{{ ansible_hostname }}.loadbalancer.server.port=8080"

  bjoetiek-backend-proxy:
    <<: *defaults
    image: traefik:v2.5
    container_name: bjoetiek-backend-proxy
    command:
      # - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.network=bjoetiek"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.constraints=Label(`bjoetiek.env`,`backend-production`)"
      - "--entrypoints.web.address=:80"
    networks:
      - bjoetiek
      - traefik
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - "TZ={{ general_timezone }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bjoetiek-backend.entrypoints=websecure"
      - "traefik.http.routers.bjoetiek-backend.rule=Host(`backend.{{ general_domain_bjoetiek }}`)"
      - "traefik.http.routers.bjoetiek-backend.tls.certresolver=le-tls"
      - "traefik.http.routers.bjoetiek-backend.middlewares=bjoetiek-cors@file"

  bjoetiek-imgproxy:
    <<: *defaults
    image: darthsim/imgproxy:v2
    container_name: bjoetiek-imgproxy
    environment:
      - "IMGPROXY_KEY={{ app_bjoetiek_image_proxy_key }}"
      - "IMGPROXY_SALT={{ app_bjoetiek_image_proxy_salt }}"
      - "IMGPROXY_LOCAL_FILESYSTEM_ROOT=/images"
      - "IMGPROXY_MAX_SRC_RESOLUTION=64"
    networks:
      - bjoetiek
    volumes:
      - "{{ general_path_appdata }}/bjoetiek/backend/images:/images:ro"
    labels:
      - "bjoetiek.env=backend-production"
      - "traefik.enable=true"
      - "traefik.http.routers.images.entrypoints=web"
      - "traefik.http.routers.images.rule=PathPrefix(`/images`)"
      - "traefik.http.routers.images.middlewares=strip-images-prefix"
      - "traefik.http.middlewares.strip-images-prefix.stripPrefix.prefixes=/images"

  bjoetiek-backend:
    <<: *defaults
    image: jenswbe/go-commerce:v0.4.0
    container_name: bjoetiek-backend
    depends_on:
      - bjoetiek-db
    networks:
      - bjoetiek
    volumes:
      - "{{ general_path_appdata }}/bjoetiek/backend/images:/images"
    environment:
      - "TZ={{ general_timezone }}"
      - "AUTH_OIDC_ISSUER_URL=https://auth.{{ general_domain_bjoetiek }}/realms/bjoetiek"
      - "DATABASE_DEFAULT_HOST=bjoetiek-db"
      - "DATABASE_DEFAULT_USER=bjoetiek"
      - "DATABASE_DEFAULT_PASSWORD={{ app_bjoetiek_db_pass }}"
      - "DATABASE_DEFAULT_DATABASE=bjoetiek"
      - "FEATURES_CONTENT_ENABLED=false"
      - "FEATURES_EVENTS_ENABLED=false"
      - "IMAGE_PROXY_BASE_URL=https://backend.{{ general_domain_bjoetiek }}/images/"
      - "IMAGE_PROXY_KEY={{ app_bjoetiek_image_proxy_key }}"
      - "IMAGE_PROXY_SALT={{ app_bjoetiek_image_proxy_salt }}"
      - "IMAGE_PROXY_ALLOWED_CONFIGS=100:100:FIT,150:150:FIT,400:400:FIT,550:550:FIT"
      - "STORAGE_IMAGES_PATH=/images"
    labels:
      - "bjoetiek.env=backend-production"
      - "traefik.enable=true"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.backend.middlewares=strip-api-prefix"
      - "traefik.http.middlewares.strip-api-prefix.stripPrefix.prefixes=/api"

  bjoetiek-db:
    <<: *defaults
    image: postgres:13-alpine
    container_name: bjoetiek-db
    networks:
      - bjoetiek
    volumes:
      - "{{ general_path_appdata }}/bjoetiek/postgres/data:/var/lib/postgresql/data"
      - bjoetiek-db-dump:/backup
    environment:
      - "TZ={{ general_timezone }}"
      - "POSTGRES_USER=bjoetiek"
      - "POSTGRES_PASSWORD={{ app_bjoetiek_db_pass }}"

  # ===========================================================================
  # =   BJOETIEK Y - Test                                                     =
  # =   https://github.com/JenswBE/bjoetiek-y-frontend                        =
  # =   https://github.com/JenswBE/go-commerce                                =
  # =   https://github.com/JenswBE/go-commerce-admin                          =
  # ===========================================================================
  bjoetiek-test-frontend:
    <<: *defaults
    image: jenswbe/bjoetiek-y-frontend:latest
    container_name: bjoetiek-test-frontend
    networks:
      - bjoetiek-test
      - traefik
    environment:
      - "TZ={{ general_timezone }}"
      - "SENTRY_DSN={{ app_bjoetiek_sentry_dsn }}"
      - "BACKEND_URL_INTERNAL=http://bjoetiek-test-backend:8080/api"
      - "BACKEND_URL_EXTERNAL=https://test-backend.{{ general_domain_bjoetiek }}/api"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bjoetiek-test-frontend.entrypoints=websecure"
      - "traefik.http.routers.bjoetiek-test-frontend.rule=Host(`test.{{ general_domain_bjoetiek }}`)"
      - "traefik.http.routers.bjoetiek-test-frontend.tls.certresolver=le-tls"

  bjoetiek-test-imgproxy:
    <<: *defaults
    image: darthsim/imgproxy:latest
    container_name: bjoetiek-test-imgproxy
    environment:
      - "IMGPROXY_KEY={{ app_bjoetiek_test_image_proxy_key }}"
      - "IMGPROXY_SALT={{ app_bjoetiek_test_image_proxy_salt }}"
      - "IMGPROXY_LOCAL_FILESYSTEM_ROOT=/images"
      - "IMGPROXY_MAX_SRC_RESOLUTION=64"
    networks:
      - traefik
    volumes:
      - "{{ general_path_appdata }}/bjoetiek/backend-test/images:/images:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bjoetiek-test-imgproxy.entrypoints=websecure"
      - "traefik.http.routers.bjoetiek-test-imgproxy.rule=Host(`test-backend.{{ general_domain_bjoetiek }}`) && PathPrefix(`/images`)"
      - "traefik.http.routers.bjoetiek-test-imgproxy.tls.certresolver=le-tls"
      - "traefik.http.routers.bjoetiek-test-imgproxy.middlewares=strip-images-prefix"
      - "traefik.http.middlewares.strip-images-prefix.stripPrefix.prefixes=/images"

  bjoetiek-test-backend:
    <<: *defaults
    image: jenswbe/go-commerce:latest
    container_name: bjoetiek-test-backend
    depends_on:
      - bjoetiek-test-db
    networks:
      - bjoetiek-test
      - traefik
    volumes:
      - "{{ general_path_appdata }}/bjoetiek/backend-test/images:/images"
    environment:
      - "TZ={{ general_timezone }}"
      - "AUTH_OIDC_ISSUER_URL={{ app_bjoetiek_test_auth_oidc_issuer_url }}"
      - "AUTH_OIDC_CLIENT_ID={{ app_bjoetiek_test_auth_oidc_client_id }}"
      - "AUTH_OIDC_CLIENT_SECRET={{ app_bjoetiek_test_auth_oidc_client_secret }}"
      - "AUTH_SESSION_AUTH_KEY={{ app_bjoetiek_test_auth_session_auth_key }}"
      - "AUTH_SESSION_ENC_KEY={{ app_bjoetiek_test_auth_session_enc_key }}"
      - "DATABASE_DEFAULT_HOST=bjoetiek-test-db"
      - "DATABASE_DEFAULT_USER=bjoetiek-test"
      - "DATABASE_DEFAULT_PASSWORD=bjoetiek-test"
      - "DATABASE_DEFAULT_DATABASE=bjoetiek-test"
      - "FEATURES_CONTENT_ENABLED=false"
      - "FEATURES_EVENTS_ENABLED=false"
      - "FEATURES_PRODUCTS_PUBLIC_URL_TEMPLATE=https://test.{{ general_domain_bjoetiek }}/{% raw %}producten/{{ .ID.String }}/{{ .Name }}{% endraw %}"
      - "IMAGE_PROXY_BASE_URL=https://test-backend.{{ general_domain_bjoetiek }}/images/"
      - "IMAGE_PROXY_KEY={{ app_bjoetiek_test_image_proxy_key }}"
      - "IMAGE_PROXY_SALT={{ app_bjoetiek_test_image_proxy_salt }}"
      - "IMAGE_PROXY_ALLOWED_CONFIGS=100:100:FIT,150:150:FIT,400:400:FIT,550:550:FIT"
      - "STORAGE_IMAGES_PATH=/images"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bjoetiek-test-backend.entrypoints=websecure"
      - >-
        traefik.http.routers.bjoetiek-test-backend.rule=Host(
          `test-backend.{{ general_domain_bjoetiek }}`,
          `test-beheer.{{ general_domain_bjoetiek }}`,
        ) && !PathPrefix(`/images`)
      - "traefik.http.routers.bjoetiek-test-backend.tls.certresolver=le-tls"
      - "traefik.http.routers.bjoetiek-test-backend.middlewares=bjoetiek-cors@file"

  bjoetiek-test-db:
    <<: *defaults
    image: postgres:13-alpine
    container_name: bjoetiek-test-db
    networks:
      - bjoetiek-test
    volumes:
      - "bjoetiek-test-db-data:/var/lib/postgresql/data"
    environment:
      - "TZ={{ general_timezone }}"
      - "POSTGRES_USER=bjoetiek-test"
      - "POSTGRES_PASSWORD=bjoetiek-test"

  # ===========================================================================
  # =   SPELLEBEL                                                             =
  # =   https://github.com/JenswBE/spellebel-frontend                         =
  # ===========================================================================
  spellebel:
    <<: *defaults
    image: jenswbe/spellebel-frontend:stable
    container_name: spellebel
    networks:
      - traefik
    environment:
      - "TZ={{ general_timezone }}"
      - "SENTRY_DSN={{ app_spellebel_sentry_dsn }}"
      - "SMTP_HOST={{ mailjet_host }}"
      - "SMTP_PORT={{ mailjet_port_ssl }}"
      - "SMTP_USERNAME={{ mailjet_username }}"
      - "SMTP_PASSWORD={{ mailjet_password }}"
      - "SMTP_FROM=www.spellebel.be <spellebel@{{ general_domain_default }}>"
      - "SMTP_TO=Team Spellebel <spulmer-gezocht@{{ general_domain_spellebel }}>"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.spellebel.entrypoints=websecure"
      - >-
        traefik.http.routers.spellebel.rule=Host(
          `{{ general_domain_spellebel }}`,
          `nieuw.{{ general_domain_spellebel }}`,
        )
      - "traefik.http.routers.spellebel.tls.certresolver=le-tls"
      - "traefik.http.services.spellebel-{{ ansible_hostname }}.loadbalancer.server.port=8080"
      # WWW redirect
      - "traefik.http.routers.spellebel-www-redirect.entrypoints=websecure"
      - "traefik.http.routers.spellebel-www-redirect.rule=Host(`www.{{ general_domain_spellebel }}`)"
      - "traefik.http.routers.spellebel-www-redirect.tls.certresolver=le-tls"
      - "traefik.http.routers.spellebel-www-redirect.middlewares=redirect-www-to-root@file"

  spellebel-test:
    <<: *defaults
    image: jenswbe/spellebel-frontend:latest
    container_name: spellebel-test
    networks:
      - traefik
    environment:
      - "TZ={{ general_timezone }}"
      - "SMTP_HOST={{ mailjet_host }}"
      - "SMTP_PORT={{ mailjet_port_ssl }}"
      - "SMTP_USERNAME={{ mailjet_username }}"
      - "SMTP_PASSWORD={{ mailjet_password }}"
      - "SMTP_FROM=www.spellebel.be <website-spellebel@{{ general_domain_default }}>"
      - "SMTP_TO=Team Spellebel <spulmer-gezocht@{{ general_domain_spellebel }}>"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.spellebel-test.entrypoints=websecure"
      - "traefik.http.routers.spellebel-test.rule=Host(`test.{{ general_domain_spellebel }}`)"
      - "traefik.http.routers.spellebel-test.tls.certresolver=le-tls"
      - "traefik.http.services.spellebel-test-{{ ansible_hostname }}.loadbalancer.server.port=8080"

  drpr:
    <<: *defaults
    image: jenswbe/docker-rest-puller-restarter:stable
    container_name: drpr
    networks:
      - traefik
    environment:
      - "TZ={{ general_timezone }}"
      - "SERVER_DEBUG=True"
    volumes:
      - "./docker-rest-puller-restarter/config.yml:/config.yml:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.drpr.entrypoints=websecure"
      - "traefik.http.routers.drpr.rule=Host(`drpr-{{ ansible_hostname }}.{{ general_domain_default }}`)"
      - "traefik.http.routers.drpr.tls.certresolver=le-tls"
      - "traefik.http.services.drpr-{{ ansible_hostname }}.loadbalancer.server.port=8080"

  # ===========================================================================
  # =   CANDYLICIOUS                                                          =
  # =   https://github.com/JenswBE/candylicious-frontend                      =
  # ===========================================================================
  candylicious-test-frontend:
    <<: *defaults
    image: jenswbe/candylicious-frontend:latest
    container_name: candylicious-test-frontend
    networks:
      - candylicious-test
      - traefik
    environment:
      - "TZ={{ general_timezone }}"
      - "BACKEND_URL_INTERNAL=http://candylicious-test-backend:8080/api"
      - "BACKEND_URL_EXTERNAL=https://test-backend.{{ general_domain_candylicious }}/api"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.candylicious-test-frontend.entrypoints=websecure"
      - "traefik.http.routers.candylicious-test-frontend.rule=Host(`test.{{ general_domain_candylicious }}`)"
      - "traefik.http.routers.candylicious-test-frontend.tls.certresolver=le-tls"

  candylicious-test-imgproxy:
    <<: *defaults
    image: darthsim/imgproxy:latest
    container_name: candylicious-test-imgproxy
    environment:
      - "IMGPROXY_KEY={{ app_candylicious_test_image_proxy_key }}"
      - "IMGPROXY_SALT={{ app_candylicious_test_image_proxy_salt }}"
      - "IMGPROXY_LOCAL_FILESYSTEM_ROOT=/images"
      - "IMGPROXY_MAX_SRC_RESOLUTION=64"
    networks:
      - traefik
    volumes:
      - "{{ general_path_appdata }}/candylicious/backend-test/images:/images:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.candylicious-test-imgproxy.entrypoints=websecure"
      - "traefik.http.routers.candylicious-test-imgproxy.rule=Host(`test-backend.{{ general_domain_candylicious }}`) && PathPrefix(`/images`)"
      - "traefik.http.routers.candylicious-test-imgproxy.tls.certresolver=le-tls"
      - "traefik.http.routers.candylicious-test-imgproxy.middlewares=strip-images-prefix"
      - "traefik.http.middlewares.strip-images-prefix.stripPrefix.prefixes=/images"

  candylicious-test-backend:
    <<: *defaults
    image: jenswbe/go-commerce:latest
    container_name: candylicious-test-backend
    depends_on:
      - candylicious-test-db
    networks:
      - candylicious-test
      - traefik
    volumes:
      - "{{ general_path_appdata }}/candylicious/backend-test/images:/images"
    environment:
      - "TZ={{ general_timezone }}"
      - "AUTH_OIDC_ISSUER_URL={{ app_candylicious_test_auth_oidc_issuer_url }}"
      - "AUTH_OIDC_CLIENT_ID={{ app_candylicious_test_auth_oidc_client_id }}"
      - "AUTH_OIDC_CLIENT_SECRET={{ app_candylicious_test_auth_oidc_client_secret }}"
      - "AUTH_SESSION_AUTH_KEY={{ app_candylicious_test_auth_session_auth_key }}"
      - "AUTH_SESSION_ENC_KEY={{ app_candylicious_test_auth_session_enc_key }}"
      - "DATABASE_DEFAULT_HOST=candylicious-test-db"
      - "DATABASE_DEFAULT_USER=candylicious-test"
      - "DATABASE_DEFAULT_PASSWORD=candylicious-test"
      - "DATABASE_DEFAULT_DATABASE=candylicious-test"
      - "FEATURES_CONTENT_LIST=vacatures:HTML"
      - "FEATURES_EVENTS_WHOLE_DAYS_ONLY=true"
      - "FEATURES_MANUFACTURERS_ENABLED=false"
      - "FEATURES_PRODUCTS_PUBLIC_URL_TEMPLATE=https://test.{{ general_domain_candylicious }}/{% raw %}webshop/{{ .ID.String }}/{{ .Name }}{% endraw %}"
      - "FEATURES_PRODUCTS_SHORT_DESCRIPTION_ONLY=true"
      - "IMAGE_PROXY_BASE_URL=https://test-backend.{{ general_domain_candylicious }}/images/"
      - "IMAGE_PROXY_KEY={{ app_candylicious_test_image_proxy_key }}"
      - "IMAGE_PROXY_SALT={{ app_candylicious_test_image_proxy_salt }}"
      - "IMAGE_PROXY_ALLOWED_CONFIGS=100:100:FIT,150:150:FIT,400:400:FIT,550:550:FIT"
      - "STORAGE_IMAGES_PATH=/images"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.candylicious-test-backend.entrypoints=websecure"
      - >-
        traefik.http.routers.candylicious-test-backend.rule=Host(
          `test-backend.{{ general_domain_candylicious }}`,
          `test-beheer.{{ general_domain_candylicious }}`,
        ) && !PathPrefix(`/images`)
      - "traefik.http.routers.candylicious-test-backend.tls.certresolver=le-tls"
      - "traefik.http.routers.candylicious-test-backend.middlewares=candylicious-cors@file"

  candylicious-test-db:
    <<: *defaults
    image: postgres:13-alpine
    container_name: candylicious-test-db
    networks:
      - candylicious-test
    volumes:
      - "candylicious-test-db-data:/var/lib/postgresql/data"
    environment:
      - "TZ={{ general_timezone }}"
      - "POSTGRES_USER=candylicious-test"
      - "POSTGRES_PASSWORD=candylicious-test"

  # ===========================================================================
  # =   OUD-TURNHOUTS GEBAK                                                   =
  # =   https://github.com/JenswBE/oud-turnhoutsgebak-frontend                =
  # ===========================================================================
  oud-turnhoutsgebak-frontend:
    <<: *defaults
    image: jenswbe/oud-turnhoutsgebak-frontend:latest
    container_name: oud-turnhoutsgebak-frontend
    networks:
      - oud-turnhoutsgebak-test
      - traefik
    environment:
      - "TZ={{ general_timezone }}"
      - "BACKEND_URL_INTERNAL=http://oud-turnhoutsgebak-test-backend:8080/api"
      - "BACKEND_URL_EXTERNAL=https://test-backend.{{ general_domain_oud_turnhoutsgebak }}/api"
    labels:
      - "traefik.enable=true"
      # Main (serve WIP page)
      - "traefik.http.routers.oud-turnhoutsgebak-frontend.entrypoints=websecure"
      - "traefik.http.routers.oud-turnhoutsgebak-frontend.rule=Host(`{{ general_domain_oud_turnhoutsgebak }}`)"
      - "traefik.http.routers.oud-turnhoutsgebak-frontend.tls.certresolver=le-tls"
      - "traefik.http.routers.oud-turnhoutsgebak-frontend.service=wip-{{ ansible_hostname }}"
      # WWW redirect
      - "traefik.http.routers.oud-turnhoutsgebak-frontend-www-redirect.entrypoints=websecure"
      - "traefik.http.routers.oud-turnhoutsgebak-frontend-www-redirect.rule=Host(`www.{{ general_domain_oud_turnhoutsgebak }}`)"
      - "traefik.http.routers.oud-turnhoutsgebak-frontend-www-redirect.tls.certresolver=le-tls"
      - "traefik.http.routers.oud-turnhoutsgebak-frontend-www-redirect.middlewares=redirect-www-to-root@file"
      # Test
      - "traefik.http.routers.oud-turnhoutsgebak-frontend-test.entrypoints=websecure"
      - "traefik.http.routers.oud-turnhoutsgebak-frontend-test.rule=Host(`test.{{ general_domain_oud_turnhoutsgebak }}`)"
      - "traefik.http.routers.oud-turnhoutsgebak-frontend-test.tls.certresolver=le-tls"

  oud-turnhoutsgebak-test-backend:
    <<: *defaults
    image: jenswbe/go-commerce:latest
    container_name: oud-turnhoutsgebak-test-backend
    depends_on:
      - oud-turnhoutsgebak-test-db
    networks:
      - oud-turnhoutsgebak-test
      - traefik
    environment:
      - "TZ={{ general_timezone }}"
      - "AUTH_OIDC_ISSUER_URL={{ app_candylicious_test_auth_oidc_issuer_url }}"
      - "AUTH_OIDC_CLIENT_ID={{ app_candylicious_test_auth_oidc_client_id }}"
      - "AUTH_OIDC_CLIENT_SECRET={{ app_candylicious_test_auth_oidc_client_secret }}"
      - "AUTH_SESSION_AUTH_KEY={{ app_candylicious_test_auth_session_auth_key }}"
      - "AUTH_SESSION_ENC_KEY={{ app_candylicious_test_auth_session_enc_key }}"
      - "DATABASE_DEFAULT_HOST=oud-turnhoutsgebak-test-db"
      - "DATABASE_DEFAULT_USER=oud-turnhoutsgebak-test"
      - "DATABASE_DEFAULT_PASSWORD=oud-turnhoutsgebak-test"
      - "DATABASE_DEFAULT_DATABASE=oud-turnhoutsgebak-test"
      - "FEATURES_STARTPAGE_FEATURE=Events"
      - "FEATURES_CATEGORIES_ENABLED=false"
      - "FEATURES_MANUFACTURERS_ENABLED=false"
      - "FEATURES_PRODUCTS_ENABLED=false"
      - "FEATURES_CONTENT_LIST=vacatures:HTML"
      - "FEATURES_EVENTS_WHOLE_DAYS_ONLY=true"
      - "IMAGE_PROXY_ALLOWED_CONFIGS=*"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.oud-turnhoutsgebak-test-backend.entrypoints=websecure"
      - >-
        traefik.http.routers.oud-turnhoutsgebak-test-backend.rule=Host(
          `test-backend.{{ general_domain_oud_turnhoutsgebak }}`,
          `test-beheer.{{ general_domain_oud_turnhoutsgebak }}`,
        )
      - "traefik.http.routers.oud-turnhoutsgebak-test-backend.tls.certresolver=le-tls"
      - "traefik.http.routers.oud-turnhoutsgebak-test-backend.middlewares=oud-turnhoutsgebak-cors@file"

  oud-turnhoutsgebak-test-db:
    <<: *defaults
    image: postgres:13-alpine
    container_name: oud-turnhoutsgebak-test-db
    networks:
      - oud-turnhoutsgebak-test
    volumes:
      - "oud-turnhoutsgebak-test-db-data:/var/lib/postgresql/data"
    environment:
      - "TZ={{ general_timezone }}"
      - "POSTGRES_USER=oud-turnhoutsgebak-test"
      - "POSTGRES_PASSWORD=oud-turnhoutsgebak-test"

  # =========================
  # =      GOAT COUNTER     =
  # =========================
  goatcounter:
    <<: *defaults
    build:
      context: goatcounter
      args:
        - "version={{ app_goatcounter_version }}"
    container_name: goatcounter
    user: "{{ ansible_real_user_id }}"
    networks:
      - traefik
    volumes:
      - "{{ general_path_appdata }}/goatcounter/db:/db"
    environment:
      - "TZ={{ general_timezone }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.goatcounter.entrypoints=websecure"
      - "traefik.http.routers.goatcounter.tls.certresolver=le-tls"
      - >-
        traefik.http.routers.goatcounter.rule=Host(
          `stats.{{ general_domain_default }}`,
          `stats-spellebel.{{ general_domain_default }}`,
          `stats.{{ general_domain_bjoetiek }}`,
          `stats.{{ general_domain_klokracing }}`,
          `stats.{{ general_domain_tuinfeest }}`,
        )

  # =========================
  # =         UPTIME        =
  # =========================
  uptime-kuma:
    <<: *defaults
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    volumes:
      - "{{ general_path_appdata }}/uptime-kuma/data:/app/data"
    networks:
      - traefik
    environment:
      - "TZ={{ general_timezone }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.uptime-kuma.entrypoints=websecure"
      - "traefik.http.routers.uptime-kuma.rule=Host(`uptime.{{ general_domain_default }}`)"
      - "traefik.http.routers.uptime-kuma.tls.certresolver=le-tls"
      - "traefik.http.routers.uptime-kuma.middlewares=forward-auth@file"
      - "traefik.http.services.uptime-kuma-{{ ansible_hostname }}.loadbalancer.server.port=3001"

  # =========================
  # =          AUTH         =
  # =========================
  keycloak:
    <<: *defaults
    build: ./keycloak
    container_name: keycloak
    depends_on:
      - keycloak-db
    networks:
      - keycloak
      - traefik
    environment:
      - "TZ={{ general_timezone }}"
      - "KC_DB_URL_HOST=keycloak-db"
      - "KC_DB_URL_DATABASE=keycloak"
      - "KC_DB_USERNAME=keycloak"
      - "KC_DB_PASSWORD={{ app_keycloak_db_pass }}"
      - "KC_DB_SCHEMA=public"
      - "KC_HOSTNAME=auth.{{ general_domain_default }}"
      - "KC_HOSTNAME_STRICT=false" # Hostnames validated by Traefik
      - "KC_PROXY=edge"
      # Only for initial setup
      # - KEYCLOAK_ADMIN=admin
      # - KEYCLOAK_ADMIN_PASSWORD=change_me
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.entrypoints=websecure"
      - "traefik.http.routers.keycloak.tls.certresolver=le-tls"
      - >-
        traefik.http.routers.keycloak.rule=Host(
          `auth.{{ general_domain_default }}`,
          `auth.{{ general_domain_bjoetiek }}`,
          `auth.{{ general_domain_candylicious }}`,
        )
      - "traefik.http.services.keycloak-{{ ansible_hostname }}.loadbalancer.server.port=8080"

  keycloak-db:
    <<: *defaults
    image: postgres:12-alpine
    container_name: keycloak-db
    networks:
      - keycloak
    volumes:
      - "{{ general_path_appdata }}/keycloak/postgres/data:/var/lib/postgresql/data"
      - keycloak-db-dump:/backup
    environment:
      - "TZ={{ general_timezone }}"
      - "POSTGRES_USER=keycloak"
      - "POSTGRES_PASSWORD={{ app_keycloak_db_pass }}"
      - "POSTGRES_DB=keycloak"

  # =========================
  # =      PLACEHOLDERS     =
  # =========================
  maintenance:
    <<: *defaults
    image: nginxinc/nginx-unprivileged:alpine
    container_name: maintenance
    user: "{{ ansible_real_user_id }}"
    networks:
      - traefik
    volumes:
      - "./nginx/maintenance/public:/usr/share/nginx/html:ro"
      - "./nginx/maintenance/nginx.conf:/etc/nginx/conf.d/default.conf:ro"
    environment:
      - "TZ={{ general_timezone }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.maintenance.entrypoints=websecure"
      - "traefik.http.routers.maintenance.rule=Host(`maintenance.{{ general_domain_default }}`)"
      - "traefik.http.routers.maintenance.tls.certresolver=le-tls"
      - "traefik.http.services.maintenance-{{ ansible_hostname }}.loadbalancer.server.port=8080"

  wip:
    <<: *defaults
    image: nginxinc/nginx-unprivileged:alpine
    container_name: wip
    user: "{{ ansible_real_user_id }}"
    networks:
      - traefik
    volumes:
      - "./nginx/wip/public:/usr/share/nginx/html:ro"
      - "./nginx/wip/nginx.conf:/etc/nginx/conf.d/default.conf:ro"
    environment:
      - "TZ={{ general_timezone }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wip.entrypoints=websecure"
      - "traefik.http.routers.wip.rule=Host(`wip.{{ general_domain_default }}`)"
      - "traefik.http.routers.wip.tls.certresolver=le-tls"
      - "traefik.http.services.wip-{{ ansible_hostname }}.loadbalancer.server.port=8080"

  # =========================
  # =        CROWDSEC       =
  # =========================
  crowdsec:
    <<: *defaults
    image: crowdsecurity/crowdsec:{{ crowdsec_version }}
    container_name: crowdsec
    ports:
      - 127.0.0.1:9000:8080
    environment:
      TZ: "{{ general_timezone }}"
      COLLECTIONS: >-
        crowdsecurity/http-cve
        crowdsecurity/linux
        crowdsecurity/traefik
      GID: "{{ ansible_real_group_id }}"
      BOUNCER_KEY_firewall: "{{ app_crowdsec_bouncer_firewall_key }}"
    volumes:
      # Config
      - ./crowdsec/acquis.yaml:/etc/crowdsec/acquis.yaml
      - crowdsec-db:/var/lib/crowdsec/data/
      - crowdsec-config:/etc/crowdsec/
      # Logs
      - /var/log/auth.log:/var/log/auth.log:ro
      - traefik-access-logs:/var/log/traefik:ro

  # =========================
  # =         BACKUP        =
  # =========================
  nc-calcardbackup:
    <<: *defaults
    image: waja/calcardbackup:latest
    container_name: nc-calcardbackup
    networks:
      - backup-nc-db
    depends_on:
      - nc-db
    volumes:
      - "{{ general_path_appdata }}/nextcloud/nextcloud/config/config:/nextcloud/config:ro"
      - nc-calcardbackup:/backup
    environment:
      - "TZ={{ general_timezone }}"
      # Disable cron
      - CRON_TIME="#"

  borgmatic:
    <<: *defaults
    image: b3vis/borgmatic:latest
    container_name: borgmatic
    privileged: true # Required for borg mount
    cap_add:
      - SYS_ADMIN # Required for borg mount
    volumes:
      # Backup locations
      - "bjoetiek-db-dump:/mnt/source/bjoetiek/dbdump:ro"
      - "{{ general_path_appdata }}/bjoetiek/backend:/mnt/source/bjoetiek/backend:ro"
      - "{{ general_path_appdata }}/goatcounter/db:/mnt/source/goatcounter/db:ro"
      - "keycloak-db-dump:/mnt/source/keycloak/dbdump:ro"
      - "nc-db-dump:/mnt/source/nextcloud/dbdump:ro"
      - "nc-calcardbackup:/mnt/source/nextcloud/calcardbackup:ro"
      - "{{ general_path_appdata }}/nextcloud/nextcloud/data:/mnt/source/nextcloud/data:ro"
      - "{{ general_path_appdata }}/nextcloud/nextcloud/config:/mnt/source/nextcloud/config:ro"
      - "passit-db-dump:/mnt/source/passit/dbdump:ro"
      - "snipe-it-db-dump:/mnt/source/snipe-it/dbdump:ro"
      - "{{ general_path_appdata }}/uptime-kuma/data:/mnt/source/uptime-kuma/data:ro"
      # Config and cache
      - "./borgmatic/borgmatic.d:/etc/borgmatic.d"
      - "./borgmatic/ssh:/root/.ssh"
      - "{{ general_path_appdata }}/borgmatic/borgmatic/config:/root/.config/borg"
      - "{{ general_path_appdata }}/borgmatic/borgmatic/cache:/root/.cache/borg"
      - "{{ general_path_appdata }}/borgmatic/borgmatic/restore:/mnt/restore"
    devices:
      - "/dev/fuse:/dev/fuse" # Required for borg mount
    environment:
      - "TZ={{ general_timezone }}"
      - "BORG_PASSPHRASE={{ app_borgmatic_borg_passphrase }}"
      - "BORG_HOSTNAME_IS_UNIQUE=yes" # Automatically removes stale locks
      - "BORG_HOST_ID={{ ansible_hostname }}"

# #################################################################
# #                            VOLUMES                            #
# #################################################################
volumes:
  bjoetiek-db-dump:
  bjoetiek-test-db-data:
  candylicious-test-db-data:
  crowdsec-config:
  crowdsec-db:
  isa-output:
  keycloak-db-dump:
  nc-db-dump:
  nc-calcardbackup:
  oud-turnhoutsgebak-test-db-data:
  passit-db-dump:
  snipe-it-db-dump:
  traefik-access-logs:
  traefik-cert:

# #################################################################
# #                            NETWORKS                           #
# #################################################################
networks:
  bjoetiek:
    name: bjoetiek

  bjoetiek-test:
    name: bjoetiek-test

  candylicious:
    name: candylicious

  candylicious-test:
    name: candylicious-test

  backup-nc-db:
    name: backup-nc-db

  keycloak:
    name: keycloak

  nextcloud:
    name: nextcloud

  oud-turnhoutsgebak:
    name: oud-turnhoutsgebak

  oud-turnhoutsgebak-test:
    name: oud-turnhoutsgebak-test

  passit:
    name: passit

  snipe-it:
    name: snipe-it

  traefik:
    name: traefik
